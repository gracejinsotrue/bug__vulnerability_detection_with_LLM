[
    {
        "baseNode": {
            "identity": 9490,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-cryptofuzz-66801"
            }
        },
        "relation1": {
            "identity": 19506,
            "start": 9490,
            "end": 9497,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 9497,
            "labels": [
                "FileModification"
            ],
            "properties": {
                "diffEmbeddings": [
                    0.0888797864317894,
                    0.04393002763390541,
                    -0.10566047579050064,
                    0.009922233410179615,
                    -0.038173459470272064,
                    0.07266470044851303,
                    -0.042015984654426575,
                    0.06768001616001129,
                    -0.035440631210803986,
                    -0.07971999049186707,
                    -0.045486874878406525,
                    0.04862461984157562,
                    -0.09904208034276962,
                    0.0021342183463275433,
                    0.0602586604654789,
                    0.00286560645326972,
                    -0.019352475181221962,
                    0.06323781609535217,
                    -0.04383574053645134,
                    -0.03012223169207573,
                    -0.03371640667319298,
                    -0.05635930597782135,
                    -0.035876475274562836,
                    0.062343791127204895,
                    0.04277569055557251,
                    -0.015380826778709888,
                    -0.02619864232838154,
                    -0.0018012858927249908,
                    -0.10014364123344421,
                    0.061681173741817474,
                    -0.04794410616159439,
                    -0.07719911634922028,
                    -0.0066645084880292416,
                    -0.04620771482586861,
                    0.06379425525665283,
                    -0.03914887458086014,
                    0.004090229049324989,
                    0.012216400355100632,
                    0.03985907509922981,
                    0.06971116364002228,
                    -0.028155166655778885,
                    -0.04799104481935501,
                    0.03349559009075165,
                    0.01676715351641178,
                    -0.0394204817712307,
                    0.05905277654528618,
                    -0.00650450075045228,
                    -0.07483277469873428,
                    -0.02770189382135868,
                    -0.05430852249264717,
                    -0.012821036390960217,
                    -0.026645300909876823,
                    -0.06887584924697876,
                    -0.021118517965078354,
                    0.01760866679251194,
                    0.07198093086481094,
                    -0.05134684965014458,
                    0.020059742033481598,
                    -0.023522183299064636,
                    0.08791106939315796,
                    -0.100164994597435,
                    -0.12032169103622437,
                    0.11654211580753326,
                    -0.1012657880783081,
                    0.02842736430466175,
                    -0.005847189575433731,
                    0.055685143917798996,
                    -0.006029173731803894,
                    0.09444938600063324,
                    -0.010751212015748024,
                    0.07758475840091705,
                    0.09991912543773651,
                    -0.08877401053905487,
                    -0.03494620323181152,
                    0.016138726845383644,
                    0.022786948829889297,
                    0.0112341633066535,
                    -0.07455673813819885,
                    0.034974951297044754,
                    -0.025502223521471024,
                    0.028852874413132668,
                    0.03261023014783859,
                    -0.004305828828364611,
                    -0.01698932610452175,
                    -0.03166193887591362,
                    -0.06450159102678299,
                    0.03754241392016411,
                    -0.011728517711162567,
                    -0.02106415294110775,
                    0.001480058766901493,
                    -0.006077606696635485,
                    -0.056642111390829086,
                    -0.01725970394909382,
                    0.033265650272369385,
                    -0.0614488422870636,
                    -0.019763272255659103,
                    0.02976386621594429,
                    -0.07452316582202911,
                    -0.0007729707285761833,
                    0.02133060432970524,
                    -0.09603332728147507,
                    -0.12450388073921204,
                    -0.020879685878753662,
                    -0.09482007473707199,
                    -0.01611385866999626,
                    0.02981201559305191,
                    -0.026195820420980453,
                    0.012508301064372063,
                    0.0130704864859581,
                    -0.06593729555606842,
                    -0.040880054235458374,
                    0.06411018967628479,
                    -0.0010300208814442158,
                    -0.03771954029798508,
                    0.020366419106721878,
                    -0.06603993475437164,
                    -0.045334793627262115,
                    -0.015839533880352974,
                    -0.04776720330119133,
                    0.02827250212430954,
                    0.12692564725875854,
                    0.0027620214968919754,
                    0.06571045517921448,
                    0.013686859980225563,
                    -0.05277550220489502,
                    0.04185129329562187,
                    -0.025443285703659058,
                    -0.07490085065364838,
                    0.08461933583021164,
                    0.01192356739193201,
                    -0.056746967136859894,
                    -0.027747299522161484,
                    -0.02225702628493309,
                    0.031131364405155182,
                    -0.02651044726371765,
                    0.0005755447782576084,
                    0.0627124235033989,
                    0.07982385158538818,
                    0.05365034192800522,
                    -0.035867348313331604,
                    -0.024308189749717712,
                    0.11703360080718994,
                    0.017745714634656906,
                    0.08395939320325851,
                    0.04865305870771408,
                    0.01541487779468298,
                    -0.022084282711148262,
                    -0.019301671534776688,
                    -0.1135437935590744,
                    -0.007874906063079834,
                    -0.0012097291182726622,
                    -0.04031354561448097,
                    -0.17279274761676788,
                    0.0009566294029355049,
                    0.030389901250600815,
                    -0.02807857096195221,
                    -0.05395649001002312,
                    0.005925656296312809,
                    0.03377726301550865,
                    -0.03860059380531311,
                    -0.023551635444164276,
                    0.01824776455760002,
                    -0.06804001331329346,
                    0.10569947212934494,
                    0.03776030242443085,
                    0.08301007002592087,
                    -0.07488751411437988,
                    -0.15265503525733948,
                    -0.14107590913772583,
                    -0.011082353070378304,
                    0.039874427020549774,
                    0.1282031536102295,
                    -0.03628460690379143,
                    -0.03578421473503113,
                    0.02590763196349144,
                    -0.005324417259544134,
                    0.008850933983922005,
                    0.06804065406322479,
                    0.040313784033060074,
                    0.02342897653579712,
                    0.07220663875341415,
                    -0.000628158450126648,
                    -0.10774166882038116,
                    0.01183960773050785,
                    0.052051834762096405,
                    0.038247764110565186,
                    -0.04652418941259384,
                    -0.06459397077560425,
                    -0.051204483956098557,
                    0.01765911839902401,
                    0.11241040378808975,
                    -0.03365076705813408,
                    0.12184110283851624,
                    -0.002893545664846897,
                    0.0003793761134147644,
                    0.033571697771549225,
                    -0.03276650607585907,
                    -0.018000900745391846,
                    -0.018516981974244118,
                    -0.055972740054130554,
                    -0.017898647114634514,
                    -0.08968108892440796,
                    0.021250611171126366,
                    0.037916023284196854,
                    -0.04292898625135422,
                    -0.013560298830270767,
                    0.018365805968642235,
                    -0.022275591269135475,
                    -0.0367293655872345,
                    0.12165272235870361,
                    0.046114228665828705,
                    -0.01685311272740364,
                    0.09256128966808319,
                    -0.010521559044718742,
                    0.01770487055182457,
                    -0.03592996299266815,
                    -0.02048986591398716,
                    0.03823975473642349,
                    -0.07400883734226227,
                    0.10393860191106796,
                    -0.0719664916396141,
                    -0.10318167507648468,
                    -0.018624482676386833,
                    -0.013461614027619362,
                    0.06564348191022873,
                    -0.024374647065997124,
                    -0.021108776330947876,
                    0.1289122849702835,
                    0.08916302025318146,
                    -0.08248253166675568,
                    -0.026745274662971497,
                    -0.03987092524766922,
                    -0.012124701403081417,
                    -0.1228347197175026,
                    -0.015390581451356411,
                    -0.02625240385532379,
                    -0.0042998516000807285,
                    -0.009465733543038368,
                    -0.002956928452476859,
                    0.05668952316045761,
                    -0.08459432423114777,
                    -0.0524953156709671,
                    -0.043157752603292465,
                    -0.013292167335748672,
                    0.08645956963300705,
                    -0.07092127203941345,
                    -0.01032058335840702,
                    0.04517560452222824,
                    -0.0713183581829071,
                    0.019432520493865013,
                    0.05885418504476547,
                    0.060154788196086884,
                    0.04980001971125603,
                    0.039027485996484756,
                    -0.06816092133522034,
                    0.014876451343297958
                ],
                "diffText": "diff --git a/modules/tf-psa-crypto/module.cpp b/modules/tf-psa-crypto/module.cpp\nindex 84e7ffa..1cd943e 100644\n--- a/modules/tf-psa-crypto/module.cpp\n+++ b/modules/tf-psa-crypto/module.cpp\n@@ -101,45 +101,112 @@ namespace TF_PSA_Crypto_detail {\n         return LUT.at(digestType.Get());\n     }\n \n-}\n-\n-std::optional<component::Digest> TF_PSA_Crypto::OpDigest(operation::Digest& op) {\n-    std::optional<component::Digest> ret = std::nullopt;\n-    Datasource ds(op.modifier.GetPtr(), op.modifier.GetSize());\n-    TF_PSA_Crypto_detail::SetGlobalDs(&ds);\n+    class HashOperation {\n+        psa_hash_operation_t operation;\n \n-    util::Multipart parts;\n+    public:\n+        HashOperation() {\n+            operation = PSA_HASH_OPERATION_INIT;\n+        }\n+        ~HashOperation() {\n+            psa_hash_abort(&operation);\n+        }\n \n-    psa_algorithm_t alg = PSA_ALG_NONE;\n-    psa_hash_operation_t operation = PSA_HASH_OPERATION_INIT;\n+        psa_status_t setup(psa_algorithm_t alg) {\n+            return psa_hash_setup(&operation, alg);\n+        }\n+        psa_status_t update(const unsigned char *input, size_t input_length) {\n+            return psa_hash_update(&operation, input, input_length);\n+        }\n+        psa_status_t finish(unsigned char *output, size_t output_size,\n+                            size_t *output_length) {\n+            return psa_hash_finish(&operation, output, output_size, output_length);\n+        }\n+        psa_status_t verify(const unsigned char *hash, size_t hash_length) {\n+            return psa_hash_verify(&operation, hash, hash_length);\n+        }\n+    };\n \n-    /* Initialize */\n-    {\n-        parts = util::ToParts(ds, op.cleartext);\n+}\n \n-        /* Skip unknown algorithms */\n-        CF_CHECK_NE(alg = TF_PSA_Crypto_detail::to_psa_algorithm_t(op.digestType), PSA_ALG_NONE);\n+static std::optional<component::Digest> hash_compute(operation::Digest& op,\n+                                                     Datasource &ds,\n+                                                     psa_algorithm_t alg) {\n+    std::vector<uint8_t> md(PSA_HASH_LENGTH(alg));\n+    size_t length = 0;\n+    bool const multipart = ds.Get<bool>();\n+    if (multipart) {\n+        TF_PSA_Crypto_detail::HashOperation operation;\n+        /* Initialize */\n+        util::Multipart parts = util::ToParts(ds, op.cleartext);\n+        CF_ASSERT_PSA(operation.setup(alg));\n+\n+        /* Process */\n+        for (const auto& part : parts) {\n+            CF_ASSERT_PSA(operation.update(part.first, part.second));\n+        }\n \n-        CF_ASSERT_PSA(psa_hash_setup(&operation, alg));\n+        /* Finalize */\n+        CF_ASSERT_PSA(operation.finish(md.data(), md.size(), &length));\n+    } else {\n+        /* One-shot computation */\n+        CF_ASSERT_PSA(psa_hash_compute(alg,\n+                                       op.cleartext.GetPtr(&ds), op.cleartext.GetSize(),\n+                                       md.data(), md.size(), &length));\n     }\n+    return component::Digest(md.data(), length);\n+}\n \n-    /* Process */\n-    for (const auto& part : parts) {\n-        CF_ASSERT_PSA(psa_hash_update(&operation, part.first, part.second));\n+static void hash_verify(operation::Digest& op,\n+                        Datasource &ds,\n+                        psa_algorithm_t alg,\n+                        std::vector<uint8_t> expected_md) {\n+    /* Biaise towards the expected size */\n+    bool const correct_size = ds.Get<bool>();\n+    std::vector<uint8_t> const verify_md =\n+        correct_size ? ds.GetData(0, expected_md.size(), expected_md.size()) :\n+        ds.GetData(0, 0, PSA_HASH_MAX_SIZE * 2);\n+    psa_status_t const expected_verify_status =\n+        verify_md == expected_md ? PSA_SUCCESS : PSA_ERROR_INVALID_SIGNATURE;\n+\n+    bool const multipart = ds.Get<bool>();\n+    if (multipart) {\n+        TF_PSA_Crypto_detail::HashOperation operation;\n+        /* Initialize */\n+        util::Multipart parts = util::ToParts(ds, op.cleartext);\n+        CF_ASSERT_PSA(operation.setup(alg));\n+\n+        /* Process */\n+        for (const auto& part : parts) {\n+            CF_ASSERT_PSA(operation.update(part.first, part.second));\n+        }//\n+\n+        /* Finalize */\n+        CF_ASSERT_EQ(operation.verify(verify_md.data(), verify_md.size()),\n+                     expected_verify_status);\n+    } else {\n+        /* One-shot computation */\n+        CF_ASSERT_EQ(psa_hash_compare(alg,\n+                                      op.cleartext.GetPtr(&ds), op.cleartext.GetSize(),\n+                                      verify_md.data(), verify_md.size()),\n+                     expected_verify_status);\n     }\n+}\n \n-    /* Finalize */\n-    {\n-        unsigned char md[PSA_HASH_LENGTH(alg)];\n-        size_t length = 0;\n-        CF_ASSERT_PSA(psa_hash_finish(&operation, md, sizeof(md), &length));\n+std::optional<component::Digest> TF_PSA_Crypto::OpDigest(operation::Digest& op) {\n+    std::optional<component::Digest> ret = std::nullopt;\n+    Datasource ds(op.modifier.GetPtr(), op.modifier.GetSize());\n+    TF_PSA_Crypto_detail::SetGlobalDs(&ds);\n \n-        ret = component::Digest(md, length);\n-    }\n+    psa_algorithm_t const alg =\n+        TF_PSA_Crypto_detail::to_psa_algorithm_t(op.digestType);\n+    /* Skip unknown algorithms */\n+    CF_CHECK_NE(alg, PSA_ALG_NONE);\n \n-end:\n-    psa_hash_abort(&operation);\n+    ret = hash_compute(op, ds, alg);\n+    hash_verify(op, ds, alg, ret->Get());\n \n+end:\n     TF_PSA_Crypto_detail::UnsetGlobalDs();\n \n     return ret;"
            }
        },
        "relation2": {
            "identity": 19506,
            "start": 9497,
            "end": 9490,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "twoEdgesAway": {
            "identity": 9490,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-cryptofuzz-66801"
            }
        }
    },
    {
        "baseNode": {
            "identity": 9490,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-cryptofuzz-66801"
            }
        },
        "relation1": {
            "identity": 19506,
            "start": 9490,
            "end": 9497,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 9497,
            "labels": [
                "FileModification"
            ],
            "properties": {
                "diffEmbeddings": [
                    0.0888797864317894,
                    0.04393002763390541,
                    -0.10566047579050064,
                    0.009922233410179615,
                    -0.038173459470272064,
                    0.07266470044851303,
                    -0.042015984654426575,
                    0.06768001616001129,
                    -0.035440631210803986,
                    -0.07971999049186707,
                    -0.045486874878406525,
                    0.04862461984157562,
                    -0.09904208034276962,
                    0.0021342183463275433,
                    0.0602586604654789,
                    0.00286560645326972,
                    -0.019352475181221962,
                    0.06323781609535217,
                    -0.04383574053645134,
                    -0.03012223169207573,
                    -0.03371640667319298,
                    -0.05635930597782135,
                    -0.035876475274562836,
                    0.062343791127204895,
                    0.04277569055557251,
                    -0.015380826778709888,
                    -0.02619864232838154,
                    -0.0018012858927249908,
                    -0.10014364123344421,
                    0.061681173741817474,
                    -0.04794410616159439,
                    -0.07719911634922028,
                    -0.0066645084880292416,
                    -0.04620771482586861,
                    0.06379425525665283,
                    -0.03914887458086014,
                    0.004090229049324989,
                    0.012216400355100632,
                    0.03985907509922981,
                    0.06971116364002228,
                    -0.028155166655778885,
                    -0.04799104481935501,
                    0.03349559009075165,
                    0.01676715351641178,
                    -0.0394204817712307,
                    0.05905277654528618,
                    -0.00650450075045228,
                    -0.07483277469873428,
                    -0.02770189382135868,
                    -0.05430852249264717,
                    -0.012821036390960217,
                    -0.026645300909876823,
                    -0.06887584924697876,
                    -0.021118517965078354,
                    0.01760866679251194,
                    0.07198093086481094,
                    -0.05134684965014458,
                    0.020059742033481598,
                    -0.023522183299064636,
                    0.08791106939315796,
                    -0.100164994597435,
                    -0.12032169103622437,
                    0.11654211580753326,
                    -0.1012657880783081,
                    0.02842736430466175,
                    -0.005847189575433731,
                    0.055685143917798996,
                    -0.006029173731803894,
                    0.09444938600063324,
                    -0.010751212015748024,
                    0.07758475840091705,
                    0.09991912543773651,
                    -0.08877401053905487,
                    -0.03494620323181152,
                    0.016138726845383644,
                    0.022786948829889297,
                    0.0112341633066535,
                    -0.07455673813819885,
                    0.034974951297044754,
                    -0.025502223521471024,
                    0.028852874413132668,
                    0.03261023014783859,
                    -0.004305828828364611,
                    -0.01698932610452175,
                    -0.03166193887591362,
                    -0.06450159102678299,
                    0.03754241392016411,
                    -0.011728517711162567,
                    -0.02106415294110775,
                    0.001480058766901493,
                    -0.006077606696635485,
                    -0.056642111390829086,
                    -0.01725970394909382,
                    0.033265650272369385,
                    -0.0614488422870636,
                    -0.019763272255659103,
                    0.02976386621594429,
                    -0.07452316582202911,
                    -0.0007729707285761833,
                    0.02133060432970524,
                    -0.09603332728147507,
                    -0.12450388073921204,
                    -0.020879685878753662,
                    -0.09482007473707199,
                    -0.01611385866999626,
                    0.02981201559305191,
                    -0.026195820420980453,
                    0.012508301064372063,
                    0.0130704864859581,
                    -0.06593729555606842,
                    -0.040880054235458374,
                    0.06411018967628479,
                    -0.0010300208814442158,
                    -0.03771954029798508,
                    0.020366419106721878,
                    -0.06603993475437164,
                    -0.045334793627262115,
                    -0.015839533880352974,
                    -0.04776720330119133,
                    0.02827250212430954,
                    0.12692564725875854,
                    0.0027620214968919754,
                    0.06571045517921448,
                    0.013686859980225563,
                    -0.05277550220489502,
                    0.04185129329562187,
                    -0.025443285703659058,
                    -0.07490085065364838,
                    0.08461933583021164,
                    0.01192356739193201,
                    -0.056746967136859894,
                    -0.027747299522161484,
                    -0.02225702628493309,
                    0.031131364405155182,
                    -0.02651044726371765,
                    0.0005755447782576084,
                    0.0627124235033989,
                    0.07982385158538818,
                    0.05365034192800522,
                    -0.035867348313331604,
                    -0.024308189749717712,
                    0.11703360080718994,
                    0.017745714634656906,
                    0.08395939320325851,
                    0.04865305870771408,
                    0.01541487779468298,
                    -0.022084282711148262,
                    -0.019301671534776688,
                    -0.1135437935590744,
                    -0.007874906063079834,
                    -0.0012097291182726622,
                    -0.04031354561448097,
                    -0.17279274761676788,
                    0.0009566294029355049,
                    0.030389901250600815,
                    -0.02807857096195221,
                    -0.05395649001002312,
                    0.005925656296312809,
                    0.03377726301550865,
                    -0.03860059380531311,
                    -0.023551635444164276,
                    0.01824776455760002,
                    -0.06804001331329346,
                    0.10569947212934494,
                    0.03776030242443085,
                    0.08301007002592087,
                    -0.07488751411437988,
                    -0.15265503525733948,
                    -0.14107590913772583,
                    -0.011082353070378304,
                    0.039874427020549774,
                    0.1282031536102295,
                    -0.03628460690379143,
                    -0.03578421473503113,
                    0.02590763196349144,
                    -0.005324417259544134,
                    0.008850933983922005,
                    0.06804065406322479,
                    0.040313784033060074,
                    0.02342897653579712,
                    0.07220663875341415,
                    -0.000628158450126648,
                    -0.10774166882038116,
                    0.01183960773050785,
                    0.052051834762096405,
                    0.038247764110565186,
                    -0.04652418941259384,
                    -0.06459397077560425,
                    -0.051204483956098557,
                    0.01765911839902401,
                    0.11241040378808975,
                    -0.03365076705813408,
                    0.12184110283851624,
                    -0.002893545664846897,
                    0.0003793761134147644,
                    0.033571697771549225,
                    -0.03276650607585907,
                    -0.018000900745391846,
                    -0.018516981974244118,
                    -0.055972740054130554,
                    -0.017898647114634514,
                    -0.08968108892440796,
                    0.021250611171126366,
                    0.037916023284196854,
                    -0.04292898625135422,
                    -0.013560298830270767,
                    0.018365805968642235,
                    -0.022275591269135475,
                    -0.0367293655872345,
                    0.12165272235870361,
                    0.046114228665828705,
                    -0.01685311272740364,
                    0.09256128966808319,
                    -0.010521559044718742,
                    0.01770487055182457,
                    -0.03592996299266815,
                    -0.02048986591398716,
                    0.03823975473642349,
                    -0.07400883734226227,
                    0.10393860191106796,
                    -0.0719664916396141,
                    -0.10318167507648468,
                    -0.018624482676386833,
                    -0.013461614027619362,
                    0.06564348191022873,
                    -0.024374647065997124,
                    -0.021108776330947876,
                    0.1289122849702835,
                    0.08916302025318146,
                    -0.08248253166675568,
                    -0.026745274662971497,
                    -0.03987092524766922,
                    -0.012124701403081417,
                    -0.1228347197175026,
                    -0.015390581451356411,
                    -0.02625240385532379,
                    -0.0042998516000807285,
                    -0.009465733543038368,
                    -0.002956928452476859,
                    0.05668952316045761,
                    -0.08459432423114777,
                    -0.0524953156709671,
                    -0.043157752603292465,
                    -0.013292167335748672,
                    0.08645956963300705,
                    -0.07092127203941345,
                    -0.01032058335840702,
                    0.04517560452222824,
                    -0.0713183581829071,
                    0.019432520493865013,
                    0.05885418504476547,
                    0.060154788196086884,
                    0.04980001971125603,
                    0.039027485996484756,
                    -0.06816092133522034,
                    0.014876451343297958
                ],
                "diffText": "diff --git a/modules/tf-psa-crypto/module.cpp b/modules/tf-psa-crypto/module.cpp\nindex 84e7ffa..1cd943e 100644\n--- a/modules/tf-psa-crypto/module.cpp\n+++ b/modules/tf-psa-crypto/module.cpp\n@@ -101,45 +101,112 @@ namespace TF_PSA_Crypto_detail {\n         return LUT.at(digestType.Get());\n     }\n \n-}\n-\n-std::optional<component::Digest> TF_PSA_Crypto::OpDigest(operation::Digest& op) {\n-    std::optional<component::Digest> ret = std::nullopt;\n-    Datasource ds(op.modifier.GetPtr(), op.modifier.GetSize());\n-    TF_PSA_Crypto_detail::SetGlobalDs(&ds);\n+    class HashOperation {\n+        psa_hash_operation_t operation;\n \n-    util::Multipart parts;\n+    public:\n+        HashOperation() {\n+            operation = PSA_HASH_OPERATION_INIT;\n+        }\n+        ~HashOperation() {\n+            psa_hash_abort(&operation);\n+        }\n \n-    psa_algorithm_t alg = PSA_ALG_NONE;\n-    psa_hash_operation_t operation = PSA_HASH_OPERATION_INIT;\n+        psa_status_t setup(psa_algorithm_t alg) {\n+            return psa_hash_setup(&operation, alg);\n+        }\n+        psa_status_t update(const unsigned char *input, size_t input_length) {\n+            return psa_hash_update(&operation, input, input_length);\n+        }\n+        psa_status_t finish(unsigned char *output, size_t output_size,\n+                            size_t *output_length) {\n+            return psa_hash_finish(&operation, output, output_size, output_length);\n+        }\n+        psa_status_t verify(const unsigned char *hash, size_t hash_length) {\n+            return psa_hash_verify(&operation, hash, hash_length);\n+        }\n+    };\n \n-    /* Initialize */\n-    {\n-        parts = util::ToParts(ds, op.cleartext);\n+}\n \n-        /* Skip unknown algorithms */\n-        CF_CHECK_NE(alg = TF_PSA_Crypto_detail::to_psa_algorithm_t(op.digestType), PSA_ALG_NONE);\n+static std::optional<component::Digest> hash_compute(operation::Digest& op,\n+                                                     Datasource &ds,\n+                                                     psa_algorithm_t alg) {\n+    std::vector<uint8_t> md(PSA_HASH_LENGTH(alg));\n+    size_t length = 0;\n+    bool const multipart = ds.Get<bool>();\n+    if (multipart) {\n+        TF_PSA_Crypto_detail::HashOperation operation;\n+        /* Initialize */\n+        util::Multipart parts = util::ToParts(ds, op.cleartext);\n+        CF_ASSERT_PSA(operation.setup(alg));\n+\n+        /* Process */\n+        for (const auto& part : parts) {\n+            CF_ASSERT_PSA(operation.update(part.first, part.second));\n+        }\n \n-        CF_ASSERT_PSA(psa_hash_setup(&operation, alg));\n+        /* Finalize */\n+        CF_ASSERT_PSA(operation.finish(md.data(), md.size(), &length));\n+    } else {\n+        /* One-shot computation */\n+        CF_ASSERT_PSA(psa_hash_compute(alg,\n+                                       op.cleartext.GetPtr(&ds), op.cleartext.GetSize(),\n+                                       md.data(), md.size(), &length));\n     }\n+    return component::Digest(md.data(), length);\n+}\n \n-    /* Process */\n-    for (const auto& part : parts) {\n-        CF_ASSERT_PSA(psa_hash_update(&operation, part.first, part.second));\n+static void hash_verify(operation::Digest& op,\n+                        Datasource &ds,\n+                        psa_algorithm_t alg,\n+                        std::vector<uint8_t> expected_md) {\n+    /* Biaise towards the expected size */\n+    bool const correct_size = ds.Get<bool>();\n+    std::vector<uint8_t> const verify_md =\n+        correct_size ? ds.GetData(0, expected_md.size(), expected_md.size()) :\n+        ds.GetData(0, 0, PSA_HASH_MAX_SIZE * 2);\n+    psa_status_t const expected_verify_status =\n+        verify_md == expected_md ? PSA_SUCCESS : PSA_ERROR_INVALID_SIGNATURE;\n+\n+    bool const multipart = ds.Get<bool>();\n+    if (multipart) {\n+        TF_PSA_Crypto_detail::HashOperation operation;\n+        /* Initialize */\n+        util::Multipart parts = util::ToParts(ds, op.cleartext);\n+        CF_ASSERT_PSA(operation.setup(alg));\n+\n+        /* Process */\n+        for (const auto& part : parts) {\n+            CF_ASSERT_PSA(operation.update(part.first, part.second));\n+        }//\n+\n+        /* Finalize */\n+        CF_ASSERT_EQ(operation.verify(verify_md.data(), verify_md.size()),\n+                     expected_verify_status);\n+    } else {\n+        /* One-shot computation */\n+        CF_ASSERT_EQ(psa_hash_compare(alg,\n+                                      op.cleartext.GetPtr(&ds), op.cleartext.GetSize(),\n+                                      verify_md.data(), verify_md.size()),\n+                     expected_verify_status);\n     }\n+}\n \n-    /* Finalize */\n-    {\n-        unsigned char md[PSA_HASH_LENGTH(alg)];\n-        size_t length = 0;\n-        CF_ASSERT_PSA(psa_hash_finish(&operation, md, sizeof(md), &length));\n+std::optional<component::Digest> TF_PSA_Crypto::OpDigest(operation::Digest& op) {\n+    std::optional<component::Digest> ret = std::nullopt;\n+    Datasource ds(op.modifier.GetPtr(), op.modifier.GetSize());\n+    TF_PSA_Crypto_detail::SetGlobalDs(&ds);\n \n-        ret = component::Digest(md, length);\n-    }\n+    psa_algorithm_t const alg =\n+        TF_PSA_Crypto_detail::to_psa_algorithm_t(op.digestType);\n+    /* Skip unknown algorithms */\n+    CF_CHECK_NE(alg, PSA_ALG_NONE);\n \n-end:\n-    psa_hash_abort(&operation);\n+    ret = hash_compute(op, ds, alg);\n+    hash_verify(op, ds, alg, ret->Get());\n \n+end:\n     TF_PSA_Crypto_detail::UnsetGlobalDs();\n \n     return ret;"
            }
        },
        "relation2": {
            "identity": 19505,
            "start": 9497,
            "end": 9496,
            "type": "FILE_MODIFICATION",
            "properties": {}
        },
        "twoEdgesAway": {
            "identity": 9496,
            "labels": [
                "SourceFile"
            ],
            "properties": {
                "path": "modules/tf-psa-crypto/module.cpp"
            }
        }
    },
    {
        "baseNode": {
            "identity": 9490,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-cryptofuzz-66801"
            }
        },
        "relation1": {
            "identity": 19502,
            "start": 9490,
            "end": 9489,
            "type": "PROJECT_VULNERABILITIES",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 9489,
            "labels": [
                "Project"
            ],
            "properties": {
                "projectSource": "oss-fuzz",
                "projectName": "cryptofuzz"
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 9490,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-cryptofuzz-66801"
            }
        },
        "relation1": {
            "identity": 19501,
            "start": 9490,
            "end": 9495,
            "type": "CRASH_PATCH",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 9495,
            "labels": [
                "CrashReport"
            ],
            "properties": {
                "sanitizer": "msan",
                "report_content": "INFO: found LLVMFuzzerCustomMutator (0xe6acb0). Disabling -len_control by default.\nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 986527297\nINFO: Loaded 1 modules   (412421 inline 8-bit counters): 412421 [0x54c75e8, 0x552c0ed), \nINFO: Loaded 1 PC tables (412421 PCs): 412421 [0x552c0f0,0x5b77140), \n/out/cryptofuzz-boringssl-noasm: Running 1 inputs 1 time(s) each.\nRunning: /tmp/poc\n==1==WARNING: MemorySanitizer: use-of-uninitialized-value\n    #0 0x20ba4ba in invariants /src/cryptofuzz/modules/wolfcrypt/bn_helper.cpp:189:5\n    #1 0x20ba4ba in cryptofuzz::module::wolfCrypt_bignum::Bignum::~Bignum() /src/cryptofuzz/modules/wolfcrypt/bn_helper.cpp:238:5\n    #2 0x20bfa7b in cryptofuzz::module::wolfCrypt_bignum::Bignum::BinToBignumPair(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) /src/cryptofuzz/modules/wolfcrypt/bn_helper.cpp:511:5\n    #3 0x20ed698 in cryptofuzz::module::wolfCrypt_detail::OpECDSA_Sign_ed448(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/ecdsa_448.cpp:235:9\n    #4 0x206618c in cryptofuzz::module::wolfCrypt::OpECDSA_Sign(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/module.cpp:3740:16\n    #5 0xcb342b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::callModule(std::__1::shared_ptr<cryptofuzz::Module>, cryptofuzz::operation::ECDSA_Sign&) const /src/cryptofuzz/executor.cpp:625:20\n    #6 0x8a942b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::Run(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) const /src/cryptofuzz/executor.cpp:2808:47\n    #7 0x6d2f7e in cryptofuzz::Driver::Run(unsigned char const*, unsigned long) const /src/cryptofuzz/driver.cpp:210:36\n    #8 0x6f7ad9 in LLVMFuzzerTestOneInput /src/cryptofuzz/entry.cpp:981:13\n    #9 0x4a2513 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\n    #10 0x48dc72 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\n    #11 0x49351c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\n    #12 0x4bca52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n    #13 0x7f6f076b7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)\n    #14 0x483e3d in _start (/out/cryptofuzz-boringssl-noasm+0x483e3d)\n\nDEDUP_TOKEN: invariants--cryptofuzz::module::wolfCrypt_bignum::Bignum::~Bignum()--cryptofuzz::module::wolfCrypt_bignum::Bignum::BinToBignumPair(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long)\n  Uninitialized value was stored to memory at\n    #0 0x23ea3a7 in sp_clamp_ct /src/wolfssl/wolfcrypt/src/sp_int.c:7773:13\n    #1 0x23ea3a7 in sp_read_unsigned_bin /src/wolfssl/wolfcrypt/src/sp_int.c:17868:9\n    #2 0x20bf913 in cryptofuzz::module::wolfCrypt_bignum::Bignum::BinToBignumPair(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) /src/cryptofuzz/modules/wolfcrypt/bn_helper.cpp:509:9\n    #3 0x20ed698 in cryptofuzz::module::wolfCrypt_detail::OpECDSA_Sign_ed448(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/ecdsa_448.cpp:235:9\n    #4 0x206618c in cryptofuzz::module::wolfCrypt::OpECDSA_Sign(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/module.cpp:3740:16\n    #5 0xcb342b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::callModule(std::__1::shared_ptr<cryptofuzz::Module>, cryptofuzz::operation::ECDSA_Sign&) const /src/cryptofuzz/executor.cpp:625:20\n    #6 0x8a942b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::Run(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) const /src/cryptofuzz/executor.cpp:2808:47\n    #7 0x6d2f7e in cryptofuzz::Driver::Run(unsigned char const*, unsigned long) const /src/cryptofuzz/driver.cpp:210:36\n    #8 0x6f7ad9 in LLVMFuzzerTestOneInput /src/cryptofuzz/entry.cpp:981:13\n    #9 0x4a2513 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\n    #10 0x48dc72 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\n    #11 0x49351c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\n    #12 0x4bca52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n    #13 0x7f6f076b7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)\n\nDEDUP_TOKEN: sp_clamp_ct--sp_read_unsigned_bin--cryptofuzz::module::wolfCrypt_bignum::Bignum::BinToBignumPair(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long)\n  Uninitialized value was stored to memory at\n    #0 0x23e9cce in sp_read_unsigned_bin /src/wolfssl/wolfcrypt/src/sp_int.c:17815:23\n    #1 0x20bf913 in cryptofuzz::module::wolfCrypt_bignum::Bignum::BinToBignumPair(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) /src/cryptofuzz/modules/wolfcrypt/bn_helper.cpp:509:9\n    #2 0x20ed698 in cryptofuzz::module::wolfCrypt_detail::OpECDSA_Sign_ed448(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/ecdsa_448.cpp:235:9\n    #3 0x206618c in cryptofuzz::module::wolfCrypt::OpECDSA_Sign(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/module.cpp:3740:16\n    #4 0xcb342b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::callModule(std::__1::shared_ptr<cryptofuzz::Module>, cryptofuzz::operation::ECDSA_Sign&) const /src/cryptofuzz/executor.cpp:625:20\n    #5 0x8a942b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::Run(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) const /src/cryptofuzz/executor.cpp:2808:47\n    #6 0x6d2f7e in cryptofuzz::Driver::Run(unsigned char const*, unsigned long) const /src/cryptofuzz/driver.cpp:210:36\n    #7 0x6f7ad9 in LLVMFuzzerTestOneInput /src/cryptofuzz/entry.cpp:981:13\n    #8 0x4a2513 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\n    #9 0x48dc72 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\n    #10 0x49351c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\n    #11 0x4bca52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n    #12 0x7f6f076b7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)\n\nDEDUP_TOKEN: sp_read_unsigned_bin--cryptofuzz::module::wolfCrypt_bignum::Bignum::BinToBignumPair(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long)--cryptofuzz::module::wolfCrypt_detail::OpECDSA_Sign_ed448(cryptofuzz::operation::ECDSA_Sign&)\n  Uninitialized value was stored to memory at\n    #0 0x22b56c2 in fe448_to_bytes /src/wolfssl/wolfcrypt/src/fe_448.c:663:11\n    #1 0x22f140e in ge448_to_bytes /src/wolfssl/wolfcrypt/src/ge_448.c:10458:5\n    #2 0x22ac07f in wc_ed448_sign_msg_ex /src/wolfssl/wolfcrypt/src/ed448.c:372:9\n    #3 0x22acd52 in wc_ed448_sign_msg /src/wolfssl/wolfcrypt/src/ed448.c:443:12\n    #4 0x20ed473 in cryptofuzz::module::wolfCrypt_detail::OpECDSA_Sign_ed448(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/ecdsa_448.cpp:227:5\n    #5 0x206618c in cryptofuzz::module::wolfCrypt::OpECDSA_Sign(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/module.cpp:3740:16\n    #6 0xcb342b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::callModule(std::__1::shared_ptr<cryptofuzz::Module>, cryptofuzz::operation::ECDSA_Sign&) const /src/cryptofuzz/executor.cpp:625:20\n    #7 0x8a942b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::Run(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) const /src/cryptofuzz/executor.cpp:2808:47\n    #8 0x6d2f7e in cryptofuzz::Driver::Run(unsigned char const*, unsigned long) const /src/cryptofuzz/driver.cpp:210:36\n    #9 0x6f7ad9 in LLVMFuzzerTestOneInput /src/cryptofuzz/entry.cpp:981:13\n    #10 0x4a2513 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\n    #11 0x48dc72 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\n    #12 0x49351c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\n    #13 0x4bca52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n    #14 0x7f6f076b7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)\n\nDEDUP_TOKEN: fe448_to_bytes--ge448_to_bytes--wc_ed448_sign_msg_ex\n  Uninitialized value was stored to memory at\n    #0 0x22b8efc in fe448_mul /src/wolfssl/wolfcrypt/src/fe_448.c:916:10\n    #1 0x22f13e4 in ge448_to_bytes /src/wolfssl/wolfcrypt/src/ge_448.c:10457:5\n    #2 0x22ac07f in wc_ed448_sign_msg_ex /src/wolfssl/wolfcrypt/src/ed448.c:372:9\n    #3 0x22acd52 in wc_ed448_sign_msg /src/wolfssl/wolfcrypt/src/ed448.c:443:12\n    #4 0x20ed473 in cryptofuzz::module::wolfCrypt_detail::OpECDSA_Sign_ed448(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/ecdsa_448.cpp:227:5\n    #5 0x206618c in cryptofuzz::module::wolfCrypt::OpECDSA_Sign(cryptofuzz::operation::ECDSA_Sign&) /src/cryptofuzz/modules/wolfcrypt/module.cpp:3740:16\n    #6 0xcb342b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::callModule(std::__1::shared_ptr<cryptofuzz::Module>, cryptofuzz::operation::ECDSA_Sign&) const /src/cryptofuzz/executor.cpp:625:20\n    #7 0x8a942b in cryptofuzz::ExecutorBase<cryptofuzz::component::ECDSA_Signature, cryptofuzz::operation::ECDSA_Sign>::Run(fuzzing::datasource::Datasource&, unsigned char const*, unsigned long) const /src/cryptofuzz/executor.cpp:2808:47\n    #8 0x6d2f7e in cryptofuzz::Driver::Run(unsigned char const*, unsigned long) const /src/cryptofuzz/driver.cpp:210:36\n    #9 0x6f7ad9 in LLVMFuzzerTestOneInput /src/cryptofuzz/entry.cpp:981:13\n    #10 0x4a2513 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\n    #11 0x48dc72 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\n    #12 0x49351c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\n    #13 0x4bca52 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n    #14 0x7f6f076b7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)\n\nDEDUP_TOKEN: fe448_mul--ge448_to_bytes--wc_ed448_sign_msg_ex\n  Uninitialized value was created by an allocation of 'R' in the stack frame of function 'wc_ed448_sign_msg_ex'\n    #0 0x22aacf0 in wc_ed448_sign_msg_ex /src/wolfssl/wolfcrypt/src/ed448.c:284\n\nDEDUP_TOKEN: wc_ed448_sign_msg_ex\nSUMMARY: MemorySanitizer: use-of-uninitialized-value /src/cryptofuzz/modules/wolfcrypt/bn_helper.cpp:189:5 in invariants\nUnique heap origins: 14958\nStack depot allocated bytes: 9764880\nUnique origin histories: 353\nHistory depot allocated bytes: 196608\nExiting\n\nReturn Code: 1\n",
                "report_embeddings": [
                    0.06430293619632721,
                    0.07796010375022888,
                    -0.09998076409101486,
                    0.006152913440018892,
                    0.012105117551982403,
                    0.006723134312778711,
                    -0.02105872891843319,
                    0.04516502097249031,
                    0.04623827338218689,
                    -0.03990280255675316,
                    -0.008468921296298504,
                    -0.017015598714351654,
                    -0.030097132548689842,
                    -0.000848605006467551,
                    0.07989812642335892,
                    -0.02308553457260132,
                    0.06411100924015045,
                    0.02609027363359928,
                    0.030813558027148247,
                    0.07037490606307983,
                    -0.04349617660045624,
                    -0.0013033075956627727,
                    -0.04453707113862038,
                    0.027720684185624123,
                    -0.07794684171676636,
                    -0.005162132438272238,
                    -0.13731347024440765,
                    -0.03256232663989067,
                    -0.06552299857139587,
                    -0.022371435537934303,
                    -0.09609579294919968,
                    -0.13372182846069336,
                    -0.02571013569831848,
                    -0.020640334114432335,
                    0.0003313788620289415,
                    -0.0660986602306366,
                    0.043260712176561356,
                    -0.012163947336375713,
                    0.08813408762216568,
                    0.058262091130018234,
                    -0.05667056143283844,
                    -0.06725699454545975,
                    -0.0072718169540166855,
                    0.011455130763351917,
                    -0.049135565757751465,
                    0.016000408679246902,
                    0.023052940145134926,
                    -0.041840504854917526,
                    0.05283401533961296,
                    0.0012118156300857663,
                    -0.07493039220571518,
                    0.0068689133040606976,
                    -0.06615905463695526,
                    -0.05036497488617897,
                    -0.049480047076940536,
                    -0.03987625613808632,
                    0.042347755283117294,
                    0.02570054866373539,
                    -0.04276282712817192,
                    0.09811896085739136,
                    0.030853018164634705,
                    -0.07296956330537796,
                    0.04796472191810608,
                    -0.06298281997442245,
                    -0.030698275193572044,
                    -0.002748139202594757,
                    0.06182265281677246,
                    0.029262034222483635,
                    0.0015768868615850806,
                    0.02531955949962139,
                    0.01548477541655302,
                    0.15789473056793213,
                    -0.07603508979082108,
                    -0.13205604255199432,
                    -0.022075572982430458,
                    0.012764408253133297,
                    -0.0520009845495224,
                    -0.01629800908267498,
                    -0.07509684562683105,
                    -0.15503475069999695,
                    0.0026634212117642164,
                    0.029621422290802002,
                    0.039345771074295044,
                    0.05788412317633629,
                    0.006299992557615042,
                    0.028040489181876183,
                    -0.03387625515460968,
                    -0.04966523125767708,
                    -0.02354610711336136,
                    -0.02404029667377472,
                    0.08217184990644455,
                    -0.10902561992406845,
                    0.008565874770283699,
                    -0.008498355746269226,
                    0.030158594250679016,
                    0.004529662895947695,
                    0.03358190134167671,
                    -0.024846911430358887,
                    -0.04553201422095299,
                    0.03922403231263161,
                    -0.07227068394422531,
                    -0.05202217772603035,
                    0.03182924911379814,
                    -0.027876727283000946,
                    -0.02566763572394848,
                    0.03536823391914368,
                    -0.048027101904153824,
                    -0.003591146320104599,
                    -0.024308258667588234,
                    -0.01575740985572338,
                    -0.0563364140689373,
                    0.001003353507257998,
                    -0.04029232636094093,
                    0.03809148445725441,
                    0.0819568857550621,
                    -0.04882240667939186,
                    -0.015352106653153896,
                    -0.035635482519865036,
                    -0.03037053346633911,
                    0.017569126561284065,
                    0.0354728139936924,
                    0.06134006008505821,
                    -0.07244595140218735,
                    0.005840711761265993,
                    -0.03197479993104935,
                    0.019631218165159225,
                    0.010874823667109013,
                    0.00416221609339118,
                    0.03502118960022926,
                    0.07531172037124634,
                    -0.022464072331786156,
                    0.04518479108810425,
                    0.07349669933319092,
                    0.014241698198020458,
                    0.007625265046954155,
                    0.0315142460167408,
                    0.09470731765031815,
                    -0.0334387868642807,
                    0.03336077928543091,
                    -0.011317861266434193,
                    0.0505385585129261,
                    -0.015223086811602116,
                    -0.025400007143616676,
                    0.00011580499267438427,
                    0.03376501053571701,
                    -0.041369564831256866,
                    0.021802321076393127,
                    -0.0009701972012408078,
                    -0.045831192284822464,
                    0.01385075319558382,
                    -0.011052855290472507,
                    -0.005343685392290354,
                    -0.08903991430997849,
                    -0.03604702278971672,
                    0.04323956370353699,
                    -0.016917092725634575,
                    -0.0047135548666119576,
                    -0.018870914354920387,
                    -0.011238165199756622,
                    -0.005103804171085358,
                    -0.011802196502685547,
                    0.10650839656591415,
                    -0.022403530776500702,
                    0.10764268040657043,
                    -0.04927337169647217,
                    0.08095505088567734,
                    -0.07420586049556732,
                    -0.036647699773311615,
                    0.0331285297870636,
                    0.008675160817801952,
                    -0.023589810356497765,
                    0.004639617633074522,
                    -0.024171007797122,
                    0.002608300419524312,
                    0.01608697511255741,
                    -0.02398172952234745,
                    -0.026015060022473335,
                    0.08135084807872772,
                    -0.005312003660947084,
                    0.020523862913250923,
                    0.0042932904325425625,
                    0.04330144450068474,
                    -0.021938426420092583,
                    -0.03341703116893768,
                    -0.009974044747650623,
                    0.016807641834020615,
                    -0.11921516060829163,
                    -0.06764820218086243,
                    0.0009940514573827386,
                    -0.015098746865987778,
                    0.030907342210412025,
                    -0.016356756910681725,
                    0.04312371090054512,
                    -0.00568929361179471,
                    -0.10758698731660843,
                    0.0022261235862970352,
                    -0.015997204929590225,
                    0.045066624879837036,
                    0.03487664461135864,
                    -0.16669613122940063,
                    -0.07587417215108871,
                    -0.03425648808479309,
                    0.054963186383247375,
                    -0.011242042295634747,
                    0.0027764730621129274,
                    -0.08431262522935867,
                    0.08427876234054565,
                    -0.01208267267793417,
                    0.03248739242553711,
                    -0.00232194853015244,
                    0.010336222127079964,
                    0.005225944798439741,
                    0.10185041278600693,
                    0.04234946146607399,
                    -0.008024058304727077,
                    -0.05524296686053276,
                    0.04356014356017113,
                    0.005166890099644661,
                    -0.11072599142789841,
                    0.003472832264378667,
                    -0.07581597566604614,
                    -0.005261045414954424,
                    -0.02316317893564701,
                    -0.05892624333500862,
                    0.051599327474832535,
                    -0.005397236440330744,
                    -0.034127283841371536,
                    0.10357943922281265,
                    0.033404577523469925,
                    0.0422319658100605,
                    -0.04076005145907402,
                    -0.013371662236750126,
                    -0.007780162151902914,
                    0.01645042933523655,
                    -0.007684257347136736,
                    0.030183827504515648,
                    0.0810830146074295,
                    -0.012218725867569447,
                    0.010898585431277752,
                    -0.07087074220180511,
                    0.0048044342547655106,
                    -0.026269471272826195,
                    -0.04053003713488579,
                    -0.08918946236371994,
                    0.09917698055505753,
                    -0.10958858579397202,
                    -0.03290373459458351,
                    0.04721103981137276,
                    -0.027304664254188538,
                    0.030752843245863914,
                    0.0014388784766197205,
                    0.015294737182557583,
                    0.10315773636102676,
                    -0.03994305804371834,
                    0.031328774988651276,
                    -0.027204090729355812
                ],
                "report_type": "Use-of-uninitialized-value",
                "severity": "Medium"
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 9490,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-cryptofuzz-66801"
            }
        },
        "relation1": {
            "identity": 19500,
            "start": 9490,
            "end": 9493,
            "type": "PATCHING_COMMIT",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 9493,
            "labels": [
                "Commit"
            ],
            "properties": {
                "message": "PSA Crypto: fuzz all digest functions (#67)\n\n* PSA Crypto: hash: support one-shot API as well as multipart\r\n\r\n* PSA Crypto: hashes: Define an operation class\r\n\r\nRAII: the destructor takes care of cleaning up the operation no matter how its lifetime ends.\r\n\r\n* PSA Crypto: hashes: Code cleanups\r\n\r\n* Split out the computation into a separate function. It needed to be\r\n  a separat block due to variable scoping anyway.\r\n* Use std::vector instead of an array.\r\n\r\n* PSA crypto: hashes: also fuzz verify functions",
                "sha": "571cc05c380b5250da2ff7b2012cd8058f8ebc13",
                "repo": "cryptofuzz",
                "encoding": "UTF-8",
                "authored_date": 1708578009,
                "committer_tz_offset": -3600,
                "author_tz_offset": -3600,
                "committed_date": 1708578009
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 9490,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-cryptofuzz-66801"
            }
        },
        "relation1": {
            "identity": 19496,
            "start": 9490,
            "end": 9491,
            "type": "VULNERABLE_COMMIT",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 9491,
            "labels": [
                "Commit"
            ],
            "properties": {
                "message": "crypto-js: Prevent time-outs\n",
                "sha": "5a660b711be8c76a1f0ad49adc8f74c84fd9e3a5",
                "repo": "cryptofuzz",
                "encoding": "UTF-8",
                "authored_date": 1708306822,
                "committer_tz_offset": -3600,
                "author_tz_offset": -3600,
                "committed_date": 1708306822
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    }
]