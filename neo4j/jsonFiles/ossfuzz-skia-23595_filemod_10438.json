[
    {
        "baseNode": {
            "identity": 10431,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-skia-23595"
            }
        },
        "relation1": {
            "identity": 21565,
            "start": 10431,
            "end": 10438,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10438,
            "labels": [
                "FileModification"
            ],
            "properties": {
                "diffEmbeddings": [
                    -0.018059534952044487,
                    0.016856716945767403,
                    -0.06165270134806633,
                    0.0015330314636230469,
                    -0.04724560305476189,
                    -0.0207463838160038,
                    -0.0021326839923858643,
                    -0.014199168421328068,
                    -0.01946883462369442,
                    -0.05595971271395683,
                    0.014790616929531097,
                    -0.024539871141314507,
                    -0.0065675475634634495,
                    0.041403383016586304,
                    0.047819629311561584,
                    0.005153752397745848,
                    0.11204610019922256,
                    -0.05260050669312477,
                    -0.053185123950242996,
                    0.060567695647478104,
                    -0.03190353885293007,
                    0.08451812714338303,
                    -0.047161951661109924,
                    0.019912760704755783,
                    -0.0332050658762455,
                    0.11540742963552475,
                    -0.06696027517318726,
                    0.04800296202301979,
                    -0.01673186384141445,
                    -0.020742211490869522,
                    -0.11905544996261597,
                    -0.08967367559671402,
                    -0.04842999577522278,
                    -0.013854782097041607,
                    -0.11096487194299698,
                    0.03915297985076904,
                    0.007706001400947571,
                    0.0036803167313337326,
                    0.02211998961865902,
                    0.09814075380563736,
                    -0.06008023023605347,
                    -0.044152501970529556,
                    -0.01951567642390728,
                    0.043518438935279846,
                    0.013104795478284359,
                    0.015546132810413837,
                    -0.04517233744263649,
                    0.008532754145562649,
                    0.01666601188480854,
                    0.003717023180797696,
                    -0.03632243350148201,
                    0.015873853117227554,
                    0.025469355285167694,
                    -0.015978487208485603,
                    -0.07956548780202866,
                    -0.015637969598174095,
                    -0.0013684428995475173,
                    0.038077909499406815,
                    -0.08773744106292725,
                    0.07514321058988571,
                    -0.011310570873320103,
                    -0.060101959854364395,
                    -0.028910158202052116,
                    0.015217567794024944,
                    -0.03644190728664398,
                    -0.013541496358811855,
                    0.04422297701239586,
                    -0.02346191555261612,
                    0.021000154316425323,
                    0.035956110805273056,
                    0.030691349878907204,
                    0.11248990893363953,
                    -0.015605893917381763,
                    -0.07846454530954361,
                    -0.005667948629707098,
                    -0.05907817557454109,
                    -0.044820744544267654,
                    -0.025896189734339714,
                    -0.07960790395736694,
                    -0.08899065852165222,
                    -0.05291619524359703,
                    0.011767095886170864,
                    -0.020877962931990623,
                    0.044996362179517746,
                    0.01846945844590664,
                    -0.02330721914768219,
                    -0.04767903313040733,
                    -0.06716691702604294,
                    -0.03143874928355217,
                    6.0874346672790125e-05,
                    0.006186684127897024,
                    -0.03653666377067566,
                    0.05611051246523857,
                    -0.06216813996434212,
                    -0.036612704396247864,
                    0.05882905051112175,
                    0.04419197514653206,
                    -0.012717689387500286,
                    -0.01800457574427128,
                    0.057578783482313156,
                    0.055939432233572006,
                    -0.05062643811106682,
                    0.018614957109093666,
                    -0.0631321370601654,
                    -0.03504076600074768,
                    0.062045399099588394,
                    -0.06791358441114426,
                    0.011961354874074459,
                    -0.03336898237466812,
                    -0.0061622499488294125,
                    -0.03562513366341591,
                    0.013740986585617065,
                    0.030976245179772377,
                    0.013345959596335888,
                    -0.014208342880010605,
                    -0.009435650892555714,
                    -0.036587249487638474,
                    -0.07353184372186661,
                    -0.006038299296051264,
                    0.04856007173657417,
                    -0.0059541757218539715,
                    0.006143784616142511,
                    -0.056078653782606125,
                    -0.02059384249150753,
                    -0.02761346660554409,
                    0.045520395040512085,
                    0.030961422249674797,
                    0.08817411214113235,
                    0.06135709211230278,
                    0.017764132469892502,
                    0.022143632173538208,
                    -0.0001866500824689865,
                    -0.007223296444863081,
                    0.018751414492726326,
                    0.028683319687843323,
                    0.07048602402210236,
                    0.10479810833930969,
                    -0.009827720001339912,
                    0.06737910211086273,
                    0.009008352644741535,
                    0.05923408269882202,
                    0.05985838174819946,
                    -0.00712584936991334,
                    0.02863205410540104,
                    -0.005886186379939318,
                    0.04357045888900757,
                    0.061285119503736496,
                    0.08313273638486862,
                    -0.08797768503427505,
                    0.03377995267510414,
                    0.010467815212905407,
                    -0.08005572110414505,
                    -0.017202401533722878,
                    -0.05457216501235962,
                    0.04265661910176277,
                    0.00537203811109066,
                    -0.047992732375860214,
                    0.020783016458153725,
                    0.015108940191566944,
                    -0.03513086959719658,
                    0.013290313072502613,
                    0.05246390774846077,
                    0.01539041381329298,
                    0.04335643723607063,
                    0.024264931678771973,
                    0.025094226002693176,
                    -0.07288923114538193,
                    0.045812737196683884,
                    0.03760995343327522,
                    0.05178333818912506,
                    0.015257131308317184,
                    0.014912538230419159,
                    0.08930941671133041,
                    0.005294314119964838,
                    0.0328306220471859,
                    -0.034088511019945145,
                    -0.014624505303800106,
                    0.02611129730939865,
                    0.02189738303422928,
                    0.0530821792781353,
                    0.08657742291688919,
                    0.03910684213042259,
                    -0.05399565398693085,
                    -0.02787598967552185,
                    -0.008888096548616886,
                    -0.007458919659256935,
                    -0.03829430043697357,
                    -0.02718500792980194,
                    -0.02665676735341549,
                    0.027008093893527985,
                    -0.007095741108059883,
                    0.012909603305161,
                    -0.000722962140571326,
                    -0.023952648043632507,
                    -0.043043434619903564,
                    0.038151588290929794,
                    -0.02293865568935871,
                    0.03274262323975563,
                    -0.04799070581793785,
                    -0.05920108035206795,
                    -0.057119276374578476,
                    -0.044094979763031006,
                    0.03512272238731384,
                    0.01525381114333868,
                    -0.0557272844016552,
                    -0.10407382994890213,
                    0.032392311841249466,
                    -0.05362917110323906,
                    0.06451863795518875,
                    -0.02600942552089691,
                    0.03442281857132912,
                    0.004667547065764666,
                    0.08259718865156174,
                    0.07006446272134781,
                    -0.05866244062781334,
                    0.010778757743537426,
                    0.0007920482312329113,
                    -0.021493641659617424,
                    -0.02966652251780033,
                    0.004717671778053045,
                    -0.03358424827456474,
                    -0.06567270308732986,
                    0.03465719521045685,
                    -0.009758060798048973,
                    0.010435298085212708,
                    0.010119431652128696,
                    -0.029026107862591743,
                    0.03283654898405075,
                    0.043051254004240036,
                    0.04755626991391182,
                    -0.007229229435324669,
                    0.038753729313611984,
                    -0.03456854447722435,
                    0.02892295829951763,
                    0.07464499771595001,
                    -0.030569002032279968,
                    -0.01280310656875372,
                    0.0548868328332901,
                    -0.006270259618759155,
                    -0.08249891549348831,
                    0.03588614985346794,
                    0.05106469616293907,
                    0.029178833588957787,
                    -0.005950745195150375,
                    -0.02182467095553875,
                    -0.029638588428497314,
                    -0.007073462475091219,
                    0.07944611459970474,
                    -0.02977500855922699,
                    0.00613434286788106,
                    0.06018190458416939,
                    -0.003404235700145364,
                    0.1313077211380005,
                    0.010767742991447449,
                    -0.002513684332370758,
                    0.00846315547823906
                ],
                "diffText": "diff --git a/src/utils/SkParseColor.cpp b/src/utils/SkParseColor.cpp\nindex 671708bcb9..9846a8ff5e 100644\n--- a/src/utils/SkParseColor.cpp\n+++ b/src/utils/SkParseColor.cpp\n@@ -8,239 +8,172 @@\n \n #include \"include/utils/SkParse.h\"\n \n-static const unsigned int gColorNames[] = {\n-0x85891945, 0x32a50000, 0x00f0f8ff, // aliceblue\n-0x85d44c6b, 0x16e84d0a, 0x00faebd7, // antiquewhite\n-0x86350800, 0x0000ffff, // aqua\n-0x86350b43, 0x492e2800, 0x007fffd4, // aquamarine\n-0x87559140, 0x00f0ffff, // azure\n-0x88a93940, 0x00f5f5dc, // beige\n-0x89338d4a, 0x00ffe4c4, // bisque\n-0x89811ac0, 0x00000000, // black\n-0x898170d1, 0x1481635f, 0x38800000, 0x00ffebcd, // blanchedalmond\n-0x89952800, 0x000000ff, // blue\n-0x89952d93, 0x3d85a000, 0x008a2be2, // blueviolet\n-0x8a4fbb80, 0x00a52a2a, // brown\n-0x8ab2666f, 0x3de40000, 0x00deb887, // burlywood\n-0x8c242d05, 0x32a50000, 0x005f9ea0, // cadetblue\n-0x8d019525, 0x16b32800, 0x007fff00, // chartreuse\n-0x8d0f1bd9, 0x06850000, 0x00d2691e, // chocolate\n-0x8df20b00, 0x00ff7f50, // coral\n-0x8df27199, 0x3ee59099, 0x54a00000, 0x006495ed, // cornflowerblue\n-0x8df274d3, 0x31600000, 0x00fff8dc, // cornsilk\n-0x8e496cdf, 0x38000000, 0x00dc143c, // crimson\n-0x8f217000, 0x0000ffff, // cyan\n-0x90325899, 0x54a00000, 0x0000008b, // darkblue\n-0x903258f3, 0x05c00000, 0x00008b8b, // darkcyan\n-0x903259df, 0x3085749f, 0x10000000, 0x00b8860b, // darkgoldenrod\n-0x903259e5, 0x07200000, 0x00a9a9a9, // darkgray\n-0x903259e5, 0x14ae0000, 0x00006400, // darkgreen\n-0x90325ad1, 0x05690000, 0x00bdb76b, // darkkhaki\n-0x90325b43, 0x1caea040, 0x008b008b, // darkmagenta\n-0x90325bd9, 0x26c53c8b, 0x15c00000, 0x00556b2f, // darkolivegreen\n-0x90325be5, 0x05c72800, 0x00ff8c00, // darkorange\n-0x90325be5, 0x0d092000, 0x009932cc, // darkorchid\n-0x90325c8b, 0x10000000, 0x008b0000, // darkred\n-0x90325cc3, 0x31af7000, 0x00e9967a, // darksalmon\n-0x90325ccb, 0x04f2295c, 0x008fbc8f, // darkseagreen\n-0x90325cd9, 0x0685132b, 0x14000000, 0x00483d8b, // darkslateblue\n-0x90325cd9, 0x06853c83, 0x64000000, 0x002f4f4f, // darkslategray\n-0x90325d2b, 0x4a357a67, 0x14000000, 0x0000ced1, // darkturquoise\n-0x90325d93, 0x3d85a000, 0x009400d3, // darkviolet\n-0x90a58413, 0x39600000, 0x00ff1493, // deeppink\n-0x90a584d7, 0x644ca940, 0x0000bfff, // deepskyblue\n-0x912d3c83, 0x64000000, 0x00696969, // dimgray\n-0x91e43965, 0x09952800, 0x001e90ff, // dodgerblue\n-0x993228a5, 0x246b0000, 0x00b22222, // firebrick\n-0x998f9059, 0x5d09a140, 0x00fffaf0, // floralwhite\n-0x99f22ce9, 0x1e452b80, 0x00228b22, // forestgreen\n-0x9aa344d3, 0x04000000, 0x00ff00ff, // fuchsia\n-0x9c2974c5, 0x3e4f0000, 0x00dcdcdc, // gainsboro\n-0x9d0f9d2f, 0x21342800, 0x00f8f8ff, // ghostwhite\n-0x9dec2000, 0x00ffd700, // gold\n-0x9dec215d, 0x49e40000, 0x00daa520, // goldenrod\n-0x9e41c800, 0x00808080, // gray\n-0x9e452b80, 0x00008000, // green\n-0x9e452bb3, 0x158c7dc0, 0x00adff2f, // greenyellow\n-0xa1ee2e49, 0x16e00000, 0x00f0fff0, // honeydew\n-0xa1f4825d, 0x2c000000, 0x00ff69b4, // hotpink\n-0xa5c4485d, 0x48a40000, 0x00cd5c5c, // indianred\n-0xa5c449de, 0x004b0082, // indigo\n-0xa6cf9640, 0x00fffff0, // ivory\n-0xad015a40, 0x00f0e68c, // khaki\n-0xb0362b89, 0x16400000, 0x00e6e6fa, // lavender\n-0xb0362b89, 0x16426567, 0x20000000, 0x00fff0f5, // lavenderblush\n-0xb03771e5, 0x14ae0000, 0x007cfc00, // lawngreen\n-0xb0ad7b87, 0x212633dc, 0x00fffacd, // lemonchiffon\n-0xb1274505, 0x32a50000, 0x00add8e6, // lightblue\n-0xb1274507, 0x3e416000, 0x00f08080, // lightcoral\n-0xb1274507, 0x642e0000, 0x00e0ffff, // lightcyan\n-0xb127450f, 0x3d842ba5, 0x3c992b19, 0x3ee00000, 0x00fafad2, // lightgoldenrodyellow\n-0xb127450f, 0x48a57000, 0x0090ee90, // lightgreen\n-0xb127450f, 0x48b90000, 0x00d3d3d3, // lightgrey\n-0xb1274521, 0x25cb0000, 0x00ffb6c1, // lightpink\n-0xb1274527, 0x058d7b80, 0x00ffa07a, // lightsalmon\n-0xb1274527, 0x1427914b, 0x38000000, 0x0020b2aa, // lightseagreen\n-0xb1274527, 0x2f22654a, 0x0087cefa, // lightskyblue\n-0xb1274527, 0x303429e5, 0x07200000, 0x00778899, // lightslategray\n-0xb1274527, 0x50a56099, 0x54a00000, 0x00b0c4de, // lightsteelblue\n-0xb1274533, 0x158c7dc0, 0x00ffffe0, // lightyellow\n-0xb12d2800, 0x0000ff00, // lime\n-0xb12d29e5, 0x14ae0000, 0x0032cd32, // limegreen\n-0xb12e2b80, 0x00faf0e6, // linen\n-0xb4272ba9, 0x04000000, 0x00ff00ff, // magenta\n-0xb4327bdc, 0x00800000, // maroon\n-0xb4a44d5b, 0x06350b43, 0x492e2800, 0x0066cdaa, // mediumaquamarine\n-0xb4a44d5b, 0x09952800, 0x000000cd, // mediumblue\n-0xb4a44d5b, 0x3e434248, 0x00ba55d3, // mediumorchid\n-0xb4a44d5b, 0x42b2830a, 0x009370db, // mediumpurple\n-0xb4a44d5b, 0x4ca13c8b, 0x15c00000, 0x003cb371, // mediumseagreen\n-0xb4a44d5b, 0x4d81a145, 0x32a50000, 0x007b68ee, // mediumslateblue\n-0xb4a44d5b, 0x4e124b8f, 0x1e452b80, 0x0000fa9a, // mediumspringgreen\n-0xb4a44d5b, 0x52b28d5f, 0x26650000, 0x0048d1cc, // mediumturquoise\n-0xb4a44d5b, 0x592f6169, 0x48a40000, 0x00c71585, // mediumvioletred\n-0xb524724f, 0x2282654a, 0x00191970, // midnightblue\n-0xb52ea0e5, 0x142d0000, 0x00f5fffa, // mintcream\n-0xb533a665, 0x3e650000, 0x00ffe4e1, // mistyrose\n-0xb5e31867, 0x25c00000, 0x00ffe4b5, // moccasin\n-0xb8360a9f, 0x5d09a140, 0x00ffdead, // navajowhite\n-0xb836c800, 0x00000080, // navy\n-0xbd846047, 0x14000000, 0x00fdf5e6, // oldlace\n-0xbd89b140, 0x00808000, // olive\n-0xbd89b149, 0x48220000, 0x006b8e23, // olivedrab\n-0xbe4171ca, 0x00ffa500, // orange\n-0xbe4171cb, 0x48a40000, 0x00ff4500, // orangered\n-0xbe434248, 0x00da70d6, // orchid\n-0xc02c29df, 0x3085749f, 0x10000000, 0x00eee8aa, // palegoldenrod\n-0xc02c29e5, 0x14ae0000, 0x0098fb98, // palegreen\n-0xc02c2d2b, 0x4a357a67, 0x14000000, 0x00afeeee, // paleturquoise\n-0xc02c2d93, 0x3d85a48b, 0x10000000, 0x00db7093, // palevioletred\n-0xc0300e43, 0x5d098000, 0x00ffefd5, // papayawhip\n-0xc0a11a21, 0x54c60000, 0x00ffdab9, // peachpuff\n-0xc0b2a800, 0x00cd853f, // peru\n-0xc12e5800, 0x00ffc0cb, // pink\n-0xc1956800, 0x00dda0dd, // plum\n-0xc1f72165, 0x09952800, 0x00b0e0e6, // powderblue\n-0xc2b2830a, 0x00800080, // purple\n-0xc8a40000, 0x00ff0000, // red\n-0xc9f3c8a5, 0x3eee0000, 0x00bc8f8f, // rosybrown\n-0xc9f90b05, 0x32a50000, 0x004169e1, // royalblue\n-0xcc24230b, 0x0a4fbb80, 0x008b4513, // saddlebrown\n-0xcc2c6bdc, 0x00fa8072, // salmon\n-0xcc2e2645, 0x49f77000, 0x00f4a460, // sandybrown\n-0xcca13c8b, 0x15c00000, 0x002e8b57, // seagreen\n-0xcca19a0b, 0x31800000, 0x00fff5ee, // seashell\n-0xcd257382, 0x00a0522d, // sienna\n-0xcd2cb164, 0x00c0c0c0, // silver\n-0xcd79132b, 0x14000000, 0x0087ceeb, // skyblue\n-0xcd81a145, 0x32a50000, 0x006a5acd, // slateblue\n-0xcd81a14f, 0x48390000, 0x00708090, // slategray\n-0xcdcfb800, 0x00fffafa, // snow\n-0xce124b8f, 0x1e452b80, 0x0000ff7f, // springgreen\n-0xce852b05, 0x32a50000, 0x004682b4, // steelblue\n-0xd02e0000, 0x00d2b48c, // tan\n-0xd0a16000, 0x00008080, // teal\n-0xd1099d19, 0x14000000, 0x00d8bfd8, // thistle\n-0xd1ed0d1e, 0x00ff6347, // tomato\n-0xd2b28d5f, 0x26650000, 0x0040e0d0, // turquoise\n-0xd92f6168, 0x00ee82ee, // violet\n-0xdd050d00, 0x00f5deb3, // wheat\n-0xdd09a140, 0x00ffffff, // white\n-0xdd09a167, 0x35eb2800, 0x00f5f5f5, // whitesmoke\n-0xe4ac63ee, 0x00ffff00, // yellow\n-0xe4ac63ef, 0x1e452b80, 0x009acd32 // yellowgreen\n-}; // original = 2505 : replacement = 1616\n-\n+#pragma pack(push,1)\n+static constexpr struct ColorRec {\n+    const char* name;\n+    uint8_t     r, g, b;\n+} gNamedColors[] = {\n+    { \"aliceblue\",            0xf0,0xf8,0xff },\n+    { \"antiquewhite\",         0xfa,0xeb,0xd7 },\n+    { \"aqua\",                 0x00,0xff,0xff },\n+    { \"aquamarine\",           0x7f,0xff,0xd4 },\n+    { \"azure\",                0xf0,0xff,0xff },\n+    { \"beige\",                0xf5,0xf5,0xdc },\n+    { \"bisque\",               0xff,0xe4,0xc4 },\n+    { \"black\",                0x00,0x00,0x00 },\n+    { \"blanchedalmond\",       0xff,0xeb,0xcd },\n+    { \"blue\",                 0x00,0x00,0xff },\n+    { \"blueviolet\",           0x8a,0x2b,0xe2 },\n+    { \"brown\",                0xa5,0x2a,0x2a },\n+    { \"burlywood\",            0xde,0xb8,0x87 },\n+    { \"cadetblue\",            0x5f,0x9e,0xa0 },\n+    { \"chartreuse\",           0x7f,0xff,0x00 },\n+    { \"chocolate\",            0xd2,0x69,0x1e },\n+    { \"coral\",                0xff,0x7f,0x50 },\n+    { \"cornflowerblue\",       0x64,0x95,0xed },\n+    { \"cornsilk\",             0xff,0xf8,0xdc },\n+    { \"crimson\",              0xdc,0x14,0x3c },\n+    { \"cyan\",                 0x00,0xff,0xff },\n+    { \"darkblue\",             0x00,0x00,0x8b },\n+    { \"darkcyan\",             0x00,0x8b,0x8b },\n+    { \"darkgoldenrod\",        0xb8,0x86,0x0b },\n+    { \"darkgray\",             0xa9,0xa9,0xa9 },\n+    { \"darkgreen\",            0x00,0x64,0x00 },\n+    { \"darkkhaki\",            0xbd,0xb7,0x6b },\n+    { \"darkmagenta\",          0x8b,0x00,0x8b },\n+    { \"darkolivegreen\",       0x55,0x6b,0x2f },\n+    { \"darkorange\",           0xff,0x8c,0x00 },\n+    { \"darkorchid\",           0x99,0x32,0xcc },\n+    { \"darkred\",              0x8b,0x00,0x00 },\n+    { \"darksalmon\",           0xe9,0x96,0x7a },\n+    { \"darkseagreen\",         0x8f,0xbc,0x8f },\n+    { \"darkslateblue\",        0x48,0x3d,0x8b },\n+    { \"darkslategray\",        0x2f,0x4f,0x4f },\n+    { \"darkturquoise\",        0x00,0xce,0xd1 },\n+    { \"darkviolet\",           0x94,0x00,0xd3 },\n+    { \"deeppink\",             0xff,0x14,0x93 },\n+    { \"deepskyblue\",          0x00,0xbf,0xff },\n+    { \"dimgray\",              0x69,0x69,0x69 },\n+    { \"dodgerblue\",           0x1e,0x90,0xff },\n+    { \"firebrick\",            0xb2,0x22,0x22 },\n+    { \"floralwhite\",          0xff,0xfa,0xf0 },\n+    { \"forestgreen\",          0x22,0x8b,0x22 },\n+    { \"fuchsia\",              0xff,0x00,0xff },\n+    { \"gainsboro\",            0xdc,0xdc,0xdc },\n+    { \"ghostwhite\",           0xf8,0xf8,0xff },\n+    { \"gold\",                 0xff,0xd7,0x00 },\n+    { \"goldenrod\",            0xda,0xa5,0x20 },\n+    { \"gray\",                 0x80,0x80,0x80 },\n+    { \"green\",                0x00,0x80,0x00 },\n+    { \"greenyellow\",          0xad,0xff,0x2f },\n+    { \"honeydew\",             0xf0,0xff,0xf0 },\n+    { \"hotpink\",              0xff,0x69,0xb4 },\n+    { \"indianred\",            0xcd,0x5c,0x5c },\n+    { \"indigo\",               0x4b,0x00,0x82 },\n+    { \"ivory\",                0xff,0xff,0xf0 },\n+    { \"khaki\",                0xf0,0xe6,0x8c },\n+    { \"lavender\",             0xe6,0xe6,0xfa },\n+    { \"lavenderblush\",        0xff,0xf0,0xf5 },\n+    { \"lawngreen\",            0x7c,0xfc,0x00 },\n+    { \"lemonchiffon\",         0xff,0xfa,0xcd },\n+    { \"lightblue\",            0xad,0xd8,0xe6 },\n+    { \"lightcoral\",           0xf0,0x80,0x80 },\n+    { \"lightcyan\",            0xe0,0xff,0xff },\n+    { \"lightgoldenrodyellow\", 0xfa,0xfa,0xd2 },\n+    { \"lightgreen\",           0x90,0xee,0x90 },\n+    { \"lightgrey\",            0xd3,0xd3,0xd3 },\n+    { \"lightpink\",            0xff,0xb6,0xc1 },\n+    { \"lightsalmon\",          0xff,0xa0,0x7a },\n+    { \"lightseagreen\",        0x20,0xb2,0xaa },\n+    { \"lightskyblue\",         0x87,0xce,0xfa },\n+    { \"lightslategray\",       0x77,0x88,0x99 },\n+    { \"lightsteelblue\",       0xb0,0xc4,0xde },\n+    { \"lightyellow\",          0xff,0xff,0xe0 },\n+    { \"lime\",                 0x00,0xff,0x00 },\n+    { \"limegreen\",            0x32,0xcd,0x32 },\n+    { \"linen\",                0xfa,0xf0,0xe6 },\n+    { \"magenta\",              0xff,0x00,0xff },\n+    { \"maroon\",               0x80,0x00,0x00 },\n+    { \"mediumaquamarine\",     0x66,0xcd,0xaa },\n+    { \"mediumblue\",           0x00,0x00,0xcd },\n+    { \"mediumorchid\",         0xba,0x55,0xd3 },\n+    { \"mediumpurple\",         0x93,0x70,0xdb },\n+    { \"mediumseagreen\",       0x3c,0xb3,0x71 },\n+    { \"mediumslateblue\",      0x7b,0x68,0xee },\n+    { \"mediumspringgreen\",    0x00,0xfa,0x9a },\n+    { \"mediumturquoise\",      0x48,0xd1,0xcc },\n+    { \"mediumvioletred\",      0xc7,0x15,0x85 },\n+    { \"midnightblue\",         0x19,0x19,0x70 },\n+    { \"mintcream\",            0xf5,0xff,0xfa },\n+    { \"mistyrose\",            0xff,0xe4,0xe1 },\n+    { \"moccasin\",             0xff,0xe4,0xb5 },\n+    { \"navajowhite\",          0xff,0xde,0xad },\n+    { \"navy\",                 0x00,0x00,0x80 },\n+    { \"oldlace\",              0xfd,0xf5,0xe6 },\n+    { \"olive\",                0x80,0x80,0x00 },\n+    { \"olivedrab\",            0x6b,0x8e,0x23 },\n+    { \"orange\",               0xff,0xa5,0x00 },\n+    { \"orangered\",            0xff,0x45,0x00 },\n+    { \"orchid\",               0xda,0x70,0xd6 },\n+    { \"palegoldenrod\",        0xee,0xe8,0xaa },\n+    { \"palegreen\",            0x98,0xfb,0x98 },\n+    { \"paleturquoise\",        0xaf,0xee,0xee },\n+    { \"palevioletred\",        0xdb,0x70,0x93 },\n+    { \"papayawhip\",           0xff,0xef,0xd5 },\n+    { \"peachpuff\",            0xff,0xda,0xb9 },\n+    { \"peru\",                 0xcd,0x85,0x3f },\n+    { \"pink\",                 0xff,0xc0,0xcb },\n+    { \"plum\",                 0xdd,0xa0,0xdd },\n+    { \"powderblue\",           0xb0,0xe0,0xe6 },\n+    { \"purple\",               0x80,0x00,0x80 },\n+    { \"red\",                  0xff,0x00,0x00 },\n+    { \"rosybrown\",            0xbc,0x8f,0x8f },\n+    { \"royalblue\",            0x41,0x69,0xe1 },\n+    { \"saddlebrown\",          0x8b,0x45,0x13 },\n+    { \"salmon\",               0xfa,0x80,0x72 },\n+    { \"sandybrown\",           0xf4,0xa4,0x60 },\n+    { \"seagreen\",             0x2e,0x8b,0x57 },\n+    { \"seashell\",             0xff,0xf5,0xee },\n+    { \"sienna\",               0xa0,0x52,0x2d },\n+    { \"silver\",               0xc0,0xc0,0xc0 },\n+    { \"skyblue\",              0x87,0xce,0xeb },\n+    { \"slateblue\",            0x6a,0x5a,0xcd },\n+    { \"slategray\",            0x70,0x80,0x90 },\n+    { \"snow\",                 0xff,0xfa,0xfa },\n+    { \"springgreen\",          0x00,0xff,0x7f },\n+    { \"steelblue\",            0x46,0x82,0xb4 },\n+    { \"tan\",                  0xd2,0xb4,0x8c },\n+    { \"teal\",                 0x00,0x80,0x80 },\n+    { \"thistle\",              0xd8,0xbf,0xd8 },\n+    { \"tomato\",               0xff,0x63,0x47 },\n+    { \"turquoise\",            0x40,0xe0,0xd0 },\n+    { \"violet\",               0xee,0x82,0xee },\n+    { \"wheat\",                0xf5,0xde,0xb3 },\n+    { \"white\",                0xff,0xff,0xff },\n+    { \"whitesmoke\",           0xf5,0xf5,0xf5 },\n+    { \"yellow\",               0xff,0xff,0x00 },\n+    { \"yellowgreen\",          0x9a,0xcd,0x32 },\n+};\n+\n+#pragma pack(pop)\n \n const char* SkParse::FindNamedColor(const char* name, size_t len, SkColor* color) {\n-    const char* namePtr = name;\n-    unsigned int sixMatches[4];\n-    unsigned int* sixMatchPtr = sixMatches;\n-    bool first = true;\n-    bool last = false;\n-    char ch;\n-    do {\n-        unsigned int sixMatch = 0;\n-        for (int chIndex = 0; chIndex < 6; chIndex++) {\n-            sixMatch <<= 5;\n-            ch = *namePtr  | 0x20;\n-            if (ch < 'a' || ch > 'z')\n-                ch = 0;\n-            else {\n-                ch = ch - 'a' + 1;\n-                namePtr++;\n-            }\n-            sixMatch |= ch ;  // turn 'A' (0x41) into 'a' (0x61);\n-        }\n-        sixMatch <<= 1;\n-        sixMatch |= 1;\n-        if (first) {\n-            sixMatch |= 0x80000000;\n-            first = false;\n-        }\n-        ch = *namePtr | 0x20;\n-        last = ch < 'a' || ch > 'z';\n-        if (last)\n-            sixMatch &= ~1;\n-        len -= 6;\n-        *sixMatchPtr++ = sixMatch;\n-    } while (last == false && len > 0);\n-\n-    auto is_rec_start = [](size_t i) {\n-        SkASSERT(i < SK_ARRAY_COUNT(gColorNames));\n-\n-        // the first record word is tagged in bit 31\n-        return static_cast<int>(gColorNames[i]) < 0;\n-    };\n-\n-    auto rec_start = [&](size_t i, int dir) {\n-        // find the beginning of a record, searching in the given direction.\n-        while (!is_rec_start(i)) {\n-            i += dir;\n-        }\n-\n-        return i;\n-    };\n-\n-    size_t lo = 0,\n-           hi = SK_ARRAY_COUNT(gColorNames) - 3; // back off to beginning of yellowgreen\n-\n-    while (lo <= hi) {\n-        SkASSERT(is_rec_start(lo));\n-        SkASSERT(is_rec_start(hi));\n-\n-        const auto  mid         = rec_start((hi + lo) >> 1, -1);\n-        const auto* midMatchPtr = &gColorNames[mid]; // separate cursor, to keep |mid| on rec start\n-\n-        sixMatchPtr = sixMatches;\n-        while (*midMatchPtr == *sixMatchPtr) {\n-            ++midMatchPtr;\n-            if ((*sixMatchPtr & 1) == 0) { // last\n-                // jackpot\n-                *color = *midMatchPtr | 0xFF000000;\n-                return namePtr;\n-            }\n-            ++sixMatchPtr;\n-        }\n-\n-        if (hi == lo) {\n-            // not found\n-            break;\n-        }\n-\n-        int sixMask = *sixMatchPtr & ~0x80000000,\n-            midMask = *midMatchPtr & ~0x80000000;\n+    const auto* rec = std::lower_bound(std::begin(gNamedColors),\n+                                       std::end  (gNamedColors),\n+                                       ColorRec{name, 0,0,0}, // key\n+                                       [](const ColorRec& rec, const ColorRec& key) {\n+                                           return strcmp(rec.name, key.name) < 0;\n+                                       });\n+\n+    if (rec == std::end(gNamedColors) || strcmp(name, rec->name)) {\n+        return nullptr;\n+    }\n \n-        SkASSERT(sixMask != midMask);\n-        if (sixMask > midMask) {\n-            // skip color\n-            lo = rec_start(mid + 2,  1);\n-        } else {\n-            hi = mid;\n-        }\n+    if (color) {\n+        *color = SkColorSetRGB(rec->r, rec->g, rec->b);\n     }\n \n-    return nullptr;\n+    return name + strlen(rec->name);\n }\n \n // !!! move to char utilities"
            }
        },
        "relation2": {
            "identity": 21565,
            "start": 10438,
            "end": 10431,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "twoEdgesAway": {
            "identity": 10431,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-skia-23595"
            }
        }
    },
    {
        "baseNode": {
            "identity": 10431,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-skia-23595"
            }
        },
        "relation1": {
            "identity": 21565,
            "start": 10431,
            "end": 10438,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10438,
            "labels": [
                "FileModification"
            ],
            "properties": {
                "diffEmbeddings": [
                    -0.018059534952044487,
                    0.016856716945767403,
                    -0.06165270134806633,
                    0.0015330314636230469,
                    -0.04724560305476189,
                    -0.0207463838160038,
                    -0.0021326839923858643,
                    -0.014199168421328068,
                    -0.01946883462369442,
                    -0.05595971271395683,
                    0.014790616929531097,
                    -0.024539871141314507,
                    -0.0065675475634634495,
                    0.041403383016586304,
                    0.047819629311561584,
                    0.005153752397745848,
                    0.11204610019922256,
                    -0.05260050669312477,
                    -0.053185123950242996,
                    0.060567695647478104,
                    -0.03190353885293007,
                    0.08451812714338303,
                    -0.047161951661109924,
                    0.019912760704755783,
                    -0.0332050658762455,
                    0.11540742963552475,
                    -0.06696027517318726,
                    0.04800296202301979,
                    -0.01673186384141445,
                    -0.020742211490869522,
                    -0.11905544996261597,
                    -0.08967367559671402,
                    -0.04842999577522278,
                    -0.013854782097041607,
                    -0.11096487194299698,
                    0.03915297985076904,
                    0.007706001400947571,
                    0.0036803167313337326,
                    0.02211998961865902,
                    0.09814075380563736,
                    -0.06008023023605347,
                    -0.044152501970529556,
                    -0.01951567642390728,
                    0.043518438935279846,
                    0.013104795478284359,
                    0.015546132810413837,
                    -0.04517233744263649,
                    0.008532754145562649,
                    0.01666601188480854,
                    0.003717023180797696,
                    -0.03632243350148201,
                    0.015873853117227554,
                    0.025469355285167694,
                    -0.015978487208485603,
                    -0.07956548780202866,
                    -0.015637969598174095,
                    -0.0013684428995475173,
                    0.038077909499406815,
                    -0.08773744106292725,
                    0.07514321058988571,
                    -0.011310570873320103,
                    -0.060101959854364395,
                    -0.028910158202052116,
                    0.015217567794024944,
                    -0.03644190728664398,
                    -0.013541496358811855,
                    0.04422297701239586,
                    -0.02346191555261612,
                    0.021000154316425323,
                    0.035956110805273056,
                    0.030691349878907204,
                    0.11248990893363953,
                    -0.015605893917381763,
                    -0.07846454530954361,
                    -0.005667948629707098,
                    -0.05907817557454109,
                    -0.044820744544267654,
                    -0.025896189734339714,
                    -0.07960790395736694,
                    -0.08899065852165222,
                    -0.05291619524359703,
                    0.011767095886170864,
                    -0.020877962931990623,
                    0.044996362179517746,
                    0.01846945844590664,
                    -0.02330721914768219,
                    -0.04767903313040733,
                    -0.06716691702604294,
                    -0.03143874928355217,
                    6.0874346672790125e-05,
                    0.006186684127897024,
                    -0.03653666377067566,
                    0.05611051246523857,
                    -0.06216813996434212,
                    -0.036612704396247864,
                    0.05882905051112175,
                    0.04419197514653206,
                    -0.012717689387500286,
                    -0.01800457574427128,
                    0.057578783482313156,
                    0.055939432233572006,
                    -0.05062643811106682,
                    0.018614957109093666,
                    -0.0631321370601654,
                    -0.03504076600074768,
                    0.062045399099588394,
                    -0.06791358441114426,
                    0.011961354874074459,
                    -0.03336898237466812,
                    -0.0061622499488294125,
                    -0.03562513366341591,
                    0.013740986585617065,
                    0.030976245179772377,
                    0.013345959596335888,
                    -0.014208342880010605,
                    -0.009435650892555714,
                    -0.036587249487638474,
                    -0.07353184372186661,
                    -0.006038299296051264,
                    0.04856007173657417,
                    -0.0059541757218539715,
                    0.006143784616142511,
                    -0.056078653782606125,
                    -0.02059384249150753,
                    -0.02761346660554409,
                    0.045520395040512085,
                    0.030961422249674797,
                    0.08817411214113235,
                    0.06135709211230278,
                    0.017764132469892502,
                    0.022143632173538208,
                    -0.0001866500824689865,
                    -0.007223296444863081,
                    0.018751414492726326,
                    0.028683319687843323,
                    0.07048602402210236,
                    0.10479810833930969,
                    -0.009827720001339912,
                    0.06737910211086273,
                    0.009008352644741535,
                    0.05923408269882202,
                    0.05985838174819946,
                    -0.00712584936991334,
                    0.02863205410540104,
                    -0.005886186379939318,
                    0.04357045888900757,
                    0.061285119503736496,
                    0.08313273638486862,
                    -0.08797768503427505,
                    0.03377995267510414,
                    0.010467815212905407,
                    -0.08005572110414505,
                    -0.017202401533722878,
                    -0.05457216501235962,
                    0.04265661910176277,
                    0.00537203811109066,
                    -0.047992732375860214,
                    0.020783016458153725,
                    0.015108940191566944,
                    -0.03513086959719658,
                    0.013290313072502613,
                    0.05246390774846077,
                    0.01539041381329298,
                    0.04335643723607063,
                    0.024264931678771973,
                    0.025094226002693176,
                    -0.07288923114538193,
                    0.045812737196683884,
                    0.03760995343327522,
                    0.05178333818912506,
                    0.015257131308317184,
                    0.014912538230419159,
                    0.08930941671133041,
                    0.005294314119964838,
                    0.0328306220471859,
                    -0.034088511019945145,
                    -0.014624505303800106,
                    0.02611129730939865,
                    0.02189738303422928,
                    0.0530821792781353,
                    0.08657742291688919,
                    0.03910684213042259,
                    -0.05399565398693085,
                    -0.02787598967552185,
                    -0.008888096548616886,
                    -0.007458919659256935,
                    -0.03829430043697357,
                    -0.02718500792980194,
                    -0.02665676735341549,
                    0.027008093893527985,
                    -0.007095741108059883,
                    0.012909603305161,
                    -0.000722962140571326,
                    -0.023952648043632507,
                    -0.043043434619903564,
                    0.038151588290929794,
                    -0.02293865568935871,
                    0.03274262323975563,
                    -0.04799070581793785,
                    -0.05920108035206795,
                    -0.057119276374578476,
                    -0.044094979763031006,
                    0.03512272238731384,
                    0.01525381114333868,
                    -0.0557272844016552,
                    -0.10407382994890213,
                    0.032392311841249466,
                    -0.05362917110323906,
                    0.06451863795518875,
                    -0.02600942552089691,
                    0.03442281857132912,
                    0.004667547065764666,
                    0.08259718865156174,
                    0.07006446272134781,
                    -0.05866244062781334,
                    0.010778757743537426,
                    0.0007920482312329113,
                    -0.021493641659617424,
                    -0.02966652251780033,
                    0.004717671778053045,
                    -0.03358424827456474,
                    -0.06567270308732986,
                    0.03465719521045685,
                    -0.009758060798048973,
                    0.010435298085212708,
                    0.010119431652128696,
                    -0.029026107862591743,
                    0.03283654898405075,
                    0.043051254004240036,
                    0.04755626991391182,
                    -0.007229229435324669,
                    0.038753729313611984,
                    -0.03456854447722435,
                    0.02892295829951763,
                    0.07464499771595001,
                    -0.030569002032279968,
                    -0.01280310656875372,
                    0.0548868328332901,
                    -0.006270259618759155,
                    -0.08249891549348831,
                    0.03588614985346794,
                    0.05106469616293907,
                    0.029178833588957787,
                    -0.005950745195150375,
                    -0.02182467095553875,
                    -0.029638588428497314,
                    -0.007073462475091219,
                    0.07944611459970474,
                    -0.02977500855922699,
                    0.00613434286788106,
                    0.06018190458416939,
                    -0.003404235700145364,
                    0.1313077211380005,
                    0.010767742991447449,
                    -0.002513684332370758,
                    0.00846315547823906
                ],
                "diffText": "diff --git a/src/utils/SkParseColor.cpp b/src/utils/SkParseColor.cpp\nindex 671708bcb9..9846a8ff5e 100644\n--- a/src/utils/SkParseColor.cpp\n+++ b/src/utils/SkParseColor.cpp\n@@ -8,239 +8,172 @@\n \n #include \"include/utils/SkParse.h\"\n \n-static const unsigned int gColorNames[] = {\n-0x85891945, 0x32a50000, 0x00f0f8ff, // aliceblue\n-0x85d44c6b, 0x16e84d0a, 0x00faebd7, // antiquewhite\n-0x86350800, 0x0000ffff, // aqua\n-0x86350b43, 0x492e2800, 0x007fffd4, // aquamarine\n-0x87559140, 0x00f0ffff, // azure\n-0x88a93940, 0x00f5f5dc, // beige\n-0x89338d4a, 0x00ffe4c4, // bisque\n-0x89811ac0, 0x00000000, // black\n-0x898170d1, 0x1481635f, 0x38800000, 0x00ffebcd, // blanchedalmond\n-0x89952800, 0x000000ff, // blue\n-0x89952d93, 0x3d85a000, 0x008a2be2, // blueviolet\n-0x8a4fbb80, 0x00a52a2a, // brown\n-0x8ab2666f, 0x3de40000, 0x00deb887, // burlywood\n-0x8c242d05, 0x32a50000, 0x005f9ea0, // cadetblue\n-0x8d019525, 0x16b32800, 0x007fff00, // chartreuse\n-0x8d0f1bd9, 0x06850000, 0x00d2691e, // chocolate\n-0x8df20b00, 0x00ff7f50, // coral\n-0x8df27199, 0x3ee59099, 0x54a00000, 0x006495ed, // cornflowerblue\n-0x8df274d3, 0x31600000, 0x00fff8dc, // cornsilk\n-0x8e496cdf, 0x38000000, 0x00dc143c, // crimson\n-0x8f217000, 0x0000ffff, // cyan\n-0x90325899, 0x54a00000, 0x0000008b, // darkblue\n-0x903258f3, 0x05c00000, 0x00008b8b, // darkcyan\n-0x903259df, 0x3085749f, 0x10000000, 0x00b8860b, // darkgoldenrod\n-0x903259e5, 0x07200000, 0x00a9a9a9, // darkgray\n-0x903259e5, 0x14ae0000, 0x00006400, // darkgreen\n-0x90325ad1, 0x05690000, 0x00bdb76b, // darkkhaki\n-0x90325b43, 0x1caea040, 0x008b008b, // darkmagenta\n-0x90325bd9, 0x26c53c8b, 0x15c00000, 0x00556b2f, // darkolivegreen\n-0x90325be5, 0x05c72800, 0x00ff8c00, // darkorange\n-0x90325be5, 0x0d092000, 0x009932cc, // darkorchid\n-0x90325c8b, 0x10000000, 0x008b0000, // darkred\n-0x90325cc3, 0x31af7000, 0x00e9967a, // darksalmon\n-0x90325ccb, 0x04f2295c, 0x008fbc8f, // darkseagreen\n-0x90325cd9, 0x0685132b, 0x14000000, 0x00483d8b, // darkslateblue\n-0x90325cd9, 0x06853c83, 0x64000000, 0x002f4f4f, // darkslategray\n-0x90325d2b, 0x4a357a67, 0x14000000, 0x0000ced1, // darkturquoise\n-0x90325d93, 0x3d85a000, 0x009400d3, // darkviolet\n-0x90a58413, 0x39600000, 0x00ff1493, // deeppink\n-0x90a584d7, 0x644ca940, 0x0000bfff, // deepskyblue\n-0x912d3c83, 0x64000000, 0x00696969, // dimgray\n-0x91e43965, 0x09952800, 0x001e90ff, // dodgerblue\n-0x993228a5, 0x246b0000, 0x00b22222, // firebrick\n-0x998f9059, 0x5d09a140, 0x00fffaf0, // floralwhite\n-0x99f22ce9, 0x1e452b80, 0x00228b22, // forestgreen\n-0x9aa344d3, 0x04000000, 0x00ff00ff, // fuchsia\n-0x9c2974c5, 0x3e4f0000, 0x00dcdcdc, // gainsboro\n-0x9d0f9d2f, 0x21342800, 0x00f8f8ff, // ghostwhite\n-0x9dec2000, 0x00ffd700, // gold\n-0x9dec215d, 0x49e40000, 0x00daa520, // goldenrod\n-0x9e41c800, 0x00808080, // gray\n-0x9e452b80, 0x00008000, // green\n-0x9e452bb3, 0x158c7dc0, 0x00adff2f, // greenyellow\n-0xa1ee2e49, 0x16e00000, 0x00f0fff0, // honeydew\n-0xa1f4825d, 0x2c000000, 0x00ff69b4, // hotpink\n-0xa5c4485d, 0x48a40000, 0x00cd5c5c, // indianred\n-0xa5c449de, 0x004b0082, // indigo\n-0xa6cf9640, 0x00fffff0, // ivory\n-0xad015a40, 0x00f0e68c, // khaki\n-0xb0362b89, 0x16400000, 0x00e6e6fa, // lavender\n-0xb0362b89, 0x16426567, 0x20000000, 0x00fff0f5, // lavenderblush\n-0xb03771e5, 0x14ae0000, 0x007cfc00, // lawngreen\n-0xb0ad7b87, 0x212633dc, 0x00fffacd, // lemonchiffon\n-0xb1274505, 0x32a50000, 0x00add8e6, // lightblue\n-0xb1274507, 0x3e416000, 0x00f08080, // lightcoral\n-0xb1274507, 0x642e0000, 0x00e0ffff, // lightcyan\n-0xb127450f, 0x3d842ba5, 0x3c992b19, 0x3ee00000, 0x00fafad2, // lightgoldenrodyellow\n-0xb127450f, 0x48a57000, 0x0090ee90, // lightgreen\n-0xb127450f, 0x48b90000, 0x00d3d3d3, // lightgrey\n-0xb1274521, 0x25cb0000, 0x00ffb6c1, // lightpink\n-0xb1274527, 0x058d7b80, 0x00ffa07a, // lightsalmon\n-0xb1274527, 0x1427914b, 0x38000000, 0x0020b2aa, // lightseagreen\n-0xb1274527, 0x2f22654a, 0x0087cefa, // lightskyblue\n-0xb1274527, 0x303429e5, 0x07200000, 0x00778899, // lightslategray\n-0xb1274527, 0x50a56099, 0x54a00000, 0x00b0c4de, // lightsteelblue\n-0xb1274533, 0x158c7dc0, 0x00ffffe0, // lightyellow\n-0xb12d2800, 0x0000ff00, // lime\n-0xb12d29e5, 0x14ae0000, 0x0032cd32, // limegreen\n-0xb12e2b80, 0x00faf0e6, // linen\n-0xb4272ba9, 0x04000000, 0x00ff00ff, // magenta\n-0xb4327bdc, 0x00800000, // maroon\n-0xb4a44d5b, 0x06350b43, 0x492e2800, 0x0066cdaa, // mediumaquamarine\n-0xb4a44d5b, 0x09952800, 0x000000cd, // mediumblue\n-0xb4a44d5b, 0x3e434248, 0x00ba55d3, // mediumorchid\n-0xb4a44d5b, 0x42b2830a, 0x009370db, // mediumpurple\n-0xb4a44d5b, 0x4ca13c8b, 0x15c00000, 0x003cb371, // mediumseagreen\n-0xb4a44d5b, 0x4d81a145, 0x32a50000, 0x007b68ee, // mediumslateblue\n-0xb4a44d5b, 0x4e124b8f, 0x1e452b80, 0x0000fa9a, // mediumspringgreen\n-0xb4a44d5b, 0x52b28d5f, 0x26650000, 0x0048d1cc, // mediumturquoise\n-0xb4a44d5b, 0x592f6169, 0x48a40000, 0x00c71585, // mediumvioletred\n-0xb524724f, 0x2282654a, 0x00191970, // midnightblue\n-0xb52ea0e5, 0x142d0000, 0x00f5fffa, // mintcream\n-0xb533a665, 0x3e650000, 0x00ffe4e1, // mistyrose\n-0xb5e31867, 0x25c00000, 0x00ffe4b5, // moccasin\n-0xb8360a9f, 0x5d09a140, 0x00ffdead, // navajowhite\n-0xb836c800, 0x00000080, // navy\n-0xbd846047, 0x14000000, 0x00fdf5e6, // oldlace\n-0xbd89b140, 0x00808000, // olive\n-0xbd89b149, 0x48220000, 0x006b8e23, // olivedrab\n-0xbe4171ca, 0x00ffa500, // orange\n-0xbe4171cb, 0x48a40000, 0x00ff4500, // orangered\n-0xbe434248, 0x00da70d6, // orchid\n-0xc02c29df, 0x3085749f, 0x10000000, 0x00eee8aa, // palegoldenrod\n-0xc02c29e5, 0x14ae0000, 0x0098fb98, // palegreen\n-0xc02c2d2b, 0x4a357a67, 0x14000000, 0x00afeeee, // paleturquoise\n-0xc02c2d93, 0x3d85a48b, 0x10000000, 0x00db7093, // palevioletred\n-0xc0300e43, 0x5d098000, 0x00ffefd5, // papayawhip\n-0xc0a11a21, 0x54c60000, 0x00ffdab9, // peachpuff\n-0xc0b2a800, 0x00cd853f, // peru\n-0xc12e5800, 0x00ffc0cb, // pink\n-0xc1956800, 0x00dda0dd, // plum\n-0xc1f72165, 0x09952800, 0x00b0e0e6, // powderblue\n-0xc2b2830a, 0x00800080, // purple\n-0xc8a40000, 0x00ff0000, // red\n-0xc9f3c8a5, 0x3eee0000, 0x00bc8f8f, // rosybrown\n-0xc9f90b05, 0x32a50000, 0x004169e1, // royalblue\n-0xcc24230b, 0x0a4fbb80, 0x008b4513, // saddlebrown\n-0xcc2c6bdc, 0x00fa8072, // salmon\n-0xcc2e2645, 0x49f77000, 0x00f4a460, // sandybrown\n-0xcca13c8b, 0x15c00000, 0x002e8b57, // seagreen\n-0xcca19a0b, 0x31800000, 0x00fff5ee, // seashell\n-0xcd257382, 0x00a0522d, // sienna\n-0xcd2cb164, 0x00c0c0c0, // silver\n-0xcd79132b, 0x14000000, 0x0087ceeb, // skyblue\n-0xcd81a145, 0x32a50000, 0x006a5acd, // slateblue\n-0xcd81a14f, 0x48390000, 0x00708090, // slategray\n-0xcdcfb800, 0x00fffafa, // snow\n-0xce124b8f, 0x1e452b80, 0x0000ff7f, // springgreen\n-0xce852b05, 0x32a50000, 0x004682b4, // steelblue\n-0xd02e0000, 0x00d2b48c, // tan\n-0xd0a16000, 0x00008080, // teal\n-0xd1099d19, 0x14000000, 0x00d8bfd8, // thistle\n-0xd1ed0d1e, 0x00ff6347, // tomato\n-0xd2b28d5f, 0x26650000, 0x0040e0d0, // turquoise\n-0xd92f6168, 0x00ee82ee, // violet\n-0xdd050d00, 0x00f5deb3, // wheat\n-0xdd09a140, 0x00ffffff, // white\n-0xdd09a167, 0x35eb2800, 0x00f5f5f5, // whitesmoke\n-0xe4ac63ee, 0x00ffff00, // yellow\n-0xe4ac63ef, 0x1e452b80, 0x009acd32 // yellowgreen\n-}; // original = 2505 : replacement = 1616\n-\n+#pragma pack(push,1)\n+static constexpr struct ColorRec {\n+    const char* name;\n+    uint8_t     r, g, b;\n+} gNamedColors[] = {\n+    { \"aliceblue\",            0xf0,0xf8,0xff },\n+    { \"antiquewhite\",         0xfa,0xeb,0xd7 },\n+    { \"aqua\",                 0x00,0xff,0xff },\n+    { \"aquamarine\",           0x7f,0xff,0xd4 },\n+    { \"azure\",                0xf0,0xff,0xff },\n+    { \"beige\",                0xf5,0xf5,0xdc },\n+    { \"bisque\",               0xff,0xe4,0xc4 },\n+    { \"black\",                0x00,0x00,0x00 },\n+    { \"blanchedalmond\",       0xff,0xeb,0xcd },\n+    { \"blue\",                 0x00,0x00,0xff },\n+    { \"blueviolet\",           0x8a,0x2b,0xe2 },\n+    { \"brown\",                0xa5,0x2a,0x2a },\n+    { \"burlywood\",            0xde,0xb8,0x87 },\n+    { \"cadetblue\",            0x5f,0x9e,0xa0 },\n+    { \"chartreuse\",           0x7f,0xff,0x00 },\n+    { \"chocolate\",            0xd2,0x69,0x1e },\n+    { \"coral\",                0xff,0x7f,0x50 },\n+    { \"cornflowerblue\",       0x64,0x95,0xed },\n+    { \"cornsilk\",             0xff,0xf8,0xdc },\n+    { \"crimson\",              0xdc,0x14,0x3c },\n+    { \"cyan\",                 0x00,0xff,0xff },\n+    { \"darkblue\",             0x00,0x00,0x8b },\n+    { \"darkcyan\",             0x00,0x8b,0x8b },\n+    { \"darkgoldenrod\",        0xb8,0x86,0x0b },\n+    { \"darkgray\",             0xa9,0xa9,0xa9 },\n+    { \"darkgreen\",            0x00,0x64,0x00 },\n+    { \"darkkhaki\",            0xbd,0xb7,0x6b },\n+    { \"darkmagenta\",          0x8b,0x00,0x8b },\n+    { \"darkolivegreen\",       0x55,0x6b,0x2f },\n+    { \"darkorange\",           0xff,0x8c,0x00 },\n+    { \"darkorchid\",           0x99,0x32,0xcc },\n+    { \"darkred\",              0x8b,0x00,0x00 },\n+    { \"darksalmon\",           0xe9,0x96,0x7a },\n+    { \"darkseagreen\",         0x8f,0xbc,0x8f },\n+    { \"darkslateblue\",        0x48,0x3d,0x8b },\n+    { \"darkslategray\",        0x2f,0x4f,0x4f },\n+    { \"darkturquoise\",        0x00,0xce,0xd1 },\n+    { \"darkviolet\",           0x94,0x00,0xd3 },\n+    { \"deeppink\",             0xff,0x14,0x93 },\n+    { \"deepskyblue\",          0x00,0xbf,0xff },\n+    { \"dimgray\",              0x69,0x69,0x69 },\n+    { \"dodgerblue\",           0x1e,0x90,0xff },\n+    { \"firebrick\",            0xb2,0x22,0x22 },\n+    { \"floralwhite\",          0xff,0xfa,0xf0 },\n+    { \"forestgreen\",          0x22,0x8b,0x22 },\n+    { \"fuchsia\",              0xff,0x00,0xff },\n+    { \"gainsboro\",            0xdc,0xdc,0xdc },\n+    { \"ghostwhite\",           0xf8,0xf8,0xff },\n+    { \"gold\",                 0xff,0xd7,0x00 },\n+    { \"goldenrod\",            0xda,0xa5,0x20 },\n+    { \"gray\",                 0x80,0x80,0x80 },\n+    { \"green\",                0x00,0x80,0x00 },\n+    { \"greenyellow\",          0xad,0xff,0x2f },\n+    { \"honeydew\",             0xf0,0xff,0xf0 },\n+    { \"hotpink\",              0xff,0x69,0xb4 },\n+    { \"indianred\",            0xcd,0x5c,0x5c },\n+    { \"indigo\",               0x4b,0x00,0x82 },\n+    { \"ivory\",                0xff,0xff,0xf0 },\n+    { \"khaki\",                0xf0,0xe6,0x8c },\n+    { \"lavender\",             0xe6,0xe6,0xfa },\n+    { \"lavenderblush\",        0xff,0xf0,0xf5 },\n+    { \"lawngreen\",            0x7c,0xfc,0x00 },\n+    { \"lemonchiffon\",         0xff,0xfa,0xcd },\n+    { \"lightblue\",            0xad,0xd8,0xe6 },\n+    { \"lightcoral\",           0xf0,0x80,0x80 },\n+    { \"lightcyan\",            0xe0,0xff,0xff },\n+    { \"lightgoldenrodyellow\", 0xfa,0xfa,0xd2 },\n+    { \"lightgreen\",           0x90,0xee,0x90 },\n+    { \"lightgrey\",            0xd3,0xd3,0xd3 },\n+    { \"lightpink\",            0xff,0xb6,0xc1 },\n+    { \"lightsalmon\",          0xff,0xa0,0x7a },\n+    { \"lightseagreen\",        0x20,0xb2,0xaa },\n+    { \"lightskyblue\",         0x87,0xce,0xfa },\n+    { \"lightslategray\",       0x77,0x88,0x99 },\n+    { \"lightsteelblue\",       0xb0,0xc4,0xde },\n+    { \"lightyellow\",          0xff,0xff,0xe0 },\n+    { \"lime\",                 0x00,0xff,0x00 },\n+    { \"limegreen\",            0x32,0xcd,0x32 },\n+    { \"linen\",                0xfa,0xf0,0xe6 },\n+    { \"magenta\",              0xff,0x00,0xff },\n+    { \"maroon\",               0x80,0x00,0x00 },\n+    { \"mediumaquamarine\",     0x66,0xcd,0xaa },\n+    { \"mediumblue\",           0x00,0x00,0xcd },\n+    { \"mediumorchid\",         0xba,0x55,0xd3 },\n+    { \"mediumpurple\",         0x93,0x70,0xdb },\n+    { \"mediumseagreen\",       0x3c,0xb3,0x71 },\n+    { \"mediumslateblue\",      0x7b,0x68,0xee },\n+    { \"mediumspringgreen\",    0x00,0xfa,0x9a },\n+    { \"mediumturquoise\",      0x48,0xd1,0xcc },\n+    { \"mediumvioletred\",      0xc7,0x15,0x85 },\n+    { \"midnightblue\",         0x19,0x19,0x70 },\n+    { \"mintcream\",            0xf5,0xff,0xfa },\n+    { \"mistyrose\",            0xff,0xe4,0xe1 },\n+    { \"moccasin\",             0xff,0xe4,0xb5 },\n+    { \"navajowhite\",          0xff,0xde,0xad },\n+    { \"navy\",                 0x00,0x00,0x80 },\n+    { \"oldlace\",              0xfd,0xf5,0xe6 },\n+    { \"olive\",                0x80,0x80,0x00 },\n+    { \"olivedrab\",            0x6b,0x8e,0x23 },\n+    { \"orange\",               0xff,0xa5,0x00 },\n+    { \"orangered\",            0xff,0x45,0x00 },\n+    { \"orchid\",               0xda,0x70,0xd6 },\n+    { \"palegoldenrod\",        0xee,0xe8,0xaa },\n+    { \"palegreen\",            0x98,0xfb,0x98 },\n+    { \"paleturquoise\",        0xaf,0xee,0xee },\n+    { \"palevioletred\",        0xdb,0x70,0x93 },\n+    { \"papayawhip\",           0xff,0xef,0xd5 },\n+    { \"peachpuff\",            0xff,0xda,0xb9 },\n+    { \"peru\",                 0xcd,0x85,0x3f },\n+    { \"pink\",                 0xff,0xc0,0xcb },\n+    { \"plum\",                 0xdd,0xa0,0xdd },\n+    { \"powderblue\",           0xb0,0xe0,0xe6 },\n+    { \"purple\",               0x80,0x00,0x80 },\n+    { \"red\",                  0xff,0x00,0x00 },\n+    { \"rosybrown\",            0xbc,0x8f,0x8f },\n+    { \"royalblue\",            0x41,0x69,0xe1 },\n+    { \"saddlebrown\",          0x8b,0x45,0x13 },\n+    { \"salmon\",               0xfa,0x80,0x72 },\n+    { \"sandybrown\",           0xf4,0xa4,0x60 },\n+    { \"seagreen\",             0x2e,0x8b,0x57 },\n+    { \"seashell\",             0xff,0xf5,0xee },\n+    { \"sienna\",               0xa0,0x52,0x2d },\n+    { \"silver\",               0xc0,0xc0,0xc0 },\n+    { \"skyblue\",              0x87,0xce,0xeb },\n+    { \"slateblue\",            0x6a,0x5a,0xcd },\n+    { \"slategray\",            0x70,0x80,0x90 },\n+    { \"snow\",                 0xff,0xfa,0xfa },\n+    { \"springgreen\",          0x00,0xff,0x7f },\n+    { \"steelblue\",            0x46,0x82,0xb4 },\n+    { \"tan\",                  0xd2,0xb4,0x8c },\n+    { \"teal\",                 0x00,0x80,0x80 },\n+    { \"thistle\",              0xd8,0xbf,0xd8 },\n+    { \"tomato\",               0xff,0x63,0x47 },\n+    { \"turquoise\",            0x40,0xe0,0xd0 },\n+    { \"violet\",               0xee,0x82,0xee },\n+    { \"wheat\",                0xf5,0xde,0xb3 },\n+    { \"white\",                0xff,0xff,0xff },\n+    { \"whitesmoke\",           0xf5,0xf5,0xf5 },\n+    { \"yellow\",               0xff,0xff,0x00 },\n+    { \"yellowgreen\",          0x9a,0xcd,0x32 },\n+};\n+\n+#pragma pack(pop)\n \n const char* SkParse::FindNamedColor(const char* name, size_t len, SkColor* color) {\n-    const char* namePtr = name;\n-    unsigned int sixMatches[4];\n-    unsigned int* sixMatchPtr = sixMatches;\n-    bool first = true;\n-    bool last = false;\n-    char ch;\n-    do {\n-        unsigned int sixMatch = 0;\n-        for (int chIndex = 0; chIndex < 6; chIndex++) {\n-            sixMatch <<= 5;\n-            ch = *namePtr  | 0x20;\n-            if (ch < 'a' || ch > 'z')\n-                ch = 0;\n-            else {\n-                ch = ch - 'a' + 1;\n-                namePtr++;\n-            }\n-            sixMatch |= ch ;  // turn 'A' (0x41) into 'a' (0x61);\n-        }\n-        sixMatch <<= 1;\n-        sixMatch |= 1;\n-        if (first) {\n-            sixMatch |= 0x80000000;\n-            first = false;\n-        }\n-        ch = *namePtr | 0x20;\n-        last = ch < 'a' || ch > 'z';\n-        if (last)\n-            sixMatch &= ~1;\n-        len -= 6;\n-        *sixMatchPtr++ = sixMatch;\n-    } while (last == false && len > 0);\n-\n-    auto is_rec_start = [](size_t i) {\n-        SkASSERT(i < SK_ARRAY_COUNT(gColorNames));\n-\n-        // the first record word is tagged in bit 31\n-        return static_cast<int>(gColorNames[i]) < 0;\n-    };\n-\n-    auto rec_start = [&](size_t i, int dir) {\n-        // find the beginning of a record, searching in the given direction.\n-        while (!is_rec_start(i)) {\n-            i += dir;\n-        }\n-\n-        return i;\n-    };\n-\n-    size_t lo = 0,\n-           hi = SK_ARRAY_COUNT(gColorNames) - 3; // back off to beginning of yellowgreen\n-\n-    while (lo <= hi) {\n-        SkASSERT(is_rec_start(lo));\n-        SkASSERT(is_rec_start(hi));\n-\n-        const auto  mid         = rec_start((hi + lo) >> 1, -1);\n-        const auto* midMatchPtr = &gColorNames[mid]; // separate cursor, to keep |mid| on rec start\n-\n-        sixMatchPtr = sixMatches;\n-        while (*midMatchPtr == *sixMatchPtr) {\n-            ++midMatchPtr;\n-            if ((*sixMatchPtr & 1) == 0) { // last\n-                // jackpot\n-                *color = *midMatchPtr | 0xFF000000;\n-                return namePtr;\n-            }\n-            ++sixMatchPtr;\n-        }\n-\n-        if (hi == lo) {\n-            // not found\n-            break;\n-        }\n-\n-        int sixMask = *sixMatchPtr & ~0x80000000,\n-            midMask = *midMatchPtr & ~0x80000000;\n+    const auto* rec = std::lower_bound(std::begin(gNamedColors),\n+                                       std::end  (gNamedColors),\n+                                       ColorRec{name, 0,0,0}, // key\n+                                       [](const ColorRec& rec, const ColorRec& key) {\n+                                           return strcmp(rec.name, key.name) < 0;\n+                                       });\n+\n+    if (rec == std::end(gNamedColors) || strcmp(name, rec->name)) {\n+        return nullptr;\n+    }\n \n-        SkASSERT(sixMask != midMask);\n-        if (sixMask > midMask) {\n-            // skip color\n-            lo = rec_start(mid + 2,  1);\n-        } else {\n-            hi = mid;\n-        }\n+    if (color) {\n+        *color = SkColorSetRGB(rec->r, rec->g, rec->b);\n     }\n \n-    return nullptr;\n+    return name + strlen(rec->name);\n }\n \n // !!! move to char utilities"
            }
        },
        "relation2": {
            "identity": 21564,
            "start": 10438,
            "end": 10437,
            "type": "FILE_MODIFICATION",
            "properties": {}
        },
        "twoEdgesAway": {
            "identity": 10437,
            "labels": [
                "SourceFile"
            ],
            "properties": {
                "path": "src/utils/SkParseColor.cpp"
            }
        }
    },
    {
        "baseNode": {
            "identity": 10431,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-skia-23595"
            }
        },
        "relation1": {
            "identity": 21561,
            "start": 10431,
            "end": 195,
            "type": "PROJECT_VULNERABILITIES",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 195,
            "labels": [
                "Project"
            ],
            "properties": {
                "projectSource": "oss-fuzz",
                "projectName": "skia"
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 10431,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-skia-23595"
            }
        },
        "relation1": {
            "identity": 21560,
            "start": 10431,
            "end": 10436,
            "type": "CRASH_PATCH",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10436,
            "labels": [
                "CrashReport"
            ],
            "properties": {
                "sanitizer": "asan",
                "report_content": "Accepting input from '/tmp/poc'\nUsage for fuzzing: honggfuzz -P [flags] -- /out/svg_dom\n=================================================================\n==1==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f512cb54330 at pc 0x000000b4e26a bp 0x7ffd2a48bc50 sp 0x7ffd2a48bc48\nWRITE of size 4 at 0x7f512cb54330 thread T0\nSCARINESS: 51 (4-byte-write-stack-buffer-overflow)\n    #0 0xb4e269 in SkParse::FindNamedColor(char const*, unsigned long, unsigned int*) /src/skia/out/Fuzz/../../src/utils/SkParseColor.cpp:186:24\n    #1 0x84f047 in SkSVGAttributeParser::parseNamedColorToken(unsigned int*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGAttributeParser.cpp:124:28\n    #2 0x84fdb8 in SkSVGAttributeParser::parseColor(unsigned int*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGAttributeParser.cpp:226:18\n    #3 0x851d07 in SkSVGAttributeParser::parsePaint(SkSVGPaint*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGAttributeParser.cpp:462:15\n    #4 0x860f15 in (anonymous namespace)::SetPaintAttribute(sk_sp<SkSVGNode> const&, SkSVGAttribute, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:43:17\n    #5 0x85ad10 in (anonymous namespace)::set_string_attribute(sk_sp<SkSVGNode> const&, char const*, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:424:10\n    #6 0x8621bb in (anonymous namespace)::SetStyleAttributes(sk_sp<SkSVGNode> const&, SkSVGAttribute, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:311:9\n    #7 0x85ad10 in (anonymous namespace)::set_string_attribute(sk_sp<SkSVGNode> const&, char const*, char const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:424:10\n    #8 0x85b1ff in (anonymous namespace)::parse_node_attributes(SkDOM const&, SkDOMNode const*, sk_sp<SkSVGNode> const&, SkTHashMap<SkString, sk_sp<SkSVGNode>, SkGoodHash>*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:444:9\n    #9 0x859dd6 in (anonymous namespace)::construct_svg_node(SkDOM const&, (anonymous namespace)::ConstructionContext const&, SkDOMNode const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:473:5\n    #10 0x859e49 in (anonymous namespace)::construct_svg_node(SkDOM const&, (anonymous namespace)::ConstructionContext const&, SkDOMNode const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:478:38\n    #11 0x859e49 in (anonymous namespace)::construct_svg_node(SkDOM const&, (anonymous namespace)::ConstructionContext const&, SkDOMNode const*) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:478:38\n    #12 0x859a92 in SkSVGDOM::MakeFromDOM(SkDOM const&) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:497:18\n    #13 0x85a40a in SkSVGDOM::MakeFromStream(SkStream&) /src/skia/out/Fuzz/../../experimental/svg/model/SkSVGDOM.cpp:511:12\n    #14 0x84b88b in FuzzSVG(sk_sp<SkData>) /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSVG.cpp:18:27\n    #15 0x84bd80 in LLVMFuzzerTestOneInput /src/skia/out/Fuzz/../../fuzz/oss_fuzz/FuzzSVG.cpp:37:5\n    #16 0x83c3dd in main (/out/svg_dom+0x83c3dd)\n    #17 0x7f5127c3883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)\n    #18 0x7984d8 in _start (/out/svg_dom+0x7984d8)\n\nDEDUP_TOKEN: SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)--SkSVGAttributeParser::parseNamedColorToken(unsigned int*)--SkSVGAttributeParser::parseColor(unsigned int*)\nAddress 0x7f512cb54330 is located in stack of thread T0 at offset 48 in frame\n    #0 0xb4e00f in SkParse::FindNamedColor(char const*, unsigned long, unsigned int*) /src/skia/out/Fuzz/../../src/utils/SkParseColor.cpp:155\n\nDEDUP_TOKEN: SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)\n  This frame has 1 object(s):\n    [32, 48) 'sixMatches' (line 157) <== Memory access at offset 48 overflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /src/skia/out/Fuzz/../../src/utils/SkParseColor.cpp:186:24 in SkParse::FindNamedColor(char const*, unsigned long, unsigned int*)\nShadow bytes around the buggy address:\n  0x0feaa5962810: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\n  0x0feaa5962820: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\n  0x0feaa5962830: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\n  0x0feaa5962840: f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5\n  0x0feaa5962850: f1 f1 f1 f1 04 f3 f3 f3 f5 f5 f5 f5 f5 f5 f5 f5\n=>0x0feaa5962860: f1 f1 f1 f1 00 00[f3]f3 00 00 00 00 00 00 00 00\n  0x0feaa5962870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0feaa5962880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0feaa5962890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0feaa59628a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0feaa59628b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==1==ABORTING\n\nReturn Code: 1\n",
                "report_embeddings": [
                    0.02008199878036976,
                    0.019525466486811638,
                    -0.04604799300432205,
                    0.01741713657975197,
                    -0.021214690059423447,
                    0.013275468721985817,
                    -0.011366495862603188,
                    -0.021754728630185127,
                    0.04139484092593193,
                    -0.0200026948004961,
                    -0.01753344014286995,
                    0.00494487676769495,
                    -0.011367260478436947,
                    -0.012407561764121056,
                    0.039733223617076874,
                    0.007171125616878271,
                    0.011604631319642067,
                    0.031011754646897316,
                    -0.018640631809830666,
                    0.02958165667951107,
                    -0.030550498515367508,
                    0.051111649721860886,
                    -0.035447727888822556,
                    -0.023938406258821487,
                    -0.008409300819039345,
                    0.04377473145723343,
                    -0.097151979804039,
                    0.0611133798956871,
                    -0.029667789116501808,
                    -0.0741710439324379,
                    -0.13174065947532654,
                    -0.1118234172463417,
                    -0.02529115043580532,
                    -0.07461704313755035,
                    -0.057112645357847214,
                    0.02171146310865879,
                    -0.016688350588083267,
                    0.04565170034766197,
                    0.014601183123886585,
                    0.12277044355869293,
                    -0.030302083119750023,
                    -0.030586594715714455,
                    0.006743775214999914,
                    0.04704614728689194,
                    -0.03923516720533371,
                    0.0634007528424263,
                    0.006906877271831036,
                    -0.040254294872283936,
                    -0.0002279749169247225,
                    -0.01340283453464508,
                    -0.07127507030963898,
                    -0.044373609125614166,
                    -0.051989249885082245,
                    -0.051220010966062546,
                    -0.031018108129501343,
                    -0.06633029878139496,
                    0.001266778213903308,
                    0.03821411356329918,
                    -0.08371781557798386,
                    0.09294991195201874,
                    0.023876216262578964,
                    -0.055191732943058014,
                    -0.011410090140998363,
                    0.0025468103121966124,
                    -0.024859126657247543,
                    0.04834938794374466,
                    0.03829338401556015,
                    0.05001682788133621,
                    0.04744242876768112,
                    0.017246874049305916,
                    0.038635432720184326,
                    0.1509823352098465,
                    -0.02474120818078518,
                    -0.12671414017677307,
                    -0.003720894455909729,
                    -0.014044607058167458,
                    -0.03603837639093399,
                    0.01683793216943741,
                    -0.06608390063047409,
                    -0.10196171700954437,
                    -0.03887488692998886,
                    -0.03784928843379021,
                    -0.017305981367826462,
                    0.05040284991264343,
                    -0.006111187394708395,
                    0.02680879458785057,
                    -0.023379061371088028,
                    -0.10947646200656891,
                    -0.03387577086687088,
                    0.03360217064619064,
                    0.004725033417344093,
                    -0.013081039302051067,
                    0.005574396345764399,
                    -0.07737313210964203,
                    -0.08227012306451797,
                    0.016844796016812325,
                    -0.013563623651862144,
                    -0.0005198214203119278,
                    -0.0773719996213913,
                    0.055605001747608185,
                    -0.010042604990303516,
                    -0.04573545977473259,
                    0.08261201530694962,
                    -0.0681854635477066,
                    -0.02355077490210533,
                    0.03630242869257927,
                    -0.03793499618768692,
                    0.028930967673659325,
                    0.0029505803249776363,
                    -0.04128452390432358,
                    -0.07380211353302002,
                    -0.016519872471690178,
                    -0.016914386302232742,
                    0.05011479929089546,
                    0.06553570926189423,
                    -0.01829756796360016,
                    -0.03815228492021561,
                    0.028119033202528954,
                    0.024512868374586105,
                    0.053840894252061844,
                    0.022423338145017624,
                    0.0056596361100673676,
                    -0.045933403074741364,
                    -0.027898460626602173,
                    -0.04575294256210327,
                    -0.030195942148566246,
                    0.04430675506591797,
                    0.03314482048153877,
                    0.026240337640047073,
                    0.06033641844987869,
                    -0.04694550484418869,
                    0.01090425718575716,
                    0.026207968592643738,
                    0.024145925417542458,
                    0.031136035919189453,
                    0.05935675650835037,
                    0.11960422992706299,
                    -0.026741674169898033,
                    0.03837636113166809,
                    0.0041312649846076965,
                    0.060155343264341354,
                    0.03463088348507881,
                    -0.025841355323791504,
                    -0.04318269342184067,
                    0.038899607956409454,
                    -0.0057057347148656845,
                    0.058599501848220825,
                    0.035247575491666794,
                    -0.03942392021417618,
                    0.05020489543676376,
                    0.004863915964961052,
                    -0.003505710046738386,
                    -0.05388947203755379,
                    -0.06071866676211357,
                    0.022008825093507767,
                    0.0708458423614502,
                    -0.05441950634121895,
                    0.024838954210281372,
                    -0.02197655662894249,
                    0.017874211072921753,
                    -0.01904485747218132,
                    0.07217764109373093,
                    -0.011670941486954689,
                    0.10564550012350082,
                    -0.05872464179992676,
                    0.031445570290088654,
                    -0.06146508455276489,
                    0.06947832554578781,
                    0.025021707639098167,
                    -0.004432454705238342,
                    -0.0265696682035923,
                    0.00958897452801466,
                    0.06384441256523132,
                    -0.026905078440904617,
                    0.0572538860142231,
                    0.02571617066860199,
                    -0.024917593225836754,
                    0.04686723276972771,
                    0.08842608332633972,
                    0.0375872440636158,
                    0.03491693362593651,
                    0.12794500589370728,
                    0.027972808107733727,
                    -0.045625247061252594,
                    0.03649241477251053,
                    0.003096379106864333,
                    -0.10907615721225739,
                    -0.05876117944717407,
                    0.023689333349466324,
                    -0.05978628993034363,
                    -0.0006744678830727935,
                    -0.011063441634178162,
                    0.019044220447540283,
                    0.0244591124355793,
                    -0.11430863291025162,
                    0.06917909532785416,
                    0.021867889910936356,
                    0.053577739745378494,
                    -0.02798858843743801,
                    -0.10768351703882217,
                    -0.09764418751001358,
                    0.01667921617627144,
                    -0.012495345436036587,
                    0.006674411240965128,
                    -0.01653287746012211,
                    -0.0670301765203476,
                    0.09149091690778732,
                    -0.03105919435620308,
                    0.05720679089426994,
                    -0.039348702877759933,
                    0.0015317064244300127,
                    0.03306812793016434,
                    0.06441160291433334,
                    0.009390565566718578,
                    -0.029043590649962425,
                    -0.030631858855485916,
                    0.045323584228754044,
                    -0.04073834791779518,
                    -0.06209767609834671,
                    0.05992571637034416,
                    -0.019973501563072205,
                    -0.016732215881347656,
                    -0.003010128391906619,
                    -0.05751737207174301,
                    0.021701499819755554,
                    0.06650963425636292,
                    -0.039723966270685196,
                    0.023683201521635056,
                    0.05347462743520737,
                    0.008906860835850239,
                    -0.0360306054353714,
                    -0.038231659680604935,
                    -0.005649085156619549,
                    0.012877898290753365,
                    0.08121879398822784,
                    -0.026474226266145706,
                    0.03665008023381233,
                    0.03035268746316433,
                    -0.014286266639828682,
                    -0.07809452712535858,
                    -0.004242532886564732,
                    0.05529129505157471,
                    -0.004411389119923115,
                    -0.02922639809548855,
                    0.10790477693080902,
                    -0.07908551394939423,
                    -0.03348708152770996,
                    0.0914548709988594,
                    -0.023983437567949295,
                    0.04057823866605759,
                    0.007610431872308254,
                    -0.0006320200627669692,
                    0.11819181591272354,
                    -0.001705177128314972,
                    0.022460991516709328,
                    -0.03758285567164421
                ],
                "report_type": "Stack-buffer-overflow WRITE 4",
                "severity": "High"
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 10431,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-skia-23595"
            }
        },
        "relation1": {
            "identity": 21559,
            "start": 10431,
            "end": 10435,
            "type": "PATCHING_COMMIT",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10435,
            "labels": [
                "Commit"
            ],
            "properties": {
                "message": "Simplify SkParse::FindNamedColor\n\nImplement using fixed size records and stdlib binary search.\n\n1063 bytes object size increase:\n\nbefore\n\n   text\t   data\t    bss\t    dec\t    hex\tfilename\n   2589\t      0\t      0\t   2589\t    a1d\tout/Release/obj/src/utils/libskia.SkParseColor.o\n\nafter\n\n   text\t   data\t    bss\t    dec\t    hex\tfilename\n   2112\t   1540\t      0\t   3652\t    e44 out/Release/obj/src/utils/libskia.SkParseColor.o\n\nBug: oss-fuzz:23595\nChange-Id: Ic875345a05ab0916e0873e35bee6727472a2458c\nReviewed-on: https://skia-review.googlesource.com/c/skia/+/298068\nCommit-Queue: Florin Malita <fmalita@google.com>\nReviewed-by: Mike Klein <mtklein@google.com>\n",
                "sha": "15ee455939ff8c44be22158fb6e36ae02cc5ba9e",
                "repo": "skia",
                "encoding": "UTF-8",
                "authored_date": 1592839985,
                "committer_tz_offset": 0,
                "author_tz_offset": 14400,
                "committed_date": 1592851658
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 10431,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerabilityIdentifier": "ossfuzz-skia-23595"
            }
        },
        "relation1": {
            "identity": 21555,
            "start": 10431,
            "end": 10432,
            "type": "VULNERABLE_COMMIT",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10432,
            "labels": [
                "Commit"
            ],
            "properties": {
                "message": "Dawn: fixes for skipped call to bindTextures(), instance attributes.\n\nIf a layout has no texture bindings, don't create a texture bind group\nlayout, and don't try to bind to them.\n\nFix numbering of instance attributes.\n\nBug: skia:10358\nChange-Id: I9c7b12ffa72e6364b8b52d5299ba2efcf089fd88\nReviewed-on: https://skia-review.googlesource.com/c/skia/+/298120\nCommit-Queue: Stephen White <senorblanco@chromium.org>\nCommit-Queue: Stephen White <senorblanco@google.com>\nReviewed-by: Greg Daniel <egdaniel@google.com>\n",
                "sha": "768e91f7e3ba6eedc8f641d8659abbd1f9f37967",
                "repo": "skia",
                "encoding": "UTF-8",
                "authored_date": 1592847920,
                "committer_tz_offset": 0,
                "author_tz_offset": 14400,
                "committed_date": 1592849997
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    }
]