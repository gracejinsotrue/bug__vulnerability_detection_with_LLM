[
    {
        "baseNode": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        },
        "relation1": {
            "identity": 21700,
            "start": 10499,
            "end": 10502,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10502,
            "labels": [
                "FileModification"
            ],
            "properties": {
                "diffEmbeddings": [
                    0.024445822462439537,
                    -0.07770691812038422,
                    -0.05280715972185135,
                    0.05630424991250038,
                    0.012133270502090454,
                    -0.0313086062669754,
                    -0.11347224563360214,
                    0.1363646686077118,
                    -0.03685428947210312,
                    -0.04042442888021469,
                    -0.003807332133874297,
                    -0.022009296342730522,
                    0.008368836715817451,
                    -0.06407462805509567,
                    -0.0026228490751236677,
                    -0.09284782409667969,
                    0.09387260675430298,
                    -0.0662292093038559,
                    -0.012559833005070686,
                    0.11005095392465591,
                    -0.014233932830393314,
                    0.08523377031087875,
                    -0.04881108179688454,
                    -0.012498564086854458,
                    -0.025188639760017395,
                    0.01905561424791813,
                    -0.1343451589345932,
                    -0.00640072301030159,
                    -0.04397420957684517,
                    0.01523576956242323,
                    -0.08504482358694077,
                    -0.06044260784983635,
                    -0.03754372522234917,
                    -0.07637684047222137,
                    -0.043194953352212906,
                    -0.09984193742275238,
                    0.009988540783524513,
                    -0.07303513586521149,
                    -0.06226367875933647,
                    0.105925053358078,
                    -0.15021219849586487,
                    -0.11167030781507492,
                    0.024077773094177246,
                    0.044904544949531555,
                    -0.11502937227487564,
                    -0.01932975836098194,
                    -0.03327328711748123,
                    -0.019636254757642746,
                    -0.05296962335705757,
                    0.02021738700568676,
                    0.032927803695201874,
                    -0.027760328724980354,
                    -0.07824088633060455,
                    -0.08665182441473007,
                    -0.036490291357040405,
                    -0.04120930656790733,
                    0.028905589133501053,
                    -0.01324536558240652,
                    -0.08105915039777756,
                    0.05320286750793457,
                    -0.025401802733540535,
                    -0.0653827115893364,
                    -0.03020862303674221,
                    -0.023978454992175102,
                    0.08252570778131485,
                    -0.0703173577785492,
                    0.057780634611845016,
                    -0.06739901006221771,
                    0.0016639690147712827,
                    -0.07213195413351059,
                    0.1353001892566681,
                    0.06475089490413666,
                    -0.10051164776086807,
                    0.10596910864114761,
                    -0.015374342910945415,
                    -0.033352021127939224,
                    -0.06103181466460228,
                    -0.022967666387557983,
                    0.04282381013035774,
                    -0.09934797883033752,
                    -0.06803661584854126,
                    0.0018446050817146897,
                    0.028094880282878876,
                    0.05261145159602165,
                    0.1277521252632141,
                    -0.08307231217622757,
                    0.09761999547481537,
                    0.08661463856697083,
                    0.05658268555998802,
                    0.004740809090435505,
                    0.11115753650665283,
                    -0.1834126114845276,
                    0.10909437388181686,
                    -0.02434924617409706,
                    0.02917557954788208,
                    0.016357118263840675,
                    0.17361335456371307,
                    -0.010527354665100574,
                    -0.03200443461537361,
                    -0.04118312895298004,
                    0.011764721013605595,
                    -0.03060738928616047,
                    -0.1090855598449707,
                    -0.03056529350578785,
                    -0.050818800926208496,
                    0.011806308291852474,
                    -0.10798846185207367,
                    -0.0076423040591180325,
                    0.04739106073975563,
                    -0.0740296021103859,
                    -0.013364113867282867,
                    0.005412477068603039,
                    -0.09059371799230576,
                    0.09049277752637863,
                    -0.01813618093729019,
                    -0.0022772508673369884,
                    -0.07708578556776047,
                    -0.008756313472986221,
                    -0.0231616273522377,
                    0.053313467651605606,
                    0.12236511707305908,
                    -0.027402421459555626,
                    0.04387751594185829,
                    -0.0853104516863823,
                    0.034771356731653214,
                    0.008680688217282295,
                    -0.02925094962120056,
                    0.11876404285430908,
                    0.0990058109164238,
                    -0.02503884769976139,
                    -0.03550182282924652,
                    -0.06599220633506775,
                    0.03497994318604469,
                    -0.059283819049596786,
                    0.0007839110330678523,
                    -0.0007898113690316677,
                    0.20112647116184235,
                    0.03799328953027725,
                    0.14146734774112701,
                    0.03485213965177536,
                    0.021846402436494827,
                    0.01475415751338005,
                    0.03199426829814911,
                    -0.03610818088054657,
                    0.05056341737508774,
                    -0.042058005928993225,
                    0.051621995866298676,
                    -0.06429774314165115,
                    -0.197169229388237,
                    0.00182058266364038,
                    0.046226002275943756,
                    -0.013627096079289913,
                    -0.056221019476652145,
                    -0.007323083002120256,
                    -0.04708906635642052,
                    0.018706215545535088,
                    0.02315153367817402,
                    0.046425711363554,
                    -0.03275438770651817,
                    -0.08537989854812622,
                    -0.02196696400642395,
                    0.18858222663402557,
                    0.024224290624260902,
                    0.032251209020614624,
                    -0.004663852043449879,
                    0.03924315422773361,
                    0.036117058247327805,
                    0.06495966762304306,
                    -0.026459602639079094,
                    0.020106924697756767,
                    0.019379595294594765,
                    0.023558473214507103,
                    -0.0507606640458107,
                    -0.037370555102825165,
                    -0.02371804416179657,
                    0.02590266987681389,
                    0.08577287942171097,
                    0.009901518933475018,
                    0.03518398106098175,
                    0.06708674132823944,
                    0.06591242551803589,
                    -0.03709238022565842,
                    -0.0517081543803215,
                    0.011854037642478943,
                    -0.07472588121891022,
                    0.05020744726061821,
                    0.028515582904219627,
                    -0.11871291697025299,
                    -0.035666029900312424,
                    -0.059439655393362045,
                    0.07386822253465652,
                    0.01392967440187931,
                    0.036796364933252335,
                    0.07551047950983047,
                    -0.01975908689200878,
                    0.09583387523889542,
                    -0.026523329317569733,
                    0.04133573919534683,
                    -0.05296075716614723,
                    -0.01748408004641533,
                    0.0248463936150074,
                    0.04993379861116409,
                    0.04562816768884659,
                    -0.014084123075008392,
                    0.13229596614837646,
                    -0.03680724650621414,
                    0.021710313856601715,
                    -0.09481377899646759,
                    0.013427344150841236,
                    -0.021001867949962616,
                    0.09817271679639816,
                    0.00632296921685338,
                    0.050624601542949677,
                    0.06089261919260025,
                    0.030657202005386353,
                    -0.029684070497751236,
                    -0.006811737082898617,
                    0.04936883598566055,
                    -0.008795423433184624,
                    0.021846449002623558,
                    -0.030562149360775948,
                    0.025497572496533394,
                    -0.0365557037293911,
                    0.05334910377860069,
                    0.06661466509103775,
                    -0.01007755659520626,
                    -0.025521155446767807,
                    0.031056895852088928,
                    0.026390401646494865,
                    0.05044200271368027,
                    0.05927658826112747,
                    -0.03427295386791229,
                    -0.006994006223976612,
                    -0.0037763251457363367,
                    -0.004372743424028158,
                    0.03468691557645798,
                    -0.04834328591823578,
                    -0.040404967963695526,
                    -0.12239833921194077,
                    0.053658295422792435,
                    0.02072828635573387,
                    0.031888119876384735,
                    0.07545342296361923,
                    0.007638712879270315,
                    0.0548083521425724,
                    -0.043550554662942886,
                    -0.029828909784555435,
                    0.032117146998643875,
                    -0.03800620511174202,
                    -0.009299670346081257,
                    0.05732439458370209,
                    0.0143208559602499,
                    0.032850611954927444,
                    -0.030923044309020042,
                    -0.035029083490371704,
                    -0.018809039145708084
                ],
                "diffText": "diff --git a/src/pcre2_match.c b/src/pcre2_match.c\nindex 537e5f3..ad4a43c 100644\n--- a/src/pcre2_match.c\n+++ b/src/pcre2_match.c\n@@ -5792,7 +5792,7 @@ fprintf(stderr, \"++ op=%d\\n\", *Fecode);\n       if (Lmax-- <= Lmin) RRETURN(MATCH_NOMATCH);\n       Feptr++;\n #ifdef SUPPORT_UNICODE\n-      if (utf) { FORWARDCHAR(Feptr); }\n+      if (utf) { FORWARDCHARTEST(Feptr, mb->end_subject); }\n #endif\n       }\n     /* Control never reaches here */"
            }
        },
        "relation2": {
            "identity": 21701,
            "start": 10502,
            "end": 10503,
            "type": "FUNCTION_MODIFICATION",
            "properties": {}
        },
        "twoEdgesAway": {
            "identity": 10503,
            "labels": [
                "FunctionModification"
            ],
            "properties": {
                "accessModifier": "N/A",
                "beforePatchEmbeddings": [
                    0.018650512226929147,
                    0.049413147840266985,
                    0.02149751410716174,
                    -0.008513741979177628,
                    -0.03908029145065694,
                    0.04907832858495281,
                    0.015725767089158755,
                    -0.01777988119880988,
                    0.010065194989666633,
                    0.03582117574065787,
                    0.05372204567799961,
                    0.004567786508996966,
                    0.01952381949537113,
                    0.04716602776547734,
                    0.032216742773717236,
                    -0.01844306323317094,
                    0.033066282194872086,
                    -0.020601920436053883,
                    -0.03582464371742181,
                    0.040835029173086394,
                    0.052588067495732055,
                    -0.041058093937825814,
                    0.018826192010698878,
                    0.01597096787576758,
                    -0.0138896294508533,
                    0.0023130462734310274,
                    -0.002664714630717527,
                    0.012400400238614362,
                    0.04169087906577531,
                    -0.025161127081197648,
                    0.01962434533956956,
                    -0.015368625201466181,
                    0.0028643448380086278,
                    -0.0387497353483979,
                    0.031696541653423095,
                    0.03322128139800627,
                    0.0040876205253451365,
                    0.006182758765548707,
                    0.009556962407856341,
                    -0.012439786233619942,
                    -9.969793929375801e-05,
                    -0.029348725443871546,
                    0.017337606142732796,
                    -0.06728281320433258,
                    -0.008497362239623014,
                    -0.0012059161299296998,
                    -0.009212758585899998,
                    -0.013855490671141587,
                    0.014373967302717065,
                    -0.008868407494470772,
                    -0.02448143395349255,
                    0.007681424278110198,
                    -0.023329912690370713,
                    0.09575142224855382,
                    -0.03507374132401522,
                    0.005478150478482601,
                    -0.018835943904887808,
                    0.025018878334957476,
                    0.08433417674342966,
                    -0.024417373235608178,
                    0.0515514913087555,
                    0.0020770273844415727,
                    0.031112503548600255,
                    -0.05428583694786322,
                    -0.04139631202935327,
                    0.02019049917533044,
                    -0.06455454526824432,
                    0.03303240463702445,
                    0.027876903998042435,
                    0.0424945158589161,
                    -0.002765130644634034,
                    0.03155089239800709,
                    -0.009381439957194529,
                    -0.018750945874331727,
                    0.051297655807747006,
                    0.0032481531669226126,
                    0.03927851763080732,
                    0.02370885477067509,
                    0.014961415383084301,
                    -0.0006947801500901156,
                    0.01326854084463195,
                    0.03519665254040746,
                    0.03242241153928817,
                    -0.019500171207952024,
                    0.04716066362866227,
                    -0.026939844692828983,
                    -0.06969803921697149,
                    -0.022108758417655774,
                    -0.03788088605379069,
                    -0.01863658338890841,
                    -0.030121589446036524,
                    -0.0007325057411650907,
                    -0.03071862557795671,
                    0.01140503886381017,
                    0.03559548115539733,
                    -0.05011448785208446,
                    -0.004393110614373872,
                    -0.010873223764816559,
                    -0.004207075553561155,
                    0.02591447232927689,
                    0.01929563235516522,
                    -0.015096482383261093,
                    -0.0026749387532714625,
                    -0.009008754402519501,
                    0.027077129974645488,
                    0.002051572927531728,
                    -0.03710332502283581,
                    0.038238253193884034,
                    -0.03899574726616227,
                    -0.01741504599063612,
                    -0.021629064868718382,
                    0.03996198038504156,
                    -0.006680808159327753,
                    0.004180758172236591,
                    0.03854861980120125,
                    0.0026736615257361112,
                    -0.043128316744020796,
                    0.029457768651782186,
                    -0.008040827087459762,
                    0.008319145595277019,
                    0.0001774699358630651,
                    0.03169686982485853,
                    0.01909977702557299,
                    -0.03769363211951145,
                    0.019355862381116185,
                    -0.047523510029732915,
                    0.04416745451133494,
                    0.018485955259385727,
                    0.006817722468536838,
                    -0.027241431345944596,
                    0.06978508772536612,
                    0.0039055136766213885,
                    -0.019556785993784943,
                    0.012977282976302665,
                    -0.05020886186133403,
                    0.02636599584824201,
                    -0.007182616670372273,
                    0.0317926080408354,
                    -0.040691201913866264,
                    0.03673198629928908,
                    -0.02505501978576928,
                    -0.03772019981116796,
                    0.02070686268914546,
                    0.029654399723456654,
                    -0.0030291463438408867,
                    0.018825721565401205,
                    -0.03640888383493189,
                    0.006963469508283964,
                    0.003429177783700901,
                    0.013213233920853893,
                    -0.016451250134675088,
                    -0.021857894178062193,
                    -0.04163084449016911,
                    0.008811084442256112,
                    0.0028107735226888327,
                    -0.06461145583098798,
                    -0.0066533258233237545,
                    -0.0032123943760435448,
                    -0.007071387375717538,
                    0.033364362289981984,
                    -0.02058573203661305,
                    0.0026610745349192094,
                    0.0306139397213433,
                    0.06562154510772283,
                    0.023023572555256815,
                    -0.01098823928013034,
                    -0.04238827739435556,
                    0.03142779473973972,
                    -0.08384352121860025,
                    0.011233920701980774,
                    0.04959658429518635,
                    -0.023521393970728395,
                    -0.05984000210537108,
                    -0.04536825683268467,
                    -0.050317763909272575,
                    -0.01965551541741313,
                    -0.024166176657079857,
                    0.008215898263732792,
                    -0.05846867422358301,
                    -0.03785352159989815,
                    0.028725974495961423,
                    0.010465731114723419,
                    0.004446683740968622,
                    -0.004381035569288565,
                    -0.027274077482923712,
                    -0.0551155904053257,
                    0.03292885175368299,
                    -0.01625307341022797,
                    -0.0069844777987747774,
                    -0.0005537800520776814,
                    0.029761335487492466,
                    0.004157888946648501,
                    0.04683397058449861,
                    0.03147297560234808,
                    -0.010698771177528377,
                    -0.0523097222393029,
                    0.08072587679519629,
                    0.008703225254170513,
                    0.002314690585679358,
                    0.009191918963332178,
                    -0.00268830461734112,
                    0.008219715593225006,
                    0.05548658968540783,
                    0.03233576831215105,
                    0.003272823465045403,
                    0.006172116691410888,
                    -0.042468956154746836,
                    0.01647787718304243,
                    -0.03808451178442273,
                    -0.016679968484262418,
                    -0.026556026248455593,
                    -0.030885536525529826,
                    -0.010207863331709872,
                    -0.020641375503005693,
                    -0.050716250409988714,
                    0.012138964357986745,
                    -0.019129496864121794,
                    -0.018731962020094466,
                    -0.019894777090263178,
                    0.019533669366078813,
                    -0.002859786420235979,
                    0.04088722222262912,
                    0.06599003160160138,
                    0.003020378881113404,
                    -0.005502909989510349,
                    0.05562846864645297,
                    0.028922885909622897,
                    -0.034982944501582514,
                    -0.00247328622736033,
                    -0.03281743211067855,
                    0.021027331904353155,
                    0.02846768136494721,
                    -0.0064252178771364,
                    -0.05406486678428746,
                    -0.0005723712022187971,
                    -0.012553763156158412,
                    -0.058510404833381935,
                    0.0021481372007967035,
                    -0.033502014599747235,
                    -0.006039897648054478,
                    -0.053450718305821134,
                    0.045770806774479283,
                    0.010472739794791424,
                    -0.025287734179358198,
                    -0.02484095883076941,
                    -0.010398360314476695,
                    -0.010886594934042178,
                    0.014314026209482982,
                    -0.005311169610411948,
                    -0.017152324087138765,
                    0.050968004348331764,
                    -0.0031314116264317773,
                    -0.04289230622650364,
                    -0.008977078372843388,
                    -0.0680770875488681,
                    0.053095846986775115,
                    0.044686616058845594,
                    0.053174106397788364,
                    0.022123783617204316,
                    0.0005023013922519924,
                    -0.051340383456645315,
                    -0.010113461187617325,
                    -0.019771753920958018,
                    0.004982471481305482,
                    -0.030459662973541114,
                    -0.006305349734290122,
                    0.031139835657055016,
                    0.03837334051108738,
                    0.04438554359091878,
                    -0.05076945115777922,
                    0.00520495647122423,
                    0.03756510985976469,
                    0.05061969681193939,
                    -0.007393368698541849,
                    -0.03558496038590619,
                    -0.024205862115851715,
                    0.013026526052791471,
                    0.015656473701784305,
                    -0.013833939414057136,
                    -0.0238942426450012,
                    -0.02848377739523442,
                    0.002374580154042094,
                    0.04021916240821428,
                    0.014049526932376091,
                    0.027569020853205627,
                    -0.022972496701045796,
                    0.015349338885286862,
                    -0.0037955469890781552,
                    0.016923332389599265,
                    -0.01936810611649862,
                    -0.02934127812090245,
                    -0.04600459929461295,
                    0.011199405614270323,
                    -0.04093514676067319,
                    -0.016696760120682514,
                    -0.01170731084213117,
                    0.028307367132505073,
                    -0.019402922266062418,
                    0.03658393095069698,
                    0.0018901043773662952,
                    0.03933418610386921,
                    -1.2162596351386934e-05,
                    -0.0038997666308598134,
                    -0.005352440211693747,
                    -0.012084209257153145,
                    -0.008298419561362513,
                    -0.005657812923257504,
                    -0.03271135247935259,
                    -0.03894842655157636,
                    0.0018749204084498243,
                    -0.010058023830051891,
                    -0.025304821002797833,
                    -0.029556127193921703,
                    -0.07099889668078205,
                    -0.005910002349146956,
                    -0.04237407864098363,
                    0.05250819028107034,
                    0.01788320222851821,
                    0.007378211016371804,
                    -0.02798042591784779,
                    0.01646507761901981,
                    -0.043822106031693786,
                    0.026157037674829135,
                    0.03477232827422151,
                    0.0006932880387900787,
                    0.034823824446226476,
                    -0.009477492331506326,
                    0.009549903527743164,
                    0.02270455103610015,
                    -0.019972730503078264,
                    0.005105890031869141,
                    -0.05505125879921819,
                    0.009944346608679861,
                    -0.010214792341909385,
                    -0.03939804361606737,
                    0.012094904728377211,
                    -0.017886377486190458,
                    0.0499393188440355,
                    0.013838409947981857,
                    0.001404372903091645,
                    -0.035375911145372654,
                    0.0025380045725093467,
                    0.0007476271593474333,
                    0.02903751221768915,
                    -0.038192573804690794,
                    0.02566778613173048,
                    0.014589880471541375,
                    -0.011326648179034858,
                    0.03708559527697261,
                    0.03220586243061415,
                    -0.020653925015240143,
                    0.0064404595147965924,
                    0.03506941251451102,
                    0.025257169976702666,
                    0.022301078934225567,
                    -0.020971911987160512,
                    -0.004295611901677334,
                    0.0008634955855193691,
                    -0.013282430627635861,
                    0.01902966753760227,
                    -0.0478128568303022,
                    0.004471876801187313,
                    0.0178924054457919,
                    -0.009650948884818796,
                    -0.034260833539088424,
                    0.019038428420987012,
                    -0.03457783793759405,
                    -0.04067153108046062,
                    0.0039330838527026225,
                    -0.000893510045398468,
                    -0.00192241082297376,
                    0.0034741841143343427,
                    0.016860122552591554,
                    0.010756720591773974,
                    -0.019646954890009127,
                    0.02966529019637873,
                    -0.02694799405638787,
                    0.01545595314007413,
                    0.04308577281878638,
                    0.03853688911693685,
                    0.006525056966885407,
                    0.024470317215157068,
                    0.0011603235963794595,
                    -0.043184601632885365,
                    0.006967555353351721,
                    -0.023969861054164564,
                    0.020145889300009823,
                    0.003386819643221997,
                    -0.041095989647756785,
                    -0.0338925659056409,
                    -0.014922918291351337,
                    0.013137164161761727,
                    0.01832297397326967,
                    -0.0035884264729581315,
                    -0.008498252601349772,
                    -0.0021730209143652674,
                    0.020711975380257937,
                    0.06134559862274253,
                    -0.017751114572447328,
                    -0.00254463228957966,
                    0.000975338248381104,
                    -0.016524086861484835,
                    -0.012610900352752006,
                    0.008509390288102622,
                    -0.03131097844364013,
                    -0.0011770353529698564,
                    0.014745132560150778,
                    0.0483903230303156,
                    0.03645023095153379,
                    0.059459913720596384,
                    0.03934298854155599,
                    0.02893092224138389,
                    0.02681344705116248,
                    0.016794620194186365,
                    0.03338763220868781,
                    0.024920569299850766,
                    -0.03462750046120074,
                    -0.0013496696766677567,
                    0.053341021019413105,
                    0.016622502438151932,
                    -0.022205320409261948,
                    -0.05556028717757145,
                    -0.08158810020356051,
                    -0.013873756321347961,
                    -0.049846724040001164,
                    0.0035806755357564563,
                    -0.021769213371288707,
                    -0.011668562476216676,
                    0.003671769659038614,
                    -0.042704499067823753,
                    -0.006618036804449568,
                    0.0008268376766771586,
                    0.01470930315325488,
                    0.04020640706391545,
                    -0.006505289833803296,
                    -0.00935750921095461,
                    -0.022104551715998993,
                    0.02953308326905177,
                    0.0026171326669236702,
                    -0.02745359725708585,
                    -0.021108777801877004,
                    0.014775237555019293,
                    0.023546809835202916,
                    -0.03129994056237994,
                    -0.022405621857897684,
                    0.01482249466941108,
                    -0.038712959571328184,
                    -0.04769334731138327,
                    0.015514762376593048,
                    0.02109058643542001,
                    -0.02885666555825377,
                    -0.01443864733007949,
                    0.022776049724089666,
                    -0.03466026386202887,
                    -0.019229678926496928,
                    -0.019649809258874575,
                    0.09092588226117689,
                    -0.017441776039733934,
                    0.037073432550083246,
                    0.0019233551663368257,
                    0.044829682258303166,
                    0.0003256966387773929,
                    0.031717449709118405,
                    -0.006157267285301232,
                    0.003774787087070688,
                    0.039037527998811786,
                    -0.026482091397740045,
                    0.007159794605256055,
                    0.04843408072790444,
                    0.032344841387959004,
                    0.0054475538485024575,
                    -0.02353110805928128,
                    0.03907192121879321,
                    0.02602120326490348,
                    0.018846711133880322,
                    0.02169275004749294,
                    0.00018481254671597373,
                    -0.049364636241084545,
                    0.011488394614115771,
                    -0.08200933901649649,
                    0.010588022617865048,
                    -0.02730972435879611,
                    0.002286975284140348,
                    -0.007117744554146144,
                    -0.02927946443565936,
                    0.11297491883993169,
                    0.027611238621572092,
                    0.028188720854909803,
                    -0.005697621312378764,
                    -0.029275894235885905,
                    -0.0064666613118821254,
                    0.017592387077788173,
                    0.011406475013187294,
                    -0.016131632706404865,
                    -0.0038323168666354233,
                    0.010579731024383239,
                    0.04439828466840789,
                    0.0019739915746509107,
                    -0.015154682077831667,
                    0.018974549672381377,
                    -0.01784462553884971,
                    0.0077423338418019525,
                    0.011842319331780253,
                    0.027002348883484885,
                    0.027799388899225334,
                    0.015084153724953746,
                    0.028453149089517002,
                    -0.005079260154389971,
                    -0.04175870594500707,
                    0.03891626885417189,
                    0.0015417126089635645,
                    0.014609453092478478,
                    -0.026473431600237497,
                    -0.02957152753994335,
                    -0.017181865340903657,
                    0.02443595422559533,
                    -0.03122205354320039,
                    0.015027969387468035,
                    -0.05135281506588757,
                    -0.017349696158996605,
                    0.007941814218667511,
                    -0.018011956608973312,
                    0.00026398327400425036,
                    -0.008058452920061757,
                    -0.038017007625792014,
                    -0.03822774300922787,
                    0.011709878052393003,
                    -0.12088519562685182,
                    -0.027522548889020868,
                    -0.01985698309685104,
                    0.039895466085955456,
                    0.006876789707151364,
                    0.011223834590386455,
                    0.011602846510844032,
                    -0.004756658499679067,
                    0.027673254920885553,
                    -0.0013054214863571147,
                    -0.009456393809557925,
                    0.04388474662314404,
                    -0.052762169935715864,
                    -0.007937120765544781,
                    0.010405323212133184,
                    -0.012673609879369342,
                    -0.001164217943388171,
                    0.005149956394156516,
                    0.028066211060338367,
                    -0.008227879565639673,
                    0.0165825069676253,
                    0.005998708196891901,
                    0.013700843776612102,
                    -0.027339418368579244,
                    -0.005699395861354215,
                    0.00813873325148324,
                    -0.028637378088304587,
                    -0.018327052098356895,
                    -0.004521177364375875,
                    0.0067022987869361445,
                    -0.015353208643588157,
                    0.0011635459737993881,
                    -0.006741304097024539,
                    0.007569446394236508,
                    -0.041453989858213594,
                    0.007030246356080938,
                    -0.006382998071737243,
                    -0.007973089639323677,
                    0.002287513196260582,
                    -0.012106236529065643,
                    -0.00195402110204331,
                    0.02627679184817438,
                    0.008105339838633627,
                    -0.005852555514567011,
                    -0.02348811501106305,
                    0.004684333458740177,
                    -0.019099918023387195,
                    0.016071020176696517,
                    -0.05217701791204528,
                    0.017349762249333333,
                    0.0006363735185752948,
                    0.004183112731121604,
                    -0.05782410346627454,
                    -0.002775721797365099,
                    -0.03552098101004301,
                    0.02939998812276058,
                    -0.011167313349195013,
                    -0.03614810804444449,
                    -0.008815705534574472,
                    -0.001034687908493247,
                    -0.024520883807887035,
                    -0.027506862531734178,
                    0.04741393368417392,
                    0.02189731651830731,
                    -0.004262160744489198,
                    0.007807219537091867,
                    0.02338501327283315,
                    -0.0018639135410278788,
                    0.049493763377973565,
                    -0.032202759468028336,
                    0.01059176784645134,
                    0.001906405327478169,
                    -0.027291600677061746,
                    0.003751295884568217,
                    -0.0055478607374684595,
                    0.016121989722441738,
                    -0.01653937005242395,
                    -0.02504346865295088,
                    -0.02179805105809039,
                    0.01876167123456407,
                    -0.039369027367538244,
                    -0.006180175163225022,
                    0.014417666318059331,
                    -0.009812591565836623,
                    0.0421337517648745,
                    0.002425762866752586,
                    -0.006054299399711255,
                    -0.006285703286152173,
                    0.0344733521369073,
                    -0.0165893269020443,
                    -0.014530582694452208,
                    0.007732073808963371,
                    0.004402183159082948,
                    0.022883093523823582,
                    0.03026101011078023,
                    0.008983710080545111,
                    -0.00017341198583223445,
                    0.04240547260236358,
                    0.004819506583298258,
                    0.007172128222206595,
                    -0.01922961709698386,
                    0.059154086097811184,
                    -0.004201621130442787,
                    -0.001499965340172708,
                    -0.014026023298196078,
                    0.02382845401821657,
                    0.00451590860031031,
                    -0.025513144498318745,
                    -0.007045848542871744,
                    0.01981399401479119,
                    0.01131999272675468,
                    0.019676421570159065,
                    -0.019358435544027178,
                    0.0009800913492726939,
                    -0.0051015842616913,
                    -0.00022069604654968117,
                    -0.03274117770389984,
                    0.02230777122155442,
                    -0.03515109221531938,
                    0.022118201619341603,
                    0.008009231843210536,
                    0.008780816532123254,
                    -0.004996159599861709,
                    -0.007407910545475662,
                    -0.010087739897434984,
                    0.02639981149885372,
                    -0.002915086849229414,
                    0.01765949929810824,
                    -0.05547402556860644,
                    -0.01605231431924783,
                    8.909219441832373e-05,
                    -0.0037535557546332474,
                    -0.000358211302455022,
                    0.013090441726088189,
                    0.025722066063426797,
                    0.0026150528030250034,
                    -0.024839299510691377,
                    -0.011617835350282948,
                    0.03719342795185609,
                    0.024942747099745095,
                    0.0012730193728154831,
                    0.0059965290380979384,
                    -0.002305643753480009,
                    0.00243609573137161,
                    0.028095470303115266,
                    0.0501132980412075,
                    -0.004534641497658029,
                    0.003920890200389394,
                    -0.022272330569052985,
                    -0.003425696311629793,
                    -0.03217506452694044,
                    0.00033043073336407974,
                    0.041159815055694264,
                    -0.0049054424090242835,
                    -0.0027452719936898926,
                    -0.059110221192601786,
                    -0.03461968782889448,
                    -0.030831707261417627,
                    0.014304558323938194,
                    0.0129069544056606,
                    0.02969186770794749,
                    0.01512449333420842,
                    0.0008806267764245358,
                    0.0009469988189375404,
                    -0.015144051709075646,
                    0.023054771384508926,
                    -0.039273983843273824,
                    0.015173990092799764,
                    -0.03636909392093626,
                    -0.005940321024890795,
                    -0.021971659873727237,
                    -0.015457929782077948,
                    -0.06645946812965321,
                    0.029133680289623286,
                    0.014980482240582845,
                    -0.04661331376061633,
                    0.004475046025441665,
                    -0.0440690345046696,
                    -0.05760296259148699,
                    0.004358122565957519,
                    0.040939306044883855,
                    0.004569382095034482,
                    -0.01799504230502719,
                    -0.02363523948446027,
                    0.0041246016155695635,
                    -0.012877806322322086,
                    -0.009081837235373024,
                    -0.035845025130971285,
                    -0.0037120005238760237,
                    -0.008983002311834444,
                    -0.0327784793200114,
                    0.031155720369950558,
                    -0.01985991983742473,
                    -0.009512944490573001,
                    -0.010272982550572,
                    0.039077574973293824,
                    -0.022168597418042668,
                    0.02343233230054551,
                    -0.001019626517759219,
                    -0.023610964627172007,
                    0.01077231046833419,
                    -0.004711878896695189,
                    0.04608517742981285,
                    0.011223035295523508,
                    0.012371546414130272,
                    0.006301620241789423,
                    0.0010091356719940771,
                    -0.005977510670461627,
                    0.05071424686657401,
                    -0.042581686384611454,
                    0.006565764045099908,
                    -0.022394514670388565,
                    0.025014218243509613,
                    0.02886450954629065,
                    -0.03974891915330339,
                    -0.019693951052295794,
                    0.0012897784746098023,
                    -0.029315097879040384,
                    0.034100674029659134,
                    -0.004025495914594572,
                    0.022944989718877432,
                    -0.027723973676458336,
                    0.03130691476653004,
                    0.008566712993213979,
                    0.011671272068565067,
                    -0.008055471158880126,
                    -0.03124272500481116,
                    0.05187731488249656,
                    -0.012797980070827155,
                    0.009761041485664222,
                    -0.02587686864630927,
                    -0.03682910355867577,
                    0.03618126165076515,
                    -0.01723414293816994,
                    -0.010901637575124658,
                    0.00259143142805338,
                    -0.03098835159802891,
                    0.00874725041273156,
                    0.021866291267970236,
                    -0.04504060596523029,
                    -0.03736758825592173,
                    0.002540688961088042,
                    0.003014438115038007,
                    -0.00030589188425829487,
                    0.02266167464622543,
                    -0.013349854028404834,
                    -0.004180128297381699,
                    0.04779803901063854,
                    -0.013606349215833603,
                    0.007404053948054078,
                    -0.05250975265365,
                    -0.016104169469754067,
                    0.013405165313545383,
                    -0.016302833966423597,
                    -0.011882225809268192,
                    0.03179246886765432,
                    -0.003608229183333224,
                    -0.04064328691384891,
                    0.009943554415967924,
                    0.017136100832329665,
                    0.027936376690323488,
                    -0.0024298159879880617,
                    -0.02760216267661515,
                    0.03184511266562887,
                    -0.041298687696473754,
                    -0.017235121264663488,
                    0.0022352730743828877,
                    0.007451065589342531,
                    0.011950127871623228,
                    -0.017786449317050267,
                    -0.12359882897183626,
                    0.012456862291785746,
                    0.03863880494847621,
                    0.016089600761033506,
                    -0.018600912780515132,
                    0.028408851001902904,
                    0.02676528741569559,
                    0.04634180616747671,
                    -0.025529811610060456,
                    -0.009183367949582176,
                    0.01971752848533385,
                    -0.0074330708200679866,
                    -0.0033998472963434473,
                    -0.04668645986749973,
                    0.02312873570010669,
                    0.005639539165216157,
                    0.022228399210688234,
                    -0.007364472801770267,
                    -0.021456672189596945,
                    -0.05238716103937056,
                    -0.03173885307124164,
                    0.00668434869356537,
                    0.0026182910082697733,
                    -0.012089396677212465,
                    -0.005931493654768503,
                    0.011795797080661726,
                    -0.041417587775261,
                    -0.010127361876974442,
                    0.015607307993396696,
                    -0.0073092558531336884,
                    -0.00406977853216024,
                    -0.0030148350914910188,
                    0.021980266702464526,
                    -0.019671043656515577,
                    0.0033026322770189757,
                    -0.0010575039137989484,
                    -0.0065047028010760365,
                    -0.03749189504288851,
                    0.028684303381673094,
                    -0.008366145196952597,
                    0.01794368570564929,
                    -0.03301264534886571,
                    -0.00018968488306730322,
                    -0.002897208098213902,
                    0.008887768899359017,
                    -0.03966226686493845,
                    -0.0025584341733226957,
                    -0.000246793034208926,
                    0.014006243091038541,
                    0.014230517810348958,
                    -0.013593525015180545,
                    -0.028796163044502734,
                    0.01497606677887554,
                    0.012435929653444805,
                    -0.0061789539318835,
                    0.006234932524666919,
                    -0.0014101255316741766,
                    -0.017466774539467753,
                    -0.037814937546337093,
                    0.01765747590945984,
                    -0.006932968871725242,
                    -0.008298905413433215,
                    0.00637869347675448,
                    -0.024722849138848858,
                    0.006358696892421326,
                    -0.022342396458788258,
                    -0.0383630263150872,
                    0.020516108209587647,
                    0.012393162972304384,
                    -0.007245340890096858,
                    0.028937112653630026,
                    0.005029834318367191,
                    -0.014896607498656558,
                    0.008587292767369782,
                    -0.021209284045103832,
                    0.03764586428637621,
                    -0.005864086236835288,
                    -0.005171732869816921,
                    -0.016394707905760874,
                    -0.00046794889359149527,
                    0.06981489271476761,
                    -0.010077114537207724,
                    0.016120880998845098,
                    -0.0031670098464149808,
                    0.014792852522855926,
                    0.00026324333993037565,
                    -0.0030561860584026887,
                    -0.0004644331693292793,
                    -0.010979351521800858,
                    -0.0007057574979041835,
                    0.000568659899181617,
                    0.03760948825259806,
                    -0.004589354107337392,
                    0.011812998914442721,
                    -0.036506684051774235,
                    -0.04942320153577997,
                    0.014464197218975402,
                    -0.026541541242516307,
                    0.006775575739697471,
                    0.008942555864682117,
                    0.021512026003606247,
                    0.016116948673178658,
                    -0.010535085533976862,
                    -0.0419754659582508,
                    -0.01757384362052738,
                    -0.005492554058069181,
                    0.0023776451123254283,
                    0.0054844390982165155,
                    -0.013206911812878294,
                    -0.012283319309661506,
                    0.019854872055563143,
                    0.034974307571483634,
                    0.004013147311091001,
                    0.028850844876423847,
                    -0.0023228365961804782,
                    0.006293117925479472,
                    0.026602539868645213,
                    -0.04977039012838075,
                    0.0009398746937981146,
                    -0.008511346288493732,
                    -0.03214003641459635,
                    0.01984187132830925,
                    0.03557523368476698,
                    -0.015781882977582512,
                    -0.04072695793096515,
                    0.012551574677428491,
                    -0.009994227450610224,
                    0.047440689883443216,
                    -0.007686331376294833,
                    -0.013354567365446242,
                    0.006680125267474061,
                    0.024366040449137826,
                    -0.008195977774350688,
                    -0.0042299477255081175,
                    0.004780612818219351,
                    -0.015707091741194237,
                    0.001966853550921997,
                    0.013401923840110462,
                    -0.006034557712556356,
                    -0.023527753459279793,
                    -0.0006759331515763876,
                    -0.010972413873689016,
                    0.010490080642553965,
                    0.013401363690571487,
                    0.01800449806821883,
                    0.01332012416756694,
                    -0.02379853313094182,
                    0.010025936664656463,
                    -0.006006389340141513,
                    -0.011037804341760845,
                    0.030173297253245968,
                    -0.04355268334341083,
                    -0.00895139790233654,
                    -0.016598909928802467,
                    -0.04883981864633138,
                    -0.020184064524394193,
                    -0.022500251874234163,
                    -0.015235251562337543,
                    0.047965319961201465,
                    0.012583745907777796,
                    0.025452309287663837,
                    -0.02104231929541472,
                    0.013164748208928488,
                    0.010810288944059773,
                    0.02743170143279869,
                    0.03087277101629868,
                    -0.001552257052838549,
                    -0.004736954520677925,
                    0.03130115634600054,
                    0.0034458030827767988,
                    0.01574075756203284,
                    0.025655533197165695,
                    0.03618761643791155,
                    -0.00858870977086173,
                    0.03173865708368989,
                    0.0572401465904318,
                    0.04312059606432086,
                    0.030827025347666806,
                    -0.010115231489426824,
                    -0.019696647447323527,
                    0.01222083900871962,
                    0.009412102817517493,
                    0.0036876023465682015,
                    0.047430966789578276,
                    0.030671732303254134,
                    -0.01139760159946013,
                    0.02976803015188015,
                    0.00553409544986666,
                    0.004270237377344359,
                    0.028345189867458848,
                    0.0642388282720256,
                    0.051169914622205236,
                    0.022627516626155135,
                    -0.005058007952915784,
                    -0.009652189254221264,
                    5.437918597441179e-05,
                    0.009352764395542118,
                    0.019660122020658848,
                    0.03360560758776686,
                    0.034258507458055795,
                    0.050954927602882054,
                    0.04584069046959928,
                    -1.5177844233262507e-05,
                    -0.017464177443383327,
                    -0.011002349707778816,
                    0.024640078857384642,
                    0.028075012939183252,
                    -0.0048650026213850756,
                    -0.045207029929523544,
                    0.034756598536990764,
                    -0.01637111662175175,
                    -0.001089817250626014,
                    -0.011528999130627248,
                    -0.00034196485946540753,
                    -0.024161742367377722,
                    -2.4038338211555952e-05,
                    -0.0347061314234455,
                    0.02170978122305478,
                    0.004662016636067471,
                    -0.0074691718815178085,
                    0.019261028742543353,
                    -0.013221133695760088,
                    -0.011855546193849806,
                    0.023051886610243478,
                    0.013312957134282006,
                    0.014130592575991745,
                    -0.006286821869507191,
                    -0.007989016378103515,
                    0.03913476611353245,
                    -0.0075429694824505,
                    -0.039225733037460866,
                    -0.012801406901171875,
                    -0.031842305522893466,
                    -0.012538091574748054,
                    0.02133966799983542,
                    0.002921630106478992,
                    0.007817277154583793,
                    0.013906040360153636,
                    -0.03672486658498612,
                    -0.01119908885776342,
                    0.03204323808689658,
                    -0.031740082510293866,
                    -0.00891314284054285,
                    0.035580581333657255,
                    0.02559172572034504,
                    -0.008776575703891627,
                    -0.01784449432115427,
                    0.0175723397838556,
                    -0.015757964827529142,
                    0.0035207902118439233,
                    -0.01802320721777004,
                    -0.021737323279544477,
                    0.039724385128177615,
                    -0.023999761927423778,
                    0.024872168537852634,
                    0.029946377739488876,
                    -6.730617285575911e-05,
                    0.020794780995668012,
                    0.016173858307311984,
                    0.035899975770294384,
                    0.00028701412696559444,
                    -0.010715301959292909,
                    0.007467701989818739,
                    -0.005378262804798876,
                    -0.020152589422235773,
                    -0.0059447430063509455,
                    -0.029668794680131727,
                    0.020553924693790502,
                    0.014629014111693199,
                    -0.0022926720344018468,
                    -0.0003576126395672367,
                    0.013347448618154002,
                    -0.0020880417213991294,
                    0.012051232367485783,
                    0.010496534077236228,
                    0.012094098175974803,
                    -0.006409484351865242,
                    -0.057199596751592474,
                    0.02949785783214055,
                    -0.01318339965993818,
                    -0.002223862422308214,
                    -0.0007060445630164472,
                    0.001437946842673993,
                    0.007546634051149684,
                    -0.014504652374179002,
                    -0.01058568266994751,
                    -0.013988922122305335,
                    -0.059766495052172186,
                    0.0022989772515488315,
                    -0.0285513187760525,
                    -0.007392887844926319,
                    -0.02875043606731137,
                    -0.006442266762467482,
                    -0.0038574582135251045,
                    0.007256984538238236,
                    -0.03381482212354351,
                    0.017175385322458235,
                    -0.0040694605289207115,
                    0.00670988078515528,
                    -0.012739688559665265,
                    0.006965290406565437,
                    0.007716632398774678,
                    0.017207575792520094,
                    -0.02599182046177519,
                    0.012045754629250466,
                    0.031207365498552405,
                    0.0332786320856874,
                    -0.01960759262275177,
                    -0.011571543416019335,
                    -0.01924340458242864,
                    0.018888196117145123,
                    0.015309784826749597,
                    0.01021234757656435,
                    0.002026208950148647,
                    0.04015678600992674,
                    0.04595811522518489,
                    -0.020396007028826404,
                    -0.02275007071004235,
                    -0.02011298539337085,
                    0.0013039621544230697,
                    -0.0005646026620182761,
                    0.01827347727465385,
                    0.007747619279725263,
                    -0.029243679563246344,
                    -3.9398344653270534e-05,
                    0.005465140353074334,
                    0.012302920634235052,
                    -0.0007886115322946013,
                    -0.00705386111629341,
                    0.00813504205350919,
                    0.014144474025826994,
                    0.005162008276191746,
                    0.021628987279777964,
                    0.021824474112275786,
                    -0.03392308334433709,
                    0.04213654458670438,
                    0.014502190748686637,
                    0.009385960266410833,
                    -0.027713777756725,
                    0.01038818659553474,
                    0.021390943284951506,
                    0.018006442414805274,
                    0.006440626499187176,
                    0.025673416888699264,
                    0.0024026956077641904,
                    0.0033085760449435564,
                    0.009537123073425522,
                    0.027340972870311786,
                    -0.010407141509580295,
                    -0.04901921566372423,
                    0.09629448041567265,
                    0.015039569998484085,
                    -0.006403617943000276,
                    0.0386532241235667,
                    -0.008273988193478266,
                    0.00919289400996932,
                    0.008684055174920836,
                    0.021662081031190227,
                    -0.002410521270361498,
                    -0.006780325625204779,
                    -0.022009567635670888,
                    0.03239812583813235,
                    0.012859343774947489,
                    0.0024884500758405657,
                    0.0111254344006177,
                    0.01833456221825105,
                    -0.012268198956098812,
                    -0.0028950622031749572,
                    0.014422997221836424,
                    0.01216470577949997,
                    0.03463133381856443,
                    0.0020090658563075656,
                    0.017777285681750705,
                    -0.016351192458372094,
                    0.0017116424567669756,
                    -0.005964203315118195,
                    -0.012608048587451607,
                    0.009726924927310138,
                    0.017483307180042408,
                    0.012340291586634536,
                    0.01420229894070465,
                    -0.01772001320912158,
                    -0.03361016603435403,
                    -0.016989344263611303,
                    -0.0022532520456134,
                    -4.720135353444721e-05,
                    0.01275125630609125,
                    0.01810111599567974,
                    0.0156653196082742,
                    -0.008500511468971662,
                    -0.045942577151792466,
                    0.0005704140143754645,
                    -0.01199886518899007,
                    0.006920904108023494,
                    0.00551305438158153,
                    -0.0006312047958105993,
                    -0.0009895754810187647,
                    0.006028103720984521,
                    0.008145454489132535,
                    -0.0030489286436914706,
                    -0.005992535001002543,
                    -0.015274690819716382,
                    0.00264943630229257,
                    -0.014273968159786212,
                    -0.02002771005042495,
                    -0.04873645608262969,
                    0.008981740542735341,
                    0.0020894755001613628,
                    0.004564502923133157,
                    -0.008197517773799692,
                    -0.05617793532986405,
                    0.02071404905473873,
                    -0.017038707713496113,
                    -0.03080711343534833,
                    -0.02630070781953156,
                    -0.013032704850039585,
                    -0.01752526993631121,
                    -0.0057966269732819785,
                    -0.045597304868810896,
                    0.03394587111455198,
                    -0.03062802692355921,
                    -0.0201475531817781,
                    -0.02162024775420887,
                    0.0035439478876240554,
                    0.005678268188723461,
                    -0.022928538844393113,
                    -0.00385982859821896,
                    0.015516532299814517,
                    0.0012252409036089286,
                    0.03990116287967174,
                    0.019476200574504273,
                    -0.02721789400571141,
                    -0.020935070289378313,
                    -0.005809257544251879,
                    -0.012953206907272927,
                    -0.0074735995896893755,
                    0.0015796824142648754,
                    -0.03198583745363332,
                    -0.01220432349307848,
                    0.01556531256276959,
                    0.016880374605893922,
                    0.011852894457147134,
                    -0.01698578027373659,
                    -0.004597533990785951,
                    -0.01284684359383205,
                    -0.007821215211495956,
                    0.040207207135580125,
                    -0.014711570074382582,
                    0.010745788713458439,
                    0.018776011916211834,
                    0.006378077080728302,
                    -0.008323238274614807,
                    0.009132356527999617,
                    0.013467524925356716,
                    -0.04542790886258989,
                    0.0016666573196383277,
                    -0.02161616371085155,
                    -0.002293839564223129,
                    0.005972808040426096,
                    0.013752561055523414,
                    -0.008463041062894283,
                    -0.028919073278257143,
                    0.03401686687783337,
                    0.010767176751615802,
                    0.0007040550798951904,
                    -0.003034880649727873,
                    0.011166305586583256,
                    -0.002759776111542973,
                    0.02322484845921552,
                    0.0021528153769871288,
                    0.029973390639903688,
                    -0.020836394356644538,
                    0.046940030569044576,
                    0.004161657726103738,
                    -0.0021054811513445833,
                    0.04064373467688042,
                    -0.02177153636344233,
                    0.03164469879446735,
                    -0.025230600674819696,
                    0.012616330361995196,
                    -0.0006645154377848769,
                    -0.034978859396504136,
                    -0.001939777488788398,
                    -0.0016760749324918943,
                    0.011371244048440986,
                    -0.008140130974164292,
                    0.03679567958070582,
                    0.021432622151413734,
                    -0.03466586394587356,
                    -0.03259852654006414,
                    0.023285111104265004,
                    0.01638580352197541,
                    -0.016353926224979578,
                    -0.009713614810290703,
                    0.010742634993774678,
                    0.0062215458490586404,
                    0.004324996397450763,
                    -0.01871751434092547,
                    0.00038050009324335177,
                    -0.031010699665941107,
                    -0.016916886663970156,
                    -0.009514319232371025,
                    -0.021694956264476494,
                    0.029886864952479095,
                    -0.005720062316585269,
                    -0.022925875554808094,
                    0.014954424723632518,
                    0.008593632189631255,
                    0.009311266366524778,
                    -0.013470747574291637,
                    0.013384889950669972,
                    -0.026668166263233057,
                    -0.003155086366963651,
                    0.025511983201435585,
                    0.007868819970585672,
                    0.020311955252798303,
                    -0.02261144507123267,
                    -0.0050295557754552675,
                    0.008666899733116597,
                    0.006787162240715569,
                    -0.017479296519055592,
                    -0.033504369287688206,
                    -0.015285926178166237,
                    -0.007254420078593052,
                    -0.02536712898233563,
                    -0.02825538570835399,
                    -0.020648936871089832,
                    0.04529964173514229,
                    -0.023660824960437806,
                    -0.014699953883629543,
                    -0.024706839430970504,
                    -0.02625269407678989,
                    0.020553696596047104,
                    -0.004450064885580129,
                    0.010299366007173238,
                    -0.00389707660371087,
                    0.03122889371149408,
                    -0.006302125350419269,
                    0.029603925005075114,
                    -0.002601162403504623,
                    0.020312781093436687,
                    -0.007808411017646798,
                    0.012279829608916439,
                    -0.02716161024311401,
                    0.026978287340893675,
                    -0.010476649964601166,
                    -0.03180376856810055,
                    0.013303197835240903,
                    0.01903516171151076,
                    -0.007199940631899563,
                    0.014154506956432228,
                    -0.011581629667781793,
                    0.015287102247954208,
                    0.010642743885760983,
                    0.01015652296242661,
                    0.0075806832185919115,
                    -0.015864525948292595,
                    0.032430330398250586,
                    0.0027782418827215923,
                    -0.022426710379317122,
                    0.013973368863761028,
                    -0.0027606958713283563,
                    -0.018047139891166974,
                    0.059245915708285385,
                    0.02380436555722842,
                    -0.0001832625546027824,
                    -0.017318226041215874,
                    0.04436267983111556,
                    -0.018279950879716615,
                    0.030873150859600497,
                    -0.03264676332668768,
                    0.015358909010438725,
                    -0.003979861005586362,
                    -0.04292266110055067,
                    -0.00590411133779796,
                    0.0023715592661911864,
                    -0.04342851609420254,
                    -0.002611478923936345,
                    -0.010884873634459615,
                    -0.006115571254817088,
                    0.0174551846380787,
                    -0.02322901805099746,
                    -0.022803107126327608,
                    0.0009487352856571257,
                    0.046860808528638845,
                    -0.0029049064744441897,
                    -0.009177165830559728,
                    0.022948954987101547,
                    0.020834063208969224,
                    0.010734133422783771,
                    -0.024538283941319832,
                    0.020744946892231796,
                    -0.024539627005686883,
                    -0.010500723264719075,
                    -0.015604380645879922,
                    0.018429937880742514,
                    0.009324351319178604,
                    -0.01312428516123717,
                    -0.026077768479590063,
                    -0.006419628734689935,
                    0.0352778407371918,
                    0.008953768016918101,
                    -0.007577823714002642,
                    -0.019208652963335595,
                    0.04837738421252317,
                    -0.028824274234725094,
                    -0.011409927906865763,
                    -0.03862465461896896,
                    0.016725379768177704,
                    -0.004001476600365531,
                    -0.0005162477746147896,
                    0.021951526915027216,
                    0.010185933542844255,
                    0.03237408594649378,
                    0.005241772926180357,
                    0.01183957291252829,
                    -0.02012394158511665,
                    0.011124067361644827,
                    -0.03075534968613691,
                    -0.021607375589812756,
                    -0.007688386231569092,
                    -0.020458569852345974,
                    -0.02214110400415728,
                    0.023337670866379813,
                    0.011306452258434387,
                    -0.0014949466204755692,
                    -0.017462503658904543,
                    -0.017181532022159968,
                    0.0018106173712116856,
                    -0.012923714659599768,
                    0.03304052275349966,
                    0.0288899825143867,
                    -0.010689322976135162,
                    -0.010319357816897903,
                    -0.0016010619072616965,
                    -0.022701864366124924,
                    -0.015004896924265747,
                    0.027239644046794,
                    0.024353125465506487,
                    0.0031528793336050944,
                    -0.0021260836098070876,
                    0.027601592369896226,
                    -0.00523064320505326,
                    -0.04151995821119687,
                    -0.03497280942049394,
                    -0.013564796943780268,
                    -0.02847330619436241,
                    -0.007706213088796382,
                    0.008022205830851422,
                    0.01642711733694627,
                    0.002822747691986291,
                    0.02702456259715869,
                    0.0006446392524740794,
                    -0.003386544894914664,
                    0.02345841417268755,
                    -0.01749617411666107,
                    0.015718603308984,
                    0.03792098214727748,
                    -0.031744538612030776,
                    -0.006409239714365207,
                    0.022366697689285005,
                    -0.05439632151856423,
                    -0.009480732624528476,
                    -0.003188684735900292,
                    -0.0003416666390706843,
                    -0.001136285905165819,
                    -0.009632680078916224,
                    0.020613522771928364,
                    -0.02365994805095544,
                    0.042341342273049226,
                    -0.046956644337072966,
                    0.012399148786122418,
                    0.0031723600492938827,
                    -0.009811514950558988,
                    0.015212227028032519,
                    -0.019827980589738177,
                    0.0024822353353424684,
                    0.01427549668184238,
                    0.015829437282809333,
                    -0.01950941971066911,
                    0.02904761283860646,
                    -0.012377412590799965,
                    0.016979408030244506,
                    0.007808362344215172,
                    0.03073834994652835,
                    0.011949198030136728,
                    0.006491437928189625,
                    0.0045204940058008085,
                    0.03981962603729774,
                    -0.010686826286936854,
                    -0.015044961640722845,
                    -0.004962922060501881,
                    0.016572990923230585,
                    -0.022692948135928093,
                    0.0226776741697621,
                    0.048849933279528135,
                    -0.030379116221074195,
                    0.004825999345731733,
                    -0.002350325326106183,
                    0.01280148236304161,
                    0.02552323961865448,
                    0.01687280284341146,
                    0.021280489978455393,
                    -0.011053176324658139,
                    0.014691891614044699,
                    -0.006031568765453568,
                    -0.0013371566558820459,
                    -0.004649694743752996,
                    -0.010202662498012875,
                    -0.0008184213284689579,
                    -0.013765047734316431,
                    0.01825921899871773,
                    0.03221924093215369,
                    -0.0197706751397255,
                    0.006183377748562283,
                    -0.0004800419225539589,
                    0.007634858618104316,
                    0.014686325973312663,
                    -0.0037513397747898285,
                    -0.0019323504968706948,
                    -0.006085013439363624,
                    0.026398850441079563,
                    0.03540313199119937,
                    0.006010781247148515,
                    0.02862103549776159,
                    0.02616944087112016,
                    -0.021006313905841418,
                    0.017786831551614334,
                    0.006448964687239589,
                    -0.015116934783596537,
                    -0.006014839617856116,
                    -0.04512275684697141,
                    -0.0035539874532675166,
                    -0.016943171884246683,
                    0.0022358271353160376,
                    0.019288383907031262,
                    -0.020711732552327423,
                    -0.0027744589946060018,
                    0.02933871164365458
                ],
                "beforePatchSourceCode": "static int\nmatch(PCRE2_SPTR start_eptr, PCRE2_SPTR start_ecode, uint16_t top_bracket,\n  PCRE2_SIZE frame_size, pcre2_match_data *match_data, match_block *mb)\n{\n/* Frame-handling variables */\n\nheapframe *F;           /* Current frame pointer */\nheapframe *N = NULL;    /* Temporary frame pointers */\nheapframe *P = NULL;\n\nheapframe *frames_top;  /* End of frames vector */\nheapframe *assert_accept_frame = NULL;  /* For passing back a frame with captures */\nPCRE2_SIZE heapframes_size;   /* Usable size of frames vector */\nPCRE2_SIZE frame_copy_size;   /* Amount to copy when creating a new frame */\n\n/* Local variables that do not need to be preserved over calls to RRMATCH(). */\n\nPCRE2_SPTR branch_end = NULL;\nPCRE2_SPTR branch_start;\nPCRE2_SPTR bracode;     /* Temp pointer to start of group */\nPCRE2_SIZE offset;      /* Used for group offsets */\nPCRE2_SIZE length;      /* Used for various length calculations */\n\nint rrc;                /* Return from functions & backtracking \"recursions\" */\n#ifdef SUPPORT_UNICODE\nint proptype;           /* Type of character property */\n#endif\n\nuint32_t i;             /* Used for local loops */\nuint32_t fc;            /* Character values */\nuint32_t number;        /* Used for group and other numbers */\nuint32_t reptype = 0;   /* Type of repetition (0 to avoid compiler warning) */\nuint32_t group_frame_type;  /* Specifies type for new group frames */\n\nBOOL condition;         /* Used in conditional groups */\nBOOL cur_is_word;       /* Used in \"word\" tests */\nBOOL prev_is_word;      /* Used in \"word\" tests */\n\n/* UTF and UCP flags */\n\n#ifdef SUPPORT_UNICODE\nBOOL utf = (mb->poptions & PCRE2_UTF) != 0;\nBOOL ucp = (mb->poptions & PCRE2_UCP) != 0;\n#else\nBOOL utf = FALSE;  /* Required for convenience even when no Unicode support */\n#endif\n\n/* This is the length of the last part of a backtracking frame that must be\ncopied when a new frame is created. */\n\nframe_copy_size = frame_size - offsetof(heapframe, eptr);\n\n/* Set up the first frame and the end of the frames vector. We set the local\nheapframes_size to the usuable amount of the vector, that is, a whole number of\nframes. */\n\nF = match_data->heapframes;\nheapframes_size = (match_data->heapframes_size / frame_size) * frame_size;\nframes_top = (heapframe *)((char *)F + heapframes_size);\n\nFrdepth = 0;                        /* \"Recursion\" depth */\nFcapture_last = 0;                  /* Number of most recent capture */\nFcurrent_recurse = RECURSE_UNSET;   /* Not pattern recursing. */\nFstart_match = Feptr = start_eptr;  /* Current data pointer and start match */\nFmark = NULL;                       /* Most recent mark */\nFoffset_top = 0;                    /* End of captures within the frame */\nFlast_group_offset = PCRE2_UNSET;   /* Saved frame of most recent group */\ngroup_frame_type = 0;               /* Not a start of group frame */\ngoto NEW_FRAME;                     /* Start processing with this frame */\n\n/* Come back here when we want to create a new frame for remembering a\nbacktracking point. */\n\nMATCH_RECURSE:\n\n/* Set up a new backtracking frame. If the vector is full, get a new one,\ndoubling the size, but constrained by the heap limit (which is in KiB). */\n\nN = (heapframe *)((char *)F + frame_size);\nif (N >= frames_top)\n  {\n  heapframe *new;\n  PCRE2_SIZE newsize;\n\n  if (match_data->heapframes_size >= PCRE2_SIZE_MAX / 2)\n    {\n    if (match_data->heapframes_size == PCRE2_SIZE_MAX - 1)\n      return PCRE2_ERROR_NOMEMORY;\n    newsize = PCRE2_SIZE_MAX - 1;\n    }\n  else\n    newsize = match_data->heapframes_size * 2;\n\n  if (newsize / 1024 >= mb->heap_limit)\n    {\n    PCRE2_SIZE old_size = match_data->heapframes_size / 1024;\n    if (mb->heap_limit <= old_size) return PCRE2_ERROR_HEAPLIMIT;\n    else\n      {\n      PCRE2_SIZE max_delta = 1024 * (mb->heap_limit - old_size);\n      int over_bytes = match_data->heapframes_size % 1024;\n      if (over_bytes) max_delta -= (1024 - over_bytes);\n      newsize = match_data->heapframes_size + max_delta;\n      }\n    }\n\n  new = match_data->memctl.malloc(newsize, match_data->memctl.memory_data);\n  if (new == NULL) return PCRE2_ERROR_NOMEMORY;\n  memcpy(new, match_data->heapframes, heapframes_size);\n\n  F = (heapframe *)((char *)new + ((char *)F - (char *)match_data->heapframes));\n  N = (heapframe *)((char *)F + frame_size);\n\n  match_data->memctl.free(match_data->heapframes, match_data->memctl.memory_data);\n  match_data->heapframes = new;\n  match_data->heapframes_size = newsize;\n\n  heapframes_size = (newsize / frame_size) * frame_size;\n  frames_top = (heapframe *)((char *)new + heapframes_size);\n  }\n\n#ifdef DEBUG_SHOW_RMATCH\nfprintf(stderr, \"++ RMATCH %2d frame=%d\", Freturn_id, Frdepth + 1);\nif (group_frame_type != 0)\n  {\n  fprintf(stderr, \" type=%x \", group_frame_type);\n  switch (GF_IDMASK(group_frame_type))\n    {\n    case GF_CAPTURE:\n    fprintf(stderr, \"capture=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    case GF_NOCAPTURE:\n    fprintf(stderr, \"nocapture op=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    case GF_CONDASSERT:\n    fprintf(stderr, \"condassert op=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    case GF_RECURSE:\n    fprintf(stderr, \"recurse=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    default:\n    fprintf(stderr, \"*** unknown ***\");\n    break;\n    }\n  }\nfprintf(stderr, \"\\n\");\n#endif\n\n/* Copy those fields that must be copied into the new frame, increase the\n\"recursion\" depth (i.e. the new frame's index) and then make the new frame\ncurrent. */\n\nmemcpy((char *)N + offsetof(heapframe, eptr),\n       (char *)F + offsetof(heapframe, eptr),\n       frame_copy_size);\n\nN->rdepth = Frdepth + 1;\nF = N;\n\n/* Carry on processing with a new frame. */\n\nNEW_FRAME:\nFgroup_frame_type = group_frame_type;\nFecode = start_ecode;      /* Starting code pointer */\nFback_frame = frame_size;  /* Default is go back one frame */\n\n/* If this is a special type of group frame, remember its offset for quick\naccess at the end of the group. If this is a recursion, set a new current\nrecursion value. */\n\nif (group_frame_type != 0)\n  {\n  Flast_group_offset = (char *)F - (char *)match_data->heapframes;\n  if (GF_IDMASK(group_frame_type) == GF_RECURSE)\n    Fcurrent_recurse = GF_DATAMASK(group_frame_type);\n  group_frame_type = 0;\n  }\n\n\n/* ========================================================================= */\n/* This is the main processing loop. First check that we haven't recorded too\nmany backtracks (search tree is too large), or that we haven't exceeded the\nrecursive depth limit (used too many backtracking frames). If not, process the\nopcodes. */\n\nif (mb->match_call_count++ >= mb->match_limit) return PCRE2_ERROR_MATCHLIMIT;\nif (Frdepth >= mb->match_limit_depth) return PCRE2_ERROR_DEPTHLIMIT;\n\nfor (;;)\n  {\n#ifdef DEBUG_SHOW_OPS\nfprintf(stderr, \"++ op=%d\\n\", *Fecode);\n#endif\n\n  Fop = (uint8_t)(*Fecode);  /* Cast needed for 16-bit and 32-bit modes */\n  switch(Fop)\n    {\n    /* ===================================================================== */\n    /* Before OP_ACCEPT there may be any number of OP_CLOSE opcodes, to close\n    any currently open capturing brackets. Unlike reaching the end of a group,\n    where we know the starting frame is at the top of the chained frames, in\n    this case we have to search back for the relevant frame in case other types\n    of group that use chained frames have intervened. Multiple OP_CLOSEs always\n    come innermost first, which matches the chain order. We can ignore this in\n    a recursion, because captures are not passed out of recursions. */\n\n    case OP_CLOSE:\n    if (Fcurrent_recurse == RECURSE_UNSET)\n      {\n      number = GET2(Fecode, 1);\n      offset = Flast_group_offset;\n      for(;;)\n        {\n        if (offset == PCRE2_UNSET) return PCRE2_ERROR_INTERNAL;\n        N = (heapframe *)((char *)match_data->heapframes + offset);\n        P = (heapframe *)((char *)N - frame_size);\n        if (N->group_frame_type == (GF_CAPTURE | number)) break;\n        offset = P->last_group_offset;\n        }\n      offset = (number << 1) - 2;\n      Fcapture_last = number;\n      Fovector[offset] = P->eptr - mb->start_subject;\n      Fovector[offset+1] = Feptr - mb->start_subject;\n      if (offset >= Foffset_top) Foffset_top = offset + 2;\n      }\n    Fecode += PRIV(OP_lengths)[*Fecode];\n    break;\n\n\n    /* ===================================================================== */\n    /* Real or forced end of the pattern, assertion, or recursion. In an\n    assertion ACCEPT, update the last used pointer and remember the current\n    frame so that the captures and mark can be fished out of it. */\n\n    case OP_ASSERT_ACCEPT:\n    if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n    assert_accept_frame = F;\n    RRETURN(MATCH_ACCEPT);\n\n    /* If recursing, we have to find the most recent recursion. */\n\n    case OP_ACCEPT:\n    case OP_END:\n\n    /* Handle end of a recursion. */\n\n    if (Fcurrent_recurse != RECURSE_UNSET)\n      {\n      offset = Flast_group_offset;\n      for(;;)\n        {\n        if (offset == PCRE2_UNSET) return PCRE2_ERROR_INTERNAL;\n        N = (heapframe *)((char *)match_data->heapframes + offset);\n        P = (heapframe *)((char *)N - frame_size);\n        if (GF_IDMASK(N->group_frame_type) == GF_RECURSE) break;\n        offset = P->last_group_offset;\n        }\n\n      /* N is now the frame of the recursion; the previous frame is at the\n      OP_RECURSE position. Go back there, copying the current subject position\n      and mark, and the start_match position (\\K might have changed it), and\n      then move on past the OP_RECURSE. */\n\n      P->eptr = Feptr;\n      P->mark = Fmark;\n      P->start_match = Fstart_match;\n      F = P;\n      Fecode += 1 + LINK_SIZE;\n      continue;\n      }\n\n    /* Not a recursion. Fail for an empty string match if either PCRE2_NOTEMPTY\n    is set, or if PCRE2_NOTEMPTY_ATSTART is set and we have matched at the\n    start of the subject. In both cases, backtracking will then try other\n    alternatives, if any. */\n\n    if (Feptr == Fstart_match &&\n         ((mb->moptions & PCRE2_NOTEMPTY) != 0 ||\n           ((mb->moptions & PCRE2_NOTEMPTY_ATSTART) != 0 &&\n             Fstart_match == mb->start_subject + mb->start_offset)))\n      RRETURN(MATCH_NOMATCH);\n\n    /* Also fail if PCRE2_ENDANCHORED is set and the end of the match is not\n    the end of the subject. After (*ACCEPT) we fail the entire match (at this\n    position) but backtrack on reaching the end of the pattern. */\n\n    if (Feptr < mb->end_subject &&\n        ((mb->moptions | mb->poptions) & PCRE2_ENDANCHORED) != 0)\n      {\n      if (Fop == OP_END) RRETURN(MATCH_NOMATCH);\n      return MATCH_NOMATCH;\n      }\n\n    /* We have a successful match of the whole pattern. Record the result and\n    then do a direct return from the function. If there is space in the offset\n    vector, set any pairs that follow the highest-numbered captured string but\n    are less than the number of capturing groups in the pattern to PCRE2_UNSET.\n    It is documented that this happens. \"Gaps\" are set to PCRE2_UNSET\n    dynamically. It is only those at the end that need setting here. */\n\n    mb->end_match_ptr = Feptr;           /* Record where we ended */\n    mb->end_offset_top = Foffset_top;    /* and how many extracts were taken */\n    mb->mark = Fmark;                    /* and the last success mark */\n    if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n\n    match_data->ovector[0] = Fstart_match - mb->start_subject;\n    match_data->ovector[1] = Feptr - mb->start_subject;\n\n    /* Set i to the smaller of the sizes of the external and frame ovectors. */\n\n    i = 2 * ((top_bracket + 1 > match_data->oveccount)?\n      match_data->oveccount : top_bracket + 1);\n    memcpy(match_data->ovector + 2, Fovector, (i - 2) * sizeof(PCRE2_SIZE));\n    while (--i >= Foffset_top + 2) match_data->ovector[i] = PCRE2_UNSET;\n    return MATCH_MATCH;  /* Note: NOT RRETURN */\n\n\n    /*===================================================================== */\n    /* Match any single character type except newline; have to take care with\n    CRLF newlines and partial matching. */\n\n    case OP_ANY:\n    if (IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n    if (mb->partial != 0 &&\n        Feptr == mb->end_subject - 1 &&\n        NLBLOCK->nltype == NLTYPE_FIXED &&\n        NLBLOCK->nllen == 2 &&\n        UCHAR21TEST(Feptr) == NLBLOCK->nl[0])\n      {\n      mb->hitend = TRUE;\n      if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n      }\n    /* Fall through */\n\n    /* Match any single character whatsoever. */\n\n    case OP_ALLANY:\n    if (Feptr >= mb->end_subject)  /* DO NOT merge the Feptr++ here; it must */\n      {                            /* not be updated before SCHECK_PARTIAL. */\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    Feptr++;\n#ifdef SUPPORT_UNICODE\n    if (utf) ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n#endif\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single code unit, even in UTF mode. This opcode really does\n    match any code unit, even newline. (It really should be called ANYCODEUNIT,\n    of course - the byte name is from pre-16 bit days.) */\n\n    case OP_ANYBYTE:\n    if (Feptr >= mb->end_subject)   /* DO NOT merge the Feptr++ here; it must */\n      {                             /* not be updated before SCHECK_PARTIAL. */\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    Feptr++;\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single character, casefully */\n\n    case OP_CHAR:\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      Flength = 1;\n      Fecode++;\n      GETCHARLEN(fc, Fecode, Flength);\n      if (Flength > (PCRE2_SIZE)(mb->end_subject - Feptr))\n        {\n        CHECK_PARTIAL();             /* Not SCHECK_PARTIAL() */\n        RRETURN(MATCH_NOMATCH);\n        }\n      for (; Flength > 0; Flength--)\n        {\n        if (*Fecode++ != UCHAR21INC(Feptr)) RRETURN(MATCH_NOMATCH);\n        }\n      }\n    else\n#endif\n\n    /* Not UTF mode */\n      {\n      if (mb->end_subject - Feptr < 1)\n        {\n        SCHECK_PARTIAL();            /* This one can use SCHECK_PARTIAL() */\n        RRETURN(MATCH_NOMATCH);\n        }\n      if (Fecode[1] != *Feptr++) RRETURN(MATCH_NOMATCH);\n      Fecode += 2;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single character, caselessly. If we are at the end of the\n    subject, give up immediately. We get here only when the pattern character\n    has at most one other case. Characters with more than two cases are coded\n    as OP_PROP with the pseudo-property PT_CLIST. */\n\n    case OP_CHARI:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      Flength = 1;\n      Fecode++;\n      GETCHARLEN(fc, Fecode, Flength);\n\n      /* If the pattern character's value is < 128, we know that its other case\n      (if any) is also < 128 (and therefore only one code unit long in all\n      code-unit widths), so we can use the fast lookup table. We checked above\n      that there is at least one character left in the subject. */\n\n      if (fc < 128)\n        {\n        uint32_t cc = UCHAR21(Feptr);\n        if (mb->lcc[fc] != TABLE_GET(cc, mb->lcc, cc)) RRETURN(MATCH_NOMATCH);\n        Fecode++;\n        Feptr++;\n        }\n\n      /* Otherwise we must pick up the subject character and use Unicode\n      property support to test its other case. Note that we cannot use the\n      value of \"Flength\" to check for sufficient bytes left, because the other\n      case of the character may have more or fewer code units. */\n\n      else\n        {\n        uint32_t dc;\n        GETCHARINC(dc, Feptr);\n        Fecode += Flength;\n        if (dc != fc && dc != UCD_OTHERCASE(fc)) RRETURN(MATCH_NOMATCH);\n        }\n      }\n\n    /* If UCP is set without UTF we must do the same as above, but with one\n    character per code unit. */\n\n    else if (ucp)\n      {\n      uint32_t cc = UCHAR21(Feptr);\n      fc = Fecode[1];\n      if (fc < 128)\n        {\n        if (mb->lcc[fc] != TABLE_GET(cc, mb->lcc, cc)) RRETURN(MATCH_NOMATCH);\n        }\n      else\n        {\n        if (cc != fc && cc != UCD_OTHERCASE(fc)) RRETURN(MATCH_NOMATCH);\n        }\n      Feptr++;\n      Fecode += 2;\n      }\n\n    else\n#endif   /* SUPPORT_UNICODE */\n\n    /* Not UTF or UCP mode; use the table for characters < 256. */\n      {\n      if (TABLE_GET(Fecode[1], mb->lcc, Fecode[1])\n          != TABLE_GET(*Feptr, mb->lcc, *Feptr)) RRETURN(MATCH_NOMATCH);\n      Feptr++;\n      Fecode += 2;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match not a single character. */\n\n    case OP_NOT:\n    case OP_NOTI:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      uint32_t ch;\n      Fecode++;\n      GETCHARINC(ch, Fecode);\n      GETCHARINC(fc, Feptr);\n      if (ch == fc)\n        {\n        RRETURN(MATCH_NOMATCH);  /* Caseful match */\n        }\n      else if (Fop == OP_NOTI)   /* If caseless */\n        {\n        if (ch > 127)\n          ch = UCD_OTHERCASE(ch);\n        else\n          ch = (mb->fcc)[ch];\n        if (ch == fc) RRETURN(MATCH_NOMATCH);\n        }\n      }\n\n    /* UCP without UTF is as above, but with one character per code unit. */\n\n    else if (ucp)\n      {\n      uint32_t ch;\n      fc = UCHAR21INC(Feptr);\n      ch = Fecode[1];\n      Fecode += 2;\n\n      if (ch == fc)\n        {\n        RRETURN(MATCH_NOMATCH);  /* Caseful match */\n        }\n      else if (Fop == OP_NOTI)   /* If caseless */\n        {\n        if (ch > 127)\n          ch = UCD_OTHERCASE(ch);\n        else\n          ch = (mb->fcc)[ch];\n        if (ch == fc) RRETURN(MATCH_NOMATCH);\n        }\n      }\n\n    else\n#endif  /* SUPPORT_UNICODE */\n\n    /* Neither UTF nor UCP is set */\n\n      {\n      uint32_t ch = Fecode[1];\n      fc = UCHAR21INC(Feptr);\n      if (ch == fc || (Fop == OP_NOTI && TABLE_GET(ch, mb->fcc, ch) == fc))\n        RRETURN(MATCH_NOMATCH);\n      Fecode += 2;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single character repeatedly. */\n\n#define Loclength    F->temp_size\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lcharptr     F->temp_sptr[1]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n#define Lc           F->temp_32[2]\n#define Loc          F->temp_32[3]\n\n    case OP_EXACT:\n    case OP_EXACTI:\n    Lmin = Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_POSUPTO:\n    case OP_POSUPTOI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_UPTO:\n    case OP_UPTOI:\n    reptype = REPTYPE_MAX;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_MINUPTO:\n    case OP_MINUPTOI:\n    reptype = REPTYPE_MIN;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_POSSTAR:\n    case OP_POSSTARI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATCHAR;\n\n    case OP_POSPLUS:\n    case OP_POSPLUSI:\n    reptype = REPTYPE_POS;\n    Lmin = 1;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATCHAR;\n\n    case OP_POSQUERY:\n    case OP_POSQUERYI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = 1;\n    Fecode++;\n    goto REPEATCHAR;\n\n    case OP_STAR:\n    case OP_STARI:\n    case OP_MINSTAR:\n    case OP_MINSTARI:\n    case OP_PLUS:\n    case OP_PLUSI:\n    case OP_MINPLUS:\n    case OP_MINPLUSI:\n    case OP_QUERY:\n    case OP_QUERYI:\n    case OP_MINQUERY:\n    case OP_MINQUERYI:\n    fc = *Fecode++ - ((Fop < OP_STARI)? OP_STAR : OP_STARI);\n    Lmin = rep_min[fc];\n    Lmax = rep_max[fc];\n    reptype = rep_typ[fc];\n\n    /* Common code for all repeated single-character matches. We first check\n    for the minimum number of characters. If the minimum equals the maximum, we\n    are done. Otherwise, if minimizing, check the rest of the pattern for a\n    match; if there isn't one, advance up to the maximum, one character at a\n    time.\n\n    If maximizing, advance up to the maximum number of matching characters,\n    until Feptr is past the end of the maximum run. If possessive, we are\n    then done (no backing up). Otherwise, match at this position; anything\n    other than no match is immediately returned. For nomatch, back up one\n    character, unless we are matching \\R and the last thing matched was\n    \\r\\n, in which case, back up two code units until we reach the first\n    optional character position.\n\n    The various UTF/non-UTF and caseful/caseless cases are handled separately,\n    for speed. */\n\n    REPEATCHAR:\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      Flength = 1;\n      Lcharptr = Fecode;\n      GETCHARLEN(fc, Fecode, Flength);\n      Fecode += Flength;\n\n      /* Handle multi-code-unit character matching, caseful and caseless. */\n\n      if (Flength > 1)\n        {\n        uint32_t othercase;\n\n        if (Fop >= OP_STARI &&     /* Caseless */\n            (othercase = UCD_OTHERCASE(fc)) != fc)\n          Loclength = PRIV(ord2utf)(othercase, Foccu);\n        else Loclength = 0;\n\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr <= mb->end_subject - Flength &&\n            memcmp(Feptr, Lcharptr, CU2BYTES(Flength)) == 0) Feptr += Flength;\n          else if (Loclength > 0 &&\n                   Feptr <= mb->end_subject - Loclength &&\n                   memcmp(Feptr, Foccu, CU2BYTES(Loclength)) == 0)\n            Feptr += Loclength;\n          else\n            {\n            CHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          }\n\n        if (Lmin == Lmax) continue;\n\n        if (reptype == REPTYPE_MIN)\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM202);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr <= mb->end_subject - Flength &&\n              memcmp(Feptr, Lcharptr, CU2BYTES(Flength)) == 0) Feptr += Flength;\n            else if (Loclength > 0 &&\n                     Feptr <= mb->end_subject - Loclength &&\n                     memcmp(Feptr, Foccu, CU2BYTES(Loclength)) == 0)\n              Feptr += Loclength;\n            else\n              {\n              CHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            }\n          /* Control never gets here */\n          }\n\n        else  /* Maximize */\n          {\n          Lstart_eptr = Feptr;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr <= mb->end_subject - Flength &&\n                memcmp(Feptr, Lcharptr, CU2BYTES(Flength)) == 0)\n              Feptr += Flength;\n            else if (Loclength > 0 &&\n                     Feptr <= mb->end_subject - Loclength &&\n                     memcmp(Feptr, Foccu, CU2BYTES(Loclength)) == 0)\n              Feptr += Loclength;\n            else\n              {\n              CHECK_PARTIAL();\n              break;\n              }\n            }\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          if (reptype != REPTYPE_POS) for(;;)\n            {\n            if (Feptr <= Lstart_eptr) break;\n            RMATCH(Fecode, RM203);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            BACKCHAR(Feptr);\n            }\n          }\n        break;   /* End of repeated wide character handling */\n        }\n\n      /* Length of UTF character is 1. Put it into the preserved variable and\n      fall through to the non-UTF code. */\n\n      Lc = fc;\n      }\n    else\n#endif  /* SUPPORT_UNICODE */\n\n    /* When not in UTF mode, load a single-code-unit character. Then proceed as\n    above, using Unicode casing if either UTF or UCP is set. */\n\n    Lc = *Fecode++;\n\n    /* Caseless comparison */\n\n    if (Fop >= OP_STARI)\n      {\n#if PCRE2_CODE_UNIT_WIDTH == 8\n#ifdef SUPPORT_UNICODE\n      if (ucp && !utf && Lc > 127) Loc = UCD_OTHERCASE(Lc);\n      else\n#endif  /* SUPPORT_UNICODE */\n      /* Lc will be < 128 in UTF-8 mode. */\n      Loc = mb->fcc[Lc];\n#else /* 16-bit & 32-bit */\n#ifdef SUPPORT_UNICODE\n      if ((utf || ucp) && Lc > 127) Loc = UCD_OTHERCASE(Lc);\n      else\n#endif  /* SUPPORT_UNICODE */\n      Loc = TABLE_GET(Lc, mb->fcc, Lc);\n#endif  /* PCRE2_CODE_UNIT_WIDTH == 8 */\n\n      for (i = 1; i <= Lmin; i++)\n        {\n        uint32_t cc;                 /* Faster than PCRE2_UCHAR */\n        if (Feptr >= mb->end_subject)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        cc = UCHAR21TEST(Feptr);\n        if (Lc != cc && Loc != cc) RRETURN(MATCH_NOMATCH);\n        Feptr++;\n        }\n      if (Lmin == Lmax) continue;\n\n      if (reptype == REPTYPE_MIN)\n        {\n        for (;;)\n          {\n          uint32_t cc;               /* Faster than PCRE2_UCHAR */\n          RMATCH(Fecode, RM25);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21TEST(Feptr);\n          if (Lc != cc && Loc != cc) RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        /* Control never gets here */\n        }\n\n      else  /* Maximize */\n        {\n        Lstart_eptr = Feptr;\n        for (i = Lmin; i < Lmax; i++)\n          {\n          uint32_t cc;               /* Faster than PCRE2_UCHAR */\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n          cc = UCHAR21TEST(Feptr);\n          if (Lc != cc && Loc != cc) break;\n          Feptr++;\n          }\n        if (reptype != REPTYPE_POS) for (;;)\n          {\n          if (Feptr == Lstart_eptr) break;\n          RMATCH(Fecode, RM26);\n          Feptr--;\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          }\n        }\n      }\n\n    /* Caseful comparisons (includes all multi-byte characters) */\n\n    else\n      {\n      for (i = 1; i <= Lmin; i++)\n        {\n        if (Feptr >= mb->end_subject)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        if (Lc != UCHAR21INCTEST(Feptr)) RRETURN(MATCH_NOMATCH);\n        }\n\n      if (Lmin == Lmax) continue;\n\n      if (reptype == REPTYPE_MIN)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM27);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lc != UCHAR21INCTEST(Feptr)) RRETURN(MATCH_NOMATCH);\n          }\n        /* Control never gets here */\n        }\n      else  /* Maximize */\n        {\n        Lstart_eptr = Feptr;\n        for (i = Lmin; i < Lmax; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n\n          if (Lc != UCHAR21TEST(Feptr)) break;\n          Feptr++;\n          }\n\n        if (reptype != REPTYPE_POS) for (;;)\n          {\n          if (Feptr <= Lstart_eptr) break;\n          RMATCH(Fecode, RM28);\n          Feptr--;\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          }\n        }\n      }\n    break;\n\n#undef Loclength\n#undef Lstart_eptr\n#undef Lcharptr\n#undef Lmin\n#undef Lmax\n#undef Lc\n#undef Loc\n\n\n    /* ===================================================================== */\n    /* Match a negated single one-byte character repeatedly. This is almost a\n    repeat of the code for a repeated single character, but I haven't found a\n    nice way of commoning these up that doesn't require a test of the\n    positive/negative option for each character match. Maybe that wouldn't add\n    very much to the time taken, but character matching *is* what this is all\n    about... */\n\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n#define Lc           F->temp_32[2]\n#define Loc          F->temp_32[3]\n\n    case OP_NOTEXACT:\n    case OP_NOTEXACTI:\n    Lmin = Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTUPTO:\n    case OP_NOTUPTOI:\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    reptype = REPTYPE_MAX;\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTMINUPTO:\n    case OP_NOTMINUPTOI:\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    reptype = REPTYPE_MIN;\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSSTAR:\n    case OP_NOTPOSSTARI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSPLUS:\n    case OP_NOTPOSPLUSI:\n    reptype = REPTYPE_POS;\n    Lmin = 1;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSQUERY:\n    case OP_NOTPOSQUERYI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = 1;\n    Fecode++;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSUPTO:\n    case OP_NOTPOSUPTOI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTSTAR:\n    case OP_NOTSTARI:\n    case OP_NOTMINSTAR:\n    case OP_NOTMINSTARI:\n    case OP_NOTPLUS:\n    case OP_NOTPLUSI:\n    case OP_NOTMINPLUS:\n    case OP_NOTMINPLUSI:\n    case OP_NOTQUERY:\n    case OP_NOTQUERYI:\n    case OP_NOTMINQUERY:\n    case OP_NOTMINQUERYI:\n    fc = *Fecode++ - ((Fop >= OP_NOTSTARI)? OP_NOTSTARI: OP_NOTSTAR);\n    Lmin = rep_min[fc];\n    Lmax = rep_max[fc];\n    reptype = rep_typ[fc];\n\n    /* Common code for all repeated single-character non-matches. */\n\n    REPEATNOTCHAR:\n    GETCHARINCTEST(Lc, Fecode);\n\n    /* The code is duplicated for the caseless and caseful cases, for speed,\n    since matching characters is likely to be quite common. First, ensure the\n    minimum number of matches are present. If Lmin = Lmax, we are done.\n    Otherwise, if minimizing, keep trying the rest of the expression and\n    advancing one matching character if failing, up to the maximum.\n    Alternatively, if maximizing, find the maximum number of characters and\n    work backwards. */\n\n    if (Fop >= OP_NOTSTARI)     /* Caseless */\n      {\n#ifdef SUPPORT_UNICODE\n      if ((utf || ucp) && Lc > 127)\n        Loc = UCD_OTHERCASE(Lc);\n      else\n#endif /* SUPPORT_UNICODE */\n\n      Loc = TABLE_GET(Lc, mb->fcc, Lc);  /* Other case from table */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        uint32_t d;\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(d, Feptr);\n          if (Lc == d || Loc == d) RRETURN(MATCH_NOMATCH);\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n\n      /* Not UTF mode */\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lc == *Feptr || Loc == *Feptr) RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        }\n\n      if (Lmin == Lmax) continue;  /* Finished for exact count */\n\n      if (reptype == REPTYPE_MIN)\n        {\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (;;)\n            {\n            RMATCH(Fecode, RM204);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINC(d, Feptr);\n            if (Lc == d || Loc == d) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        else\n#endif  /*SUPPORT_UNICODE */\n\n        /* Not UTF mode */\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM29);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            if (Lc == *Feptr || Loc == *Feptr) RRETURN(MATCH_NOMATCH);\n            Feptr++;\n            }\n          }\n        /* Control never gets here */\n        }\n\n      /* Maximize case */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(d, Feptr, len);\n            if (Lc == d || Loc == d) break;\n            Feptr += len;\n            }\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          if (reptype != REPTYPE_POS) for(;;)\n            {\n            if (Feptr <= Lstart_eptr) break;\n            RMATCH(Fecode, RM205);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            BACKCHAR(Feptr);\n            }\n          }\n        else\n#endif  /* SUPPORT_UNICODE */\n\n        /* Not UTF mode */\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (Lc == *Feptr || Loc == *Feptr) break;\n            Feptr++;\n            }\n          if (reptype != REPTYPE_POS) for (;;)\n            {\n            if (Feptr == Lstart_eptr) break;\n            RMATCH(Fecode, RM30);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            }\n          }\n        }\n      }\n\n    /* Caseful comparisons */\n\n    else\n      {\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        uint32_t d;\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(d, Feptr);\n          if (Lc == d) RRETURN(MATCH_NOMATCH);\n          }\n        }\n      else\n#endif\n      /* Not UTF mode */\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lc == *Feptr++) RRETURN(MATCH_NOMATCH);\n          }\n        }\n\n      if (Lmin == Lmax) continue;\n\n      if (reptype == REPTYPE_MIN)\n        {\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (;;)\n            {\n            RMATCH(Fecode, RM206);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINC(d, Feptr);\n            if (Lc == d) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        else\n#endif\n        /* Not UTF mode */\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM31);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            if (Lc == *Feptr++) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        /* Control never gets here */\n        }\n\n      /* Maximize case */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(d, Feptr, len);\n            if (Lc == d) break;\n            Feptr += len;\n            }\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          if (reptype != REPTYPE_POS) for(;;)\n            {\n            if (Feptr <= Lstart_eptr) break;\n            RMATCH(Fecode, RM207);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            BACKCHAR(Feptr);\n            }\n          }\n        else\n#endif\n        /* Not UTF mode */\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (Lc == *Feptr) break;\n            Feptr++;\n            }\n          if (reptype != REPTYPE_POS) for (;;)\n            {\n            if (Feptr == Lstart_eptr) break;\n            RMATCH(Fecode, RM32);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            }\n          }\n        }\n      }\n    break;\n\n#undef Lstart_eptr\n#undef Lmin\n#undef Lmax\n#undef Lc\n#undef Loc\n\n\n    /* ===================================================================== */\n    /* Match a bit-mapped character class, possibly repeatedly. These opcodes\n    are used when all the characters in the class have values in the range\n    0-255, and either the matching is caseful, or the characters are in the\n    range 0-127 when UTF processing is enabled. The only difference between\n    OP_CLASS and OP_NCLASS occurs when a data character outside the range is\n    encountered. */\n\n#define Lmin               F->temp_32[0]\n#define Lmax               F->temp_32[1]\n#define Lstart_eptr        F->temp_sptr[0]\n#define Lbyte_map_address  F->temp_sptr[1]\n#define Lbyte_map          ((unsigned char *)Lbyte_map_address)\n\n    case OP_NCLASS:\n    case OP_CLASS:\n      {\n      Lbyte_map_address = Fecode + 1;           /* Save for matching */\n      Fecode += 1 + (32 / sizeof(PCRE2_UCHAR)); /* Advance past the item */\n\n      /* Look past the end of the item to see if there is repeat information\n      following. Then obey similar code to character type repeats. */\n\n      switch (*Fecode)\n        {\n        case OP_CRSTAR:\n        case OP_CRMINSTAR:\n        case OP_CRPLUS:\n        case OP_CRMINPLUS:\n        case OP_CRQUERY:\n        case OP_CRMINQUERY:\n        case OP_CRPOSSTAR:\n        case OP_CRPOSPLUS:\n        case OP_CRPOSQUERY:\n        fc = *Fecode++ - OP_CRSTAR;\n        Lmin = rep_min[fc];\n        Lmax = rep_max[fc];\n        reptype = rep_typ[fc];\n        break;\n\n        case OP_CRRANGE:\n        case OP_CRMINRANGE:\n        case OP_CRPOSRANGE:\n        Lmin = GET2(Fecode, 1);\n        Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n        if (Lmax == 0) Lmax = UINT32_MAX;       /* Max 0 => infinity */\n        reptype = rep_typ[*Fecode - OP_CRSTAR];\n        Fecode += 1 + 2 * IMM2_SIZE;\n        break;\n\n        default:               /* No repeat follows */\n        Lmin = Lmax = 1;\n        break;\n        }\n\n      /* First, ensure the minimum number of matches are present. */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          if (fc > 255)\n            {\n            if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n            }\n          else\n            if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n          }\n        }\n      else\n#endif\n      /* Not UTF mode */\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          fc = *Feptr++;\n#if PCRE2_CODE_UNIT_WIDTH != 8\n          if (fc > 255)\n            {\n            if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n            }\n          else\n#endif\n          if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n          }\n        }\n\n      /* If Lmax == Lmin we are done. Continue with main loop. */\n\n      if (Lmin == Lmax) continue;\n\n      /* If minimizing, keep testing the rest of the expression and advancing\n      the pointer while it matches the class. */\n\n      if (reptype == REPTYPE_MIN)\n        {\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM200);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINC(fc, Feptr);\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n              }\n            else\n              if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        else\n#endif\n        /* Not UTF mode */\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM23);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            fc = *Feptr++;\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n              }\n            else\n#endif\n            if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        /* Control never gets here */\n        }\n\n      /* If maximizing, find the longest possible run, then work backwards. */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) break;\n              }\n            else\n              if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) break;\n            Feptr += len;\n            }\n\n          if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          for (;;)\n            {\n            RMATCH(Fecode, RM201);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Feptr-- <= Lstart_eptr) break;  /* Tried at original position */\n            BACKCHAR(Feptr);\n            }\n          }\n        else\n#endif\n          /* Not UTF mode */\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            fc = *Feptr;\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) break;\n              }\n            else\n#endif\n            if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) break;\n            Feptr++;\n            }\n\n          if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n          while (Feptr >= Lstart_eptr)\n            {\n            RMATCH(Fecode, RM24);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            }\n          }\n\n        RRETURN(MATCH_NOMATCH);\n        }\n      }\n    /* Control never gets here */\n\n#undef Lbyte_map_address\n#undef Lbyte_map\n#undef Lstart_eptr\n#undef Lmin\n#undef Lmax\n\n\n    /* ===================================================================== */\n    /* Match an extended character class. In the 8-bit library, this opcode is\n    encountered only when UTF-8 mode mode is supported. In the 16-bit and\n    32-bit libraries, codepoints greater than 255 may be encountered even when\n    UTF is not supported. */\n\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lxclass_data F->temp_sptr[1]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n\n#ifdef SUPPORT_WIDE_CHARS\n    case OP_XCLASS:\n      {\n      Lxclass_data = Fecode + 1 + LINK_SIZE;  /* Save for matching */\n      Fecode += GET(Fecode, 1);               /* Advance past the item */\n\n      switch (*Fecode)\n        {\n        case OP_CRSTAR:\n        case OP_CRMINSTAR:\n        case OP_CRPLUS:\n        case OP_CRMINPLUS:\n        case OP_CRQUERY:\n        case OP_CRMINQUERY:\n        case OP_CRPOSSTAR:\n        case OP_CRPOSPLUS:\n        case OP_CRPOSQUERY:\n        fc = *Fecode++ - OP_CRSTAR;\n        Lmin = rep_min[fc];\n        Lmax = rep_max[fc];\n        reptype = rep_typ[fc];\n        break;\n\n        case OP_CRRANGE:\n        case OP_CRMINRANGE:\n        case OP_CRPOSRANGE:\n        Lmin = GET2(Fecode, 1);\n        Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n        if (Lmax == 0) Lmax = UINT32_MAX;  /* Max 0 => infinity */\n        reptype = rep_typ[*Fecode - OP_CRSTAR];\n        Fecode += 1 + 2 * IMM2_SIZE;\n        break;\n\n        default:               /* No repeat follows */\n        Lmin = Lmax = 1;\n        break;\n        }\n\n      /* First, ensure the minimum number of matches are present. */\n\n      for (i = 1; i <= Lmin; i++)\n        {\n        if (Feptr >= mb->end_subject)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        GETCHARINCTEST(fc, Feptr);\n        if (!PRIV(xclass)(fc, Lxclass_data, utf)) RRETURN(MATCH_NOMATCH);\n        }\n\n      /* If Lmax == Lmin we can just continue with the main loop. */\n\n      if (Lmin == Lmax) continue;\n\n      /* If minimizing, keep testing the rest of the expression and advancing\n      the pointer while it matches the class. */\n\n      if (reptype == REPTYPE_MIN)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM100);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINCTEST(fc, Feptr);\n          if (!PRIV(xclass)(fc, Lxclass_data, utf)) RRETURN(MATCH_NOMATCH);\n          }\n        /* Control never gets here */\n        }\n\n      /* If maximizing, find the longest possible run, then work backwards. */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n        for (i = Lmin; i < Lmax; i++)\n          {\n          int len = 1;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n#ifdef SUPPORT_UNICODE\n          GETCHARLENTEST(fc, Feptr, len);\n#else\n          fc = *Feptr;\n#endif\n          if (!PRIV(xclass)(fc, Lxclass_data, utf)) break;\n          Feptr += len;\n          }\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n        Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n        go too far. */\n\n        for(;;)\n          {\n          RMATCH(Fecode, RM101);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Feptr-- <= Lstart_eptr) break;  /* Tried at original position */\n#ifdef SUPPORT_UNICODE\n          if (utf) BACKCHAR(Feptr);\n#endif\n          }\n        RRETURN(MATCH_NOMATCH);\n        }\n\n      /* Control never gets here */\n      }\n#endif  /* SUPPORT_WIDE_CHARS: end of XCLASS */\n\n#undef Lstart_eptr\n#undef Lxclass_data\n#undef Lmin\n#undef Lmax\n\n\n    /* ===================================================================== */\n    /* Match various character types when PCRE2_UCP is not set. These opcodes\n    are not generated when PCRE2_UCP is set - instead appropriate property\n    tests are compiled. */\n\n    case OP_NOT_DIGIT:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (CHMAX_255(fc) && (mb->ctypes[fc] & ctype_digit) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_DIGIT:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (!CHMAX_255(fc) || (mb->ctypes[fc] & ctype_digit) == 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_NOT_WHITESPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (CHMAX_255(fc) && (mb->ctypes[fc] & ctype_space) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_WHITESPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (!CHMAX_255(fc) || (mb->ctypes[fc] & ctype_space) == 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_NOT_WORDCHAR:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (CHMAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_WORDCHAR:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (!CHMAX_255(fc) || (mb->ctypes[fc] & ctype_word) == 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_ANYNL:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      default: RRETURN(MATCH_NOMATCH);\n\n      case CHAR_CR:\n      if (Feptr >= mb->end_subject)\n        {\n        SCHECK_PARTIAL();\n        }\n      else if (UCHAR21TEST(Feptr) == CHAR_LF) Feptr++;\n      break;\n\n      case CHAR_LF:\n      break;\n\n      case CHAR_VT:\n      case CHAR_FF:\n      case CHAR_NEL:\n#ifndef EBCDIC\n      case 0x2028:\n      case 0x2029:\n#endif  /* Not EBCDIC */\n      if (mb->bsr_convention == PCRE2_BSR_ANYCRLF) RRETURN(MATCH_NOMATCH);\n      break;\n      }\n    Fecode++;\n    break;\n\n    case OP_NOT_HSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      HSPACE_CASES: RRETURN(MATCH_NOMATCH);  /* Byte and multibyte cases */\n      default: break;\n      }\n    Fecode++;\n    break;\n\n    case OP_HSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      HSPACE_CASES: break;  /* Byte and multibyte cases */\n      default: RRETURN(MATCH_NOMATCH);\n      }\n    Fecode++;\n    break;\n\n    case OP_NOT_VSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      VSPACE_CASES: RRETURN(MATCH_NOMATCH);\n      default: break;\n      }\n    Fecode++;\n    break;\n\n    case OP_VSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      VSPACE_CASES: break;\n      default: RRETURN(MATCH_NOMATCH);\n      }\n    Fecode++;\n    break;\n\n\n#ifdef SUPPORT_UNICODE\n\n    /* ===================================================================== */\n    /* Check the next character by Unicode property. We will get here only\n    if the support is in the binary; otherwise a compile-time error occurs. */\n\n    case OP_PROP:\n    case OP_NOTPROP:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n      {\n      const uint32_t *cp;\n      const ucd_record *prop = GET_UCD(fc);\n      BOOL notmatch = Fop == OP_NOTPROP;\n\n      switch(Fecode[1])\n        {\n        case PT_ANY:\n        if (notmatch) RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_LAMP:\n        if ((prop->chartype == ucp_Lu ||\n             prop->chartype == ucp_Ll ||\n             prop->chartype == ucp_Lt) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_GC:\n        if ((Fecode[2] == PRIV(ucp_gentype)[prop->chartype]) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_PC:\n        if ((Fecode[2] == prop->chartype) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_SC:\n        if ((Fecode[2] == prop->script) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_SCX:\n          {\n          BOOL ok = (Fecode[2] == prop->script ||\n                     MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Fecode[2]) != 0);\n          if (ok == notmatch) RRETURN(MATCH_NOMATCH);\n          }\n        break;\n\n        /* These are specials */\n\n        case PT_ALNUM:\n        if ((PRIV(ucp_gentype)[prop->chartype] == ucp_L ||\n             PRIV(ucp_gentype)[prop->chartype] == ucp_N) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n        which means that Perl space and POSIX space are now identical. PCRE\n        was changed at release 8.34. */\n\n        case PT_SPACE:    /* Perl space */\n        case PT_PXSPACE:  /* POSIX space */\n        switch(fc)\n          {\n          HSPACE_CASES:\n          VSPACE_CASES:\n          if (notmatch) RRETURN(MATCH_NOMATCH);\n          break;\n\n          default:\n          if ((PRIV(ucp_gentype)[prop->chartype] == ucp_Z) == notmatch)\n            RRETURN(MATCH_NOMATCH);\n          break;\n          }\n        break;\n\n        case PT_WORD:\n        if ((PRIV(ucp_gentype)[prop->chartype] == ucp_L ||\n             PRIV(ucp_gentype)[prop->chartype] == ucp_N ||\n             fc == CHAR_UNDERSCORE) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_CLIST:\n        cp = PRIV(ucd_caseless_sets) + Fecode[2];\n        for (;;)\n          {\n          if (fc < *cp)\n            { if (notmatch) break; else { RRETURN(MATCH_NOMATCH); } }\n          if (fc == *cp++)\n            { if (notmatch) { RRETURN(MATCH_NOMATCH); } else break; }\n          }\n        break;\n\n        case PT_UCNC:\n        if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n             fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n             fc >= 0xe000) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_BIDICL:\n        if ((UCD_BIDICLASS_PROP(prop) == Fecode[2]) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_BOOL:\n          {\n          BOOL ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n            UCD_BPROPS_PROP(prop), Fecode[2]) != 0;\n          if (ok == notmatch) RRETURN(MATCH_NOMATCH);\n          }\n        break;\n\n        /* This should never occur */\n\n        default:\n        return PCRE2_ERROR_INTERNAL;\n        }\n\n      Fecode += 3;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match an extended Unicode sequence. We will get here only if the support\n    is in the binary; otherwise a compile-time error occurs. */\n\n    case OP_EXTUNI:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    else\n      {\n      GETCHARINCTEST(fc, Feptr);\n      Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject, mb->end_subject, utf,\n        NULL);\n      }\n    CHECK_PARTIAL();\n    Fecode++;\n    break;\n\n#endif  /* SUPPORT_UNICODE */\n\n\n    /* ===================================================================== */\n    /* Match a single character type repeatedly. Note that the property type\n    does not need to be in a stack frame as it is not used within an RMATCH()\n    loop. */\n\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n#define Lctype       F->temp_32[2]\n#define Lpropvalue   F->temp_32[3]\n\n    case OP_TYPEEXACT:\n    Lmin = Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATTYPE;\n\n    case OP_TYPEUPTO:\n    case OP_TYPEMINUPTO:\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    reptype = (*Fecode == OP_TYPEMINUPTO)? REPTYPE_MIN : REPTYPE_MAX;\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSSTAR:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSPLUS:\n    reptype = REPTYPE_POS;\n    Lmin = 1;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSQUERY:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = 1;\n    Fecode++;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSUPTO:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATTYPE;\n\n    case OP_TYPESTAR:\n    case OP_TYPEMINSTAR:\n    case OP_TYPEPLUS:\n    case OP_TYPEMINPLUS:\n    case OP_TYPEQUERY:\n    case OP_TYPEMINQUERY:\n    fc = *Fecode++ - OP_TYPESTAR;\n    Lmin = rep_min[fc];\n    Lmax = rep_max[fc];\n    reptype = rep_typ[fc];\n\n    /* Common code for all repeated character type matches. */\n\n    REPEATTYPE:\n    Lctype = *Fecode++;      /* Code for the character type */\n\n#ifdef SUPPORT_UNICODE\n    if (Lctype == OP_PROP || Lctype == OP_NOTPROP)\n      {\n      proptype = *Fecode++;\n      Lpropvalue = *Fecode++;\n      }\n    else proptype = -1;\n#endif\n\n    /* First, ensure the minimum number of matches are present. Use inline\n    code for maximizing the speed, and do the type test once at the start\n    (i.e. keep it out of the loops). As there are no calls to RMATCH in the\n    loops, we can use an ordinary variable for \"notmatch\". The code for UTF\n    mode is separated out for tidiness, except for Unicode property tests. */\n\n    if (Lmin > 0)\n      {\n#ifdef SUPPORT_UNICODE\n      if (proptype >= 0)  /* Property tests in all modes */\n        {\n        BOOL notmatch = Lctype == OP_NOTPROP;\n        switch(proptype)\n          {\n          case PT_ANY:\n          if (notmatch) RRETURN(MATCH_NOMATCH);\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            }\n          break;\n\n          case PT_LAMP:\n          for (i = 1; i <= Lmin; i++)\n            {\n            int chartype;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            chartype = UCD_CHARTYPE(fc);\n            if ((chartype == ucp_Lu ||\n                 chartype == ucp_Ll ||\n                 chartype == ucp_Lt) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_GC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CATEGORY(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_PC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CHARTYPE(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_SC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_SCRIPT(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_SCX:\n          for (i = 1; i <= Lmin; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = (prop->script == Lpropvalue ||\n                  MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Lpropvalue) != 0);\n            if (ok == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_ALNUM:\n          for (i = 1; i <= Lmin; i++)\n            {\n            int category;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n          which means that Perl space and POSIX space are now identical. PCRE\n          was changed at release 8.34. */\n\n          case PT_SPACE:    /* Perl space */\n          case PT_PXSPACE:  /* POSIX space */\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            switch(fc)\n              {\n              HSPACE_CASES:\n              VSPACE_CASES:\n              if (notmatch) RRETURN(MATCH_NOMATCH);\n              break;\n\n              default:\n              if ((UCD_CATEGORY(fc) == ucp_Z) == notmatch)\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            }\n          break;\n\n          case PT_WORD:\n          for (i = 1; i <= Lmin; i++)\n            {\n            int category;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N ||\n                fc == CHAR_UNDERSCORE) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_CLIST:\n          for (i = 1; i <= Lmin; i++)\n            {\n            const uint32_t *cp;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            cp = PRIV(ucd_caseless_sets) + Lpropvalue;\n            for (;;)\n              {\n              if (fc < *cp)\n                {\n                if (notmatch) break;\n                RRETURN(MATCH_NOMATCH);\n                }\n              if (fc == *cp++)\n                {\n                if (notmatch) RRETURN(MATCH_NOMATCH);\n                break;\n                }\n              }\n            }\n          break;\n\n          case PT_UCNC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n                 fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n                 fc >= 0xe000) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_BIDICL:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_BIDICLASS(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_BOOL:\n          for (i = 1; i <= Lmin; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n              UCD_BPROPS_PROP(prop), Lpropvalue) != 0;\n            if (ok == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          /* This should not occur */\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n        }\n\n      /* Match extended Unicode sequences. We will get here only if the\n      support is in the binary; otherwise a compile-time error occurs. */\n\n      else if (Lctype == OP_EXTUNI)\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          else\n            {\n            GETCHARINCTEST(fc, Feptr);\n            Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject,\n              mb->end_subject, utf, NULL);\n            }\n          CHECK_PARTIAL();\n          }\n        }\n      else\n#endif     /* SUPPORT_UNICODE */\n\n/* Handle all other cases in UTF mode */\n\n#ifdef SUPPORT_UNICODE\n      if (utf) switch(Lctype)\n        {\n        case OP_ANY:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n          if (mb->partial != 0 &&\n              Feptr + 1 >= mb->end_subject &&\n              NLBLOCK->nltype == NLTYPE_FIXED &&\n              NLBLOCK->nllen == 2 &&\n              UCHAR21(Feptr) == NLBLOCK->nl[0])\n            {\n            mb->hitend = TRUE;\n            if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n            }\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_ALLANY:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_ANYBYTE:\n        if (Feptr > mb->end_subject - Lmin) RRETURN(MATCH_NOMATCH);\n        Feptr += Lmin;\n        break;\n\n        case OP_ANYNL:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n\n            case CHAR_CR:\n            if (Feptr < mb->end_subject && UCHAR21(Feptr) == CHAR_LF) Feptr++;\n            break;\n\n            case CHAR_LF:\n            break;\n\n            case CHAR_VT:\n            case CHAR_FF:\n            case CHAR_NEL:\n#ifndef EBCDIC\n            case 0x2028:\n            case 0x2029:\n#endif  /* Not EBCDIC */\n            if (mb->bsr_convention == PCRE2_BSR_ANYCRLF) RRETURN(MATCH_NOMATCH);\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            HSPACE_CASES: RRETURN(MATCH_NOMATCH);\n            default: break;\n            }\n          }\n        break;\n\n        case OP_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            HSPACE_CASES: break;\n            default: RRETURN(MATCH_NOMATCH);\n            }\n          }\n        break;\n\n        case OP_NOT_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            VSPACE_CASES: RRETURN(MATCH_NOMATCH);\n            default: break;\n            }\n          }\n        break;\n\n        case OP_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            VSPACE_CASES: break;\n            default: RRETURN(MATCH_NOMATCH);\n            }\n          }\n        break;\n\n        case OP_NOT_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          if (fc < 128 && (mb->ctypes[fc] & ctype_digit) != 0)\n            RRETURN(MATCH_NOMATCH);\n          }\n        break;\n\n        case OP_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc >= 128 || (mb->ctypes[cc] & ctype_digit) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          /* No need to skip more code units - we know it has only one. */\n          }\n        break;\n\n        case OP_NOT_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc < 128 && (mb->ctypes[cc] & ctype_space) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc >= 128 || (mb->ctypes[cc] & ctype_space) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          /* No need to skip more code units - we know it has only one. */\n          }\n        break;\n\n        case OP_NOT_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc < 128 && (mb->ctypes[cc] & ctype_word) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc >= 128 || (mb->ctypes[cc] & ctype_word) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          /* No need to skip more code units - we know it has only one. */\n          }\n        break;\n\n        default:\n        return PCRE2_ERROR_INTERNAL;\n        }  /* End switch(Lctype) */\n\n      else\n#endif     /* SUPPORT_UNICODE */\n\n      /* Code for the non-UTF case for minimum matching of operators other\n      than OP_PROP and OP_NOTPROP. */\n\n      switch(Lctype)\n        {\n        case OP_ANY:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n          if (mb->partial != 0 &&\n              Feptr + 1 >= mb->end_subject &&\n              NLBLOCK->nltype == NLTYPE_FIXED &&\n              NLBLOCK->nllen == 2 &&\n              *Feptr == NLBLOCK->nl[0])\n            {\n            mb->hitend = TRUE;\n            if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n            }\n          Feptr++;\n          }\n        break;\n\n        case OP_ALLANY:\n        if (Feptr > mb->end_subject - Lmin)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        Feptr += Lmin;\n        break;\n\n        /* This OP_ANYBYTE case will never be reached because \\C gets turned\n        into OP_ALLANY in non-UTF mode. Cut out the code so that coverage\n        reports don't complain about it's never being used. */\n\n/*        case OP_ANYBYTE:\n*        if (Feptr > mb->end_subject - Lmin)\n*          {\n*          SCHECK_PARTIAL();\n*          RRETURN(MATCH_NOMATCH);\n*          }\n*        Feptr += Lmin;\n*        break;\n*/\n        case OP_ANYNL:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n\n            case CHAR_CR:\n            if (Feptr < mb->end_subject && *Feptr == CHAR_LF) Feptr++;\n            break;\n\n            case CHAR_LF:\n            break;\n\n            case CHAR_VT:\n            case CHAR_FF:\n            case CHAR_NEL:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            case 0x2028:\n            case 0x2029:\n#endif\n            if (mb->bsr_convention == PCRE2_BSR_ANYCRLF) RRETURN(MATCH_NOMATCH);\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: break;\n            HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            HSPACE_MULTIBYTE_CASES:\n#endif\n            RRETURN(MATCH_NOMATCH);\n            }\n          }\n        break;\n\n        case OP_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n            HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            HSPACE_MULTIBYTE_CASES:\n#endif\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            VSPACE_MULTIBYTE_CASES:\n#endif\n            RRETURN(MATCH_NOMATCH);\n            default: break;\n            }\n          }\n        break;\n\n        case OP_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n            VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            VSPACE_MULTIBYTE_CASES:\n#endif\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_digit) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_digit) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_NOT_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_space) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_space) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_NOT_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_word) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_word) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        default:\n        return PCRE2_ERROR_INTERNAL;\n        }\n      }\n\n    /* If Lmin = Lmax we are done. Continue with the main loop. */\n\n    if (Lmin == Lmax) continue;\n\n    /* If minimizing, we have to test the rest of the pattern before each\n    subsequent match. This means we cannot use a local \"notmatch\" variable as\n    in the other cases. As all 4 temporary 32-bit values in the frame are\n    already in use, just test the type each time. */\n\n    if (reptype == REPTYPE_MIN)\n      {\n#ifdef SUPPORT_UNICODE\n      if (proptype >= 0)\n        {\n        switch(proptype)\n          {\n          case PT_ANY:\n          for (;;)\n            {\n            RMATCH(Fecode, RM208);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if (Lctype == OP_NOTPROP) RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_LAMP:\n          for (;;)\n            {\n            int chartype;\n            RMATCH(Fecode, RM209);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            chartype = UCD_CHARTYPE(fc);\n            if ((chartype == ucp_Lu ||\n                 chartype == ucp_Ll ||\n                 chartype == ucp_Lt) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_GC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM210);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CATEGORY(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_PC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM211);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CHARTYPE(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_SC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM212);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_SCRIPT(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_SCX:\n          for (;;)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            RMATCH(Fecode, RM225);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = (prop->script == Lpropvalue\n                  || MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Lpropvalue) != 0);\n            if (ok == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_ALNUM:\n          for (;;)\n            {\n            int category;\n            RMATCH(Fecode, RM213);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n          which means that Perl space and POSIX space are now identical. PCRE\n          was changed at release 8.34. */\n\n          case PT_SPACE:    /* Perl space */\n          case PT_PXSPACE:  /* POSIX space */\n          for (;;)\n            {\n            RMATCH(Fecode, RM214);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            switch(fc)\n              {\n              HSPACE_CASES:\n              VSPACE_CASES:\n              if (Lctype == OP_NOTPROP) RRETURN(MATCH_NOMATCH);\n              break;\n\n              default:\n              if ((UCD_CATEGORY(fc) == ucp_Z) == (Lctype == OP_NOTPROP))\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            }\n          /* Control never gets here */\n\n          case PT_WORD:\n          for (;;)\n            {\n            int category;\n            RMATCH(Fecode, RM215);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L ||\n                 category == ucp_N ||\n                 fc == CHAR_UNDERSCORE) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_CLIST:\n          for (;;)\n            {\n            const uint32_t *cp;\n            RMATCH(Fecode, RM216);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            cp = PRIV(ucd_caseless_sets) + Lpropvalue;\n            for (;;)\n              {\n              if (fc < *cp)\n                {\n                if (Lctype == OP_NOTPROP) break;\n                RRETURN(MATCH_NOMATCH);\n                }\n              if (fc == *cp++)\n                {\n                if (Lctype == OP_NOTPROP) RRETURN(MATCH_NOMATCH);\n                break;\n                }\n              }\n            }\n          /* Control never gets here */\n\n          case PT_UCNC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM217);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n                 fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n                 fc >= 0xe000) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_BIDICL:\n          for (;;)\n            {\n            RMATCH(Fecode, RM224);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_BIDICLASS(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_BOOL:\n          for (;;)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            RMATCH(Fecode, RM223);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n              UCD_BPROPS_PROP(prop), Lpropvalue) != 0;\n            if (ok == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          /* This should never occur */\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n        }\n\n      /* Match extended Unicode sequences. We will get here only if the\n      support is in the binary; otherwise a compile-time error occurs. */\n\n      else if (Lctype == OP_EXTUNI)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM218);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          else\n            {\n            GETCHARINCTEST(fc, Feptr);\n            Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject, mb->end_subject,\n              utf, NULL);\n            }\n          CHECK_PARTIAL();\n          }\n        }\n      else\n#endif     /* SUPPORT_UNICODE */\n\n      /* UTF mode for non-property testing character types. */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM219);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lctype == OP_ANY && IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n          GETCHARINC(fc, Feptr);\n          switch(Lctype)\n            {\n            case OP_ANY:               /* This is the non-NL case */\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                fc == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            break;\n\n            case OP_ALLANY:\n            case OP_ANYBYTE:\n            break;\n\n            case OP_ANYNL:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n\n              case CHAR_CR:\n              if (Feptr < mb->end_subject && UCHAR21(Feptr) == CHAR_LF) Feptr++;\n              break;\n\n              case CHAR_LF:\n              break;\n\n              case CHAR_VT:\n              case CHAR_FF:\n              case CHAR_NEL:\n#ifndef EBCDIC\n              case 0x2028:\n              case 0x2029:\n#endif  /* Not EBCDIC */\n              if (mb->bsr_convention == PCRE2_BSR_ANYCRLF)\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            break;\n\n            case OP_NOT_HSPACE:\n            switch(fc)\n              {\n              HSPACE_CASES: RRETURN(MATCH_NOMATCH);\n              default: break;\n              }\n            break;\n\n            case OP_HSPACE:\n            switch(fc)\n              {\n              HSPACE_CASES: break;\n              default: RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_NOT_VSPACE:\n            switch(fc)\n              {\n              VSPACE_CASES: RRETURN(MATCH_NOMATCH);\n              default: break;\n              }\n            break;\n\n            case OP_VSPACE:\n            switch(fc)\n              {\n              VSPACE_CASES: break;\n              default: RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_NOT_DIGIT:\n            if (fc < 256 && (mb->ctypes[fc] & ctype_digit) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_DIGIT:\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_digit) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WHITESPACE:\n            if (fc < 256 && (mb->ctypes[fc] & ctype_space) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WHITESPACE:\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_space) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WORDCHAR:\n            if (fc < 256 && (mb->ctypes[fc] & ctype_word) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WORDCHAR:\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_word) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            default:\n            return PCRE2_ERROR_INTERNAL;\n            }\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n\n      /* Not UTF mode */\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM33);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lctype == OP_ANY && IS_NEWLINE(Feptr))\n            RRETURN(MATCH_NOMATCH);\n          fc = *Feptr++;\n          switch(Lctype)\n            {\n            case OP_ANY:               /* This is the non-NL case */\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                fc == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            break;\n\n            case OP_ALLANY:\n            case OP_ANYBYTE:\n            break;\n\n            case OP_ANYNL:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n\n              case CHAR_CR:\n              if (Feptr < mb->end_subject && *Feptr == CHAR_LF) Feptr++;\n              break;\n\n              case CHAR_LF:\n              break;\n\n              case CHAR_VT:\n              case CHAR_FF:\n              case CHAR_NEL:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              case 0x2028:\n              case 0x2029:\n#endif\n              if (mb->bsr_convention == PCRE2_BSR_ANYCRLF)\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            break;\n\n            case OP_NOT_HSPACE:\n            switch(fc)\n              {\n              default: break;\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_HSPACE:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              break;\n              }\n            break;\n\n            case OP_NOT_VSPACE:\n            switch(fc)\n              {\n              default: break;\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_VSPACE:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              break;\n              }\n            break;\n\n            case OP_NOT_DIGIT:\n            if (MAX_255(fc) && (mb->ctypes[fc] & ctype_digit) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_DIGIT:\n            if (!MAX_255(fc) || (mb->ctypes[fc] & ctype_digit) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WHITESPACE:\n            if (MAX_255(fc) && (mb->ctypes[fc] & ctype_space) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WHITESPACE:\n            if (!MAX_255(fc) || (mb->ctypes[fc] & ctype_space) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WORDCHAR:\n            if (MAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WORDCHAR:\n            if (!MAX_255(fc) || (mb->ctypes[fc] & ctype_word) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            default:\n            return PCRE2_ERROR_INTERNAL;\n            }\n          }\n        }\n      /* Control never gets here */\n      }\n\n    /* If maximizing, it is worth using inline code for speed, doing the type\n    test once at the start (i.e. keep it out of the loops). Once again,\n    \"notmatch\" can be an ordinary local variable because the loops do not call\n    RMATCH. */\n\n    else\n      {\n      Lstart_eptr = Feptr;  /* Remember where we started */\n\n#ifdef SUPPORT_UNICODE\n      if (proptype >= 0)\n        {\n        BOOL notmatch = Lctype == OP_NOTPROP;\n        switch(proptype)\n          {\n          case PT_ANY:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if (notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_LAMP:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int chartype;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            chartype = UCD_CHARTYPE(fc);\n            if ((chartype == ucp_Lu ||\n                 chartype == ucp_Ll ||\n                 chartype == ucp_Lt) == notmatch)\n              break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_GC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_CATEGORY(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_PC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_CHARTYPE(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_SC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_SCRIPT(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_SCX:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            prop = GET_UCD(fc);\n            ok = (prop->script == Lpropvalue ||\n                  MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Lpropvalue) != 0);\n            if (ok == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_ALNUM:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int category;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N) == notmatch)\n              break;\n            Feptr+= len;\n            }\n          break;\n\n          /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n          which means that Perl space and POSIX space are now identical. PCRE\n          was changed at release 8.34. */\n\n          case PT_SPACE:    /* Perl space */\n          case PT_PXSPACE:  /* POSIX space */\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            switch(fc)\n              {\n              HSPACE_CASES:\n              VSPACE_CASES:\n              if (notmatch) goto ENDLOOP99;  /* Break the loop */\n              break;\n\n              default:\n              if ((UCD_CATEGORY(fc) == ucp_Z) == notmatch)\n                goto ENDLOOP99;   /* Break the loop */\n              break;\n              }\n            Feptr+= len;\n            }\n          ENDLOOP99:\n          break;\n\n          case PT_WORD:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int category;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N ||\n                 fc == CHAR_UNDERSCORE) == notmatch)\n              break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_CLIST:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            const uint32_t *cp;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            cp = PRIV(ucd_caseless_sets) + Lpropvalue;\n            for (;;)\n              {\n              if (fc < *cp)\n                { if (notmatch) break; else goto GOT_MAX; }\n              if (fc == *cp++)\n                { if (notmatch) goto GOT_MAX; else break; }\n              }\n            Feptr += len;\n            }\n          GOT_MAX:\n          break;\n\n          case PT_UCNC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n                 fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n                 fc >= 0xe000) == notmatch)\n              break;\n            Feptr += len;\n            }\n          break;\n\n          case PT_BIDICL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_BIDICLASS(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_BOOL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            prop = GET_UCD(fc);\n            ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n              UCD_BPROPS_PROP(prop), Lpropvalue) != 0;\n            if (ok == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n\n        /* Feptr is now past the end of the maximum run */\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n        Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n        go too far. */\n\n        for(;;)\n          {\n          if (Feptr <= Lstart_eptr) break;\n          RMATCH(Fecode, RM222);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr--;\n          if (utf) BACKCHAR(Feptr);\n          }\n        }\n\n      /* Match extended Unicode grapheme clusters. We will get here only if the\n      support is in the binary; otherwise a compile-time error occurs. */\n\n      else if (Lctype == OP_EXTUNI)\n        {\n        for (i = Lmin; i < Lmax; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n          else\n            {\n            GETCHARINCTEST(fc, Feptr);\n            Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject, mb->end_subject,\n              utf, NULL);\n            }\n          CHECK_PARTIAL();\n          }\n\n        /* Feptr is now past the end of the maximum run */\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* We use <= Lstart_eptr rather than == Lstart_eptr to detect the start\n        of the run while backtracking because the use of \\C in UTF mode can\n        cause BACKCHAR to move back past Lstart_eptr. This is just palliative;\n        the use of \\C in UTF mode is fraught with danger. */\n\n        for(;;)\n          {\n          int lgb, rgb;\n          PCRE2_SPTR fptr;\n\n          if (Feptr <= Lstart_eptr) break;   /* At start of char run */\n          RMATCH(Fecode, RM220);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n\n          /* Backtracking over an extended grapheme cluster involves inspecting\n          the previous two characters (if present) to see if a break is\n          permitted between them. */\n\n          Feptr--;\n          if (!utf) fc = *Feptr; else\n            {\n            BACKCHAR(Feptr);\n            GETCHAR(fc, Feptr);\n            }\n          rgb = UCD_GRAPHBREAK(fc);\n\n          for (;;)\n            {\n            if (Feptr <= Lstart_eptr) break;   /* At start of char run */\n            fptr = Feptr - 1;\n            if (!utf) fc = *fptr; else\n              {\n              BACKCHAR(fptr);\n              GETCHAR(fc, fptr);\n              }\n            lgb = UCD_GRAPHBREAK(fc);\n            if ((PRIV(ucp_gbtable)[lgb] & (1u << rgb)) == 0) break;\n            Feptr = fptr;\n            rgb = lgb;\n            }\n          }\n        }\n\n      else\n#endif   /* SUPPORT_UNICODE */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        switch(Lctype)\n          {\n          case OP_ANY:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (IS_NEWLINE(Feptr)) break;\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr + 1 >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                UCHAR21(Feptr) == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            Feptr++;\n            ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n            }\n          break;\n\n          case OP_ALLANY:\n          if (Lmax < UINT32_MAX)\n            {\n            for (i = Lmin; i < Lmax; i++)\n              {\n              if (Feptr >= mb->end_subject)\n                {\n                SCHECK_PARTIAL();\n                break;\n                }\n              Feptr++;\n              ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n              }\n            }\n          else\n            {\n            Feptr = mb->end_subject;   /* Unlimited UTF-8 repeat */\n            SCHECK_PARTIAL();\n            }\n          break;\n\n          /* The \"byte\" (i.e. \"code unit\") case is the same as non-UTF */\n\n          case OP_ANYBYTE:\n          fc = Lmax - Lmin;\n          if (fc > (uint32_t)(mb->end_subject - Feptr))\n            {\n            Feptr = mb->end_subject;\n            SCHECK_PARTIAL();\n            }\n          else Feptr += fc;\n          break;\n\n          case OP_ANYNL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc == CHAR_CR)\n              {\n              if (++Feptr >= mb->end_subject) break;\n              if (UCHAR21(Feptr) == CHAR_LF) Feptr++;\n              }\n            else\n              {\n              if (fc != CHAR_LF &&\n                  (mb->bsr_convention == PCRE2_BSR_ANYCRLF ||\n                   (fc != CHAR_VT && fc != CHAR_FF && fc != CHAR_NEL\n#ifndef EBCDIC\n                    && fc != 0x2028 && fc != 0x2029\n#endif  /* Not EBCDIC */\n                    )))\n                break;\n              Feptr += len;\n              }\n            }\n          break;\n\n          case OP_NOT_HSPACE:\n          case OP_HSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL gotspace;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            switch(fc)\n              {\n              HSPACE_CASES: gotspace = TRUE; break;\n              default: gotspace = FALSE; break;\n              }\n            if (gotspace == (Lctype == OP_NOT_HSPACE)) break;\n            Feptr += len;\n            }\n          break;\n\n          case OP_NOT_VSPACE:\n          case OP_VSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL gotspace;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            switch(fc)\n              {\n              VSPACE_CASES: gotspace = TRUE; break;\n              default: gotspace = FALSE; break;\n              }\n            if (gotspace == (Lctype == OP_NOT_VSPACE)) break;\n            Feptr += len;\n            }\n          break;\n\n          case OP_NOT_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc < 256 && (mb->ctypes[fc] & ctype_digit) != 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc >= 256 ||(mb->ctypes[fc] & ctype_digit) == 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_NOT_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc < 256 && (mb->ctypes[fc] & ctype_space) != 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc >= 256 ||(mb->ctypes[fc] & ctype_space) == 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_NOT_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc < 256 && (mb->ctypes[fc] & ctype_word) != 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_word) == 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n        Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't go\n        too far. */\n\n        for(;;)\n          {\n          if (Feptr <= Lstart_eptr) break;\n          RMATCH(Fecode, RM221);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr--;\n          BACKCHAR(Feptr);\n          if (Lctype == OP_ANYNL && Feptr > Lstart_eptr &&\n              UCHAR21(Feptr) == CHAR_NL && UCHAR21(Feptr - 1) == CHAR_CR)\n            Feptr--;\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n\n      /* Not UTF mode */\n        {\n        switch(Lctype)\n          {\n          case OP_ANY:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (IS_NEWLINE(Feptr)) break;\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr + 1 >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                *Feptr == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            Feptr++;\n            }\n          break;\n\n          case OP_ALLANY:\n          case OP_ANYBYTE:\n          fc = Lmax - Lmin;\n          if (fc > (uint32_t)(mb->end_subject - Feptr))\n            {\n            Feptr = mb->end_subject;\n            SCHECK_PARTIAL();\n            }\n          else Feptr += fc;\n          break;\n\n          case OP_ANYNL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            fc = *Feptr;\n            if (fc == CHAR_CR)\n              {\n              if (++Feptr >= mb->end_subject) break;\n              if (*Feptr == CHAR_LF) Feptr++;\n              }\n            else\n              {\n              if (fc != CHAR_LF && (mb->bsr_convention == PCRE2_BSR_ANYCRLF ||\n                 (fc != CHAR_VT && fc != CHAR_FF && fc != CHAR_NEL\n#if PCRE2_CODE_UNIT_WIDTH != 8\n                 && fc != 0x2028 && fc != 0x2029\n#endif\n                 ))) break;\n              Feptr++;\n              }\n            }\n          break;\n\n          case OP_NOT_HSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: Feptr++; break;\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              goto ENDLOOP00;\n              }\n            }\n          ENDLOOP00:\n          break;\n\n          case OP_HSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: goto ENDLOOP01;\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              Feptr++; break;\n              }\n            }\n          ENDLOOP01:\n          break;\n\n          case OP_NOT_VSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: Feptr++; break;\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              goto ENDLOOP02;\n              }\n            }\n          ENDLOOP02:\n          break;\n\n          case OP_VSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: goto ENDLOOP03;\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              Feptr++; break;\n              }\n            }\n          ENDLOOP03:\n          break;\n\n          case OP_NOT_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_digit) != 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_digit) == 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_NOT_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_space) != 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_space) == 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_NOT_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_word) != 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_word) == 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        for (;;)\n          {\n          if (Feptr == Lstart_eptr) break;\n          RMATCH(Fecode, RM34);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr--;\n          if (Lctype == OP_ANYNL && Feptr > Lstart_eptr && *Feptr == CHAR_LF &&\n              Feptr[-1] == CHAR_CR) Feptr--;\n          }\n        }\n      }\n    break;  /* End of repeat character type processing */\n\n#undef Lstart_eptr\n#undef Lmin\n#undef Lmax\n#undef Lctype\n#undef Lpropvalue\n\n\n    /* ===================================================================== */\n    /* Match a back reference, possibly repeatedly. Look past the end of the\n    item to see if there is repeat information following. The OP_REF and\n    OP_REFI opcodes are used for a reference to a numbered group or to a\n    non-duplicated named group. For a duplicated named group, OP_DNREF and\n    OP_DNREFI are used. In this case we must scan the list of groups to which\n    the name refers, and use the first one that is set. */\n\n#define Lmin      F->temp_32[0]\n#define Lmax      F->temp_32[1]\n#define Lcaseless F->temp_32[2]\n#define Lstart    F->temp_sptr[0]\n#define Loffset   F->temp_size\n\n    case OP_DNREF:\n    case OP_DNREFI:\n    Lcaseless = (Fop == OP_DNREFI);\n      {\n      int count = GET2(Fecode, 1+IMM2_SIZE);\n      PCRE2_SPTR slot = mb->name_table + GET2(Fecode, 1) * mb->name_entry_size;\n      Fecode += 1 + 2*IMM2_SIZE;\n\n      while (count-- > 0)\n        {\n        Loffset = (GET2(slot, 0) << 1) - 2;\n        if (Loffset < Foffset_top && Fovector[Loffset] != PCRE2_UNSET) break;\n        slot += mb->name_entry_size;\n        }\n      }\n    goto REF_REPEAT;\n\n    case OP_REF:\n    case OP_REFI:\n    Lcaseless = (Fop == OP_REFI);\n    Loffset = (GET2(Fecode, 1) << 1) - 2;\n    Fecode += 1 + IMM2_SIZE;\n\n    /* Set up for repetition, or handle the non-repeated case. The maximum and\n    minimum must be in the heap frame, but as they are short-term values, we\n    use temporary fields. */\n\n    REF_REPEAT:\n    switch (*Fecode)\n      {\n      case OP_CRSTAR:\n      case OP_CRMINSTAR:\n      case OP_CRPLUS:\n      case OP_CRMINPLUS:\n      case OP_CRQUERY:\n      case OP_CRMINQUERY:\n      fc = *Fecode++ - OP_CRSTAR;\n      Lmin = rep_min[fc];\n      Lmax = rep_max[fc];\n      reptype = rep_typ[fc];\n      break;\n\n      case OP_CRRANGE:\n      case OP_CRMINRANGE:\n      Lmin = GET2(Fecode, 1);\n      Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n      reptype = rep_typ[*Fecode - OP_CRSTAR];\n      if (Lmax == 0) Lmax = UINT32_MAX;  /* Max 0 => infinity */\n      Fecode += 1 + 2 * IMM2_SIZE;\n      break;\n\n      default:                  /* No repeat follows */\n        {\n        rrc = match_ref(Loffset, Lcaseless, F, mb, &length);\n        if (rrc != 0)\n          {\n          if (rrc > 0) Feptr = mb->end_subject;   /* Partial match */\n          CHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        }\n      Feptr += length;\n      continue;              /* With the main loop */\n      }\n\n    /* Handle repeated back references. If a set group has length zero, just\n    continue with the main loop, because it matches however many times. For an\n    unset reference, if the minimum is zero, we can also just continue. We can\n    also continue if PCRE2_MATCH_UNSET_BACKREF is set, because this makes unset\n    group behave as a zero-length group. For any other unset cases, carrying\n    on will result in NOMATCH. */\n\n    if (Loffset < Foffset_top && Fovector[Loffset] != PCRE2_UNSET)\n      {\n      if (Fovector[Loffset] == Fovector[Loffset + 1]) continue;\n      }\n    else  /* Group is not set */\n      {\n      if (Lmin == 0 || (mb->poptions & PCRE2_MATCH_UNSET_BACKREF) != 0)\n        continue;\n      }\n\n    /* First, ensure the minimum number of matches are present. */\n\n    for (i = 1; i <= Lmin; i++)\n      {\n      PCRE2_SIZE slength;\n      rrc = match_ref(Loffset, Lcaseless, F, mb, &slength);\n      if (rrc != 0)\n        {\n        if (rrc > 0) Feptr = mb->end_subject;   /* Partial match */\n        CHECK_PARTIAL();\n        RRETURN(MATCH_NOMATCH);\n        }\n      Feptr += slength;\n      }\n\n    /* If min = max, we are done. They are not both allowed to be zero. */\n\n    if (Lmin == Lmax) continue;\n\n    /* If minimizing, keep trying and advancing the pointer. */\n\n    if (reptype == REPTYPE_MIN)\n      {\n      for (;;)\n        {\n        PCRE2_SIZE slength;\n        RMATCH(Fecode, RM20);\n        if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n        if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n        rrc = match_ref(Loffset, Lcaseless, F, mb, &slength);\n        if (rrc != 0)\n          {\n          if (rrc > 0) Feptr = mb->end_subject;   /* Partial match */\n          CHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        Feptr += slength;\n        }\n      /* Control never gets here */\n      }\n\n    /* If maximizing, find the longest string and work backwards, as long as\n    the matched lengths for each iteration are the same. */\n\n    else\n      {\n      BOOL samelengths = TRUE;\n      Lstart = Feptr;     /* Starting position */\n      Flength = Fovector[Loffset+1] - Fovector[Loffset];\n\n      for (i = Lmin; i < Lmax; i++)\n        {\n        PCRE2_SIZE slength;\n        rrc = match_ref(Loffset, Lcaseless, F, mb, &slength);\n        if (rrc != 0)\n          {\n          /* Can't use CHECK_PARTIAL because we don't want to update Feptr in\n          the soft partial matching case. */\n\n          if (rrc > 0 && mb->partial != 0 &&\n              mb->end_subject > mb->start_used_ptr)\n            {\n            mb->hitend = TRUE;\n            if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n            }\n          break;\n          }\n\n        if (slength != Flength) samelengths = FALSE;\n        Feptr += slength;\n        }\n\n      /* If the length matched for each repetition is the same as the length of\n      the captured group, we can easily work backwards. This is the normal\n      case. However, in caseless UTF-8 mode there are pairs of case-equivalent\n      characters whose lengths (in terms of code units) differ. However, this\n      is very rare, so we handle it by re-matching fewer and fewer times. */\n\n      if (samelengths)\n        {\n        while (Feptr >= Lstart)\n          {\n          RMATCH(Fecode, RM21);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr -= Flength;\n          }\n        }\n\n      /* The rare case of non-matching lengths. Re-scan the repetition for each\n      iteration. We know that match_ref() will succeed every time. */\n\n      else\n        {\n        Lmax = i;\n        for (;;)\n          {\n          RMATCH(Fecode, RM22);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Feptr == Lstart) break; /* Failed after minimal repetition */\n          Feptr = Lstart;\n          Lmax--;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            PCRE2_SIZE slength;\n            (void)match_ref(Loffset, Lcaseless, F, mb, &slength);\n            Feptr += slength;\n            }\n          }\n        }\n\n      RRETURN(MATCH_NOMATCH);\n      }\n    /* Control never gets here */\n\n#undef Lcaseless\n#undef Lmin\n#undef Lmax\n#undef Lstart\n#undef Loffset\n\n\n\n/* ========================================================================= */\n/*           Opcodes for the start of various parenthesized items            */\n/* ========================================================================= */\n\n    /* In all cases, if the result of RMATCH() is MATCH_THEN, check whether the\n    (*THEN) is within the current branch by comparing the address of OP_THEN\n    that is passed back with the end of the branch. If (*THEN) is within the\n    current branch, and the branch is one of two or more alternatives (it\n    either starts or ends with OP_ALT), we have reached the limit of THEN's\n    action, so convert the return code to NOMATCH, which will cause normal\n    backtracking to happen from now on. Otherwise, THEN is passed back to an\n    outer alternative. This implements Perl's treatment of parenthesized\n    groups, where a group not containing | does not affect the current\n    alternative, that is, (X) is NOT the same as (X|(*F)). */\n\n\n    /* ===================================================================== */\n    /* BRAZERO, BRAMINZERO and SKIPZERO occur just before a non-possessive\n    bracket group, indicating that it may occur zero times. It may repeat\n    infinitely, or not at all - i.e. it could be ()* or ()? or even (){0} in\n    the pattern. Brackets with fixed upper repeat limits are compiled as a\n    number of copies, with the optional ones preceded by BRAZERO or BRAMINZERO.\n    Possessive groups with possible zero repeats are preceded by BRAPOSZERO. */\n\n#define Lnext_ecode F->temp_sptr[0]\n\n    case OP_BRAZERO:\n    Lnext_ecode = Fecode + 1;\n    RMATCH(Lnext_ecode, RM9);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    do Lnext_ecode += GET(Lnext_ecode, 1); while (*Lnext_ecode == OP_ALT);\n    Fecode = Lnext_ecode + 1 + LINK_SIZE;\n    break;\n\n    case OP_BRAMINZERO:\n    Lnext_ecode = Fecode + 1;\n    do Lnext_ecode += GET(Lnext_ecode, 1); while (*Lnext_ecode == OP_ALT);\n    RMATCH(Lnext_ecode + 1 + LINK_SIZE, RM10);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    Fecode++;\n    break;\n\n#undef Lnext_ecode\n\n    case OP_SKIPZERO:\n    Fecode++;\n    do Fecode += GET(Fecode,1); while (*Fecode == OP_ALT);\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n\n    /* ===================================================================== */\n    /* Handle possessive brackets with an unlimited repeat. The end of these\n    brackets will always be OP_KETRPOS, which returns MATCH_KETRPOS without\n    going further in the pattern. */\n\n#define Lframe_type    F->temp_32[0]\n#define Lmatched_once  F->temp_32[1]\n#define Lzero_allowed  F->temp_32[2]\n#define Lstart_eptr    F->temp_sptr[0]\n#define Lstart_group   F->temp_sptr[1]\n\n    case OP_BRAPOSZERO:\n    Lzero_allowed = TRUE;                /* Zero repeat is allowed */\n    Fecode += 1;\n    if (*Fecode == OP_CBRAPOS || *Fecode == OP_SCBRAPOS)\n      goto POSSESSIVE_CAPTURE;\n    goto POSSESSIVE_NON_CAPTURE;\n\n    case OP_BRAPOS:\n    case OP_SBRAPOS:\n    Lzero_allowed = FALSE;               /* Zero repeat not allowed */\n\n    POSSESSIVE_NON_CAPTURE:\n    Lframe_type = GF_NOCAPTURE;          /* Remembered frame type */\n    goto POSSESSIVE_GROUP;\n\n    case OP_CBRAPOS:\n    case OP_SCBRAPOS:\n    Lzero_allowed = FALSE;               /* Zero repeat not allowed */\n\n    POSSESSIVE_CAPTURE:\n    number = GET2(Fecode, 1+LINK_SIZE);\n    Lframe_type = GF_CAPTURE | number;   /* Remembered frame type */\n\n    POSSESSIVE_GROUP:\n    Lmatched_once = FALSE;               /* Never matched */\n    Lstart_group = Fecode;               /* Start of this group */\n\n    for (;;)\n      {\n      Lstart_eptr = Feptr;               /* Position at group start */\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM8);\n      if (rrc == MATCH_KETRPOS)\n        {\n        Lmatched_once = TRUE;            /* Matched at least once */\n        if (Feptr == Lstart_eptr)        /* Empty match; skip to end */\n          {\n          do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n          break;\n          }\n\n        Fecode = Lstart_group;\n        continue;\n        }\n\n      /* See comment above about handling THEN. */\n\n      if (rrc == MATCH_THEN)\n        {\n        PCRE2_SPTR next_ecode = Fecode + GET(Fecode,1);\n        if (mb->verb_ecode_ptr < next_ecode &&\n            (*Fecode == OP_ALT || *next_ecode == OP_ALT))\n          rrc = MATCH_NOMATCH;\n        }\n\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Fecode += GET(Fecode, 1);\n      if (*Fecode != OP_ALT) break;\n      }\n\n    /* Success if matched something or zero repeat allowed */\n\n    if (Lmatched_once || Lzero_allowed)\n      {\n      Fecode += 1 + LINK_SIZE;\n      break;\n      }\n\n    RRETURN(MATCH_NOMATCH);\n\n#undef Lmatched_once\n#undef Lzero_allowed\n#undef Lframe_type\n#undef Lstart_eptr\n#undef Lstart_group\n\n\n    /* ===================================================================== */\n    /* Handle non-capturing brackets that cannot match an empty string. When we\n    get to the final alternative within the brackets, as long as there are no\n    THEN's in the pattern, we can optimize by not recording a new backtracking\n    point. (Ideally we should test for a THEN within this group, but we don't\n    have that information.) Don't do this if we are at the very top level,\n    however, because that would make handling assertions and once-only brackets\n    messier when there is nothing to go back to. */\n\n#define Lframe_type F->temp_32[0]     /* Set for all that use GROUPLOOP */\n#define Lnext_branch F->temp_sptr[0]  /* Used only in OP_BRA handling */\n\n    case OP_BRA:\n    if (mb->hasthen || Frdepth == 0)\n      {\n      Lframe_type = 0;\n      goto GROUPLOOP;\n      }\n\n    for (;;)\n      {\n      Lnext_branch = Fecode + GET(Fecode, 1);\n      if (*Lnext_branch != OP_ALT) break;\n\n      /* This is never the final branch. We do not need to test for MATCH_THEN\n      here because this code is not used when there is a THEN in the pattern. */\n\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM1);\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Fecode = Lnext_branch;\n      }\n\n    /* Hit the start of the final branch. Continue at this level. */\n\n    Fecode += PRIV(OP_lengths)[*Fecode];\n    break;\n\n#undef Lnext_branch\n\n\n    /* ===================================================================== */\n    /* Handle a capturing bracket, other than those that are possessive with an\n    unlimited repeat. */\n\n    case OP_CBRA:\n    case OP_SCBRA:\n    Lframe_type = GF_CAPTURE | GET2(Fecode, 1+LINK_SIZE);\n    goto GROUPLOOP;\n\n\n    /* ===================================================================== */\n    /* Atomic groups and non-capturing brackets that can match an empty string\n    must record a backtracking point and also set up a chained frame. */\n\n    case OP_ONCE:\n    case OP_SCRIPT_RUN:\n    case OP_SBRA:\n    Lframe_type = GF_NOCAPTURE | Fop;\n\n    GROUPLOOP:\n    for (;;)\n      {\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM2);\n      if (rrc == MATCH_THEN)\n        {\n        PCRE2_SPTR next_ecode = Fecode + GET(Fecode,1);\n        if (mb->verb_ecode_ptr < next_ecode &&\n            (*Fecode == OP_ALT || *next_ecode == OP_ALT))\n          rrc = MATCH_NOMATCH;\n        }\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Fecode += GET(Fecode, 1);\n      if (*Fecode != OP_ALT) RRETURN(MATCH_NOMATCH);\n      }\n    /* Control never reaches here. */\n\n#undef Lframe_type\n\n\n    /* ===================================================================== */\n    /* Recursion either matches the current regex, or some subexpression. The\n    offset data is the offset to the starting bracket from the start of the\n    whole pattern. (This is so that it works from duplicated subpatterns.) */\n\n#define Lframe_type F->temp_32[0]\n#define Lstart_branch F->temp_sptr[0]\n\n    case OP_RECURSE:\n    bracode = mb->start_code + GET(Fecode, 1);\n    number = (bracode == mb->start_code)? 0 : GET2(bracode, 1 + LINK_SIZE);\n\n    /* If we are already in a recursion, check for repeating the same one\n    without advancing the subject pointer. This should catch convoluted mutual\n    recursions. (Some simple cases are caught at compile time.) */\n\n    if (Fcurrent_recurse != RECURSE_UNSET)\n      {\n      offset = Flast_group_offset;\n      while (offset != PCRE2_UNSET)\n        {\n        N = (heapframe *)((char *)match_data->heapframes + offset);\n        P = (heapframe *)((char *)N - frame_size);\n        if (N->group_frame_type == (GF_RECURSE | number))\n          {\n          if (Feptr == P->eptr) return PCRE2_ERROR_RECURSELOOP;\n          break;\n          }\n        offset = P->last_group_offset;\n        }\n      }\n\n    /* Now run the recursion, branch by branch. */\n\n    Lstart_branch = bracode;\n    Lframe_type = GF_RECURSE | number;\n\n    for (;;)\n      {\n      PCRE2_SPTR next_ecode;\n\n      group_frame_type = Lframe_type;\n      RMATCH(Lstart_branch + PRIV(OP_lengths)[*Lstart_branch], RM11);\n      next_ecode = Lstart_branch + GET(Lstart_branch,1);\n\n      /* Handle backtracking verbs, which are defined in a range that can\n      easily be tested for. PCRE does not allow THEN, SKIP, PRUNE or COMMIT to\n      escape beyond a recursion; they cause a NOMATCH for the entire recursion.\n\n      When one of these verbs triggers, the current recursion group number is\n      recorded. If it matches the recursion we are processing, the verb\n      happened within the recursion and we must deal with it. Otherwise it must\n      have happened after the recursion completed, and so has to be passed\n      back. See comment above about handling THEN. */\n\n      if (rrc >= MATCH_BACKTRACK_MIN && rrc <= MATCH_BACKTRACK_MAX &&\n          mb->verb_current_recurse == (Lframe_type ^ GF_RECURSE))\n        {\n        if (rrc == MATCH_THEN && mb->verb_ecode_ptr < next_ecode &&\n            (*Lstart_branch == OP_ALT || *next_ecode == OP_ALT))\n          rrc = MATCH_NOMATCH;\n        else RRETURN(MATCH_NOMATCH);\n        }\n\n      /* Note that carrying on after (*ACCEPT) in a recursion is handled in the\n      OP_ACCEPT code. Nothing needs to be done here. */\n\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Lstart_branch = next_ecode;\n      if (*Lstart_branch != OP_ALT) RRETURN(MATCH_NOMATCH);\n      }\n    /* Control never reaches here. */\n\n#undef Lframe_type\n#undef Lstart_branch\n\n\n    /* ===================================================================== */\n    /* Positive assertions are like other groups except that PCRE doesn't allow\n    the effect of (*THEN) to escape beyond an assertion; it is therefore\n    treated as NOMATCH. (*ACCEPT) is treated as successful assertion, with its\n    captures and mark retained. Any other return is an error. */\n\n#define Lframe_type  F->temp_32[0]\n\n    case OP_ASSERT:\n    case OP_ASSERTBACK:\n    case OP_ASSERT_NA:\n    case OP_ASSERTBACK_NA:\n    Lframe_type = GF_NOCAPTURE | Fop;\n    for (;;)\n      {\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM3);\n      if (rrc == MATCH_ACCEPT)\n        {\n        memcpy(Fovector,\n              (char *)assert_accept_frame + offsetof(heapframe, ovector),\n              assert_accept_frame->offset_top * sizeof(PCRE2_SIZE));\n        Foffset_top = assert_accept_frame->offset_top;\n        Fmark = assert_accept_frame->mark;\n        break;\n        }\n      if (rrc != MATCH_NOMATCH && rrc != MATCH_THEN) RRETURN(rrc);\n      Fecode += GET(Fecode, 1);\n      if (*Fecode != OP_ALT) RRETURN(MATCH_NOMATCH);\n      }\n\n    do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n#undef Lframe_type\n\n\n    /* ===================================================================== */\n    /* Handle negative assertions. Loop for each non-matching branch as for\n    positive assertions. */\n\n#define Lframe_type  F->temp_32[0]\n\n    case OP_ASSERT_NOT:\n    case OP_ASSERTBACK_NOT:\n    Lframe_type  = GF_NOCAPTURE | Fop;\n\n    for (;;)\n      {\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM4);\n      switch(rrc)\n        {\n        case MATCH_ACCEPT:   /* Assertion matched, therefore it fails. */\n        case MATCH_MATCH:\n        RRETURN (MATCH_NOMATCH);\n\n        case MATCH_NOMATCH:  /* Branch failed, try next if present. */\n        case MATCH_THEN:\n        Fecode += GET(Fecode, 1);\n        if (*Fecode != OP_ALT) goto ASSERT_NOT_FAILED;\n        break;\n\n        case MATCH_COMMIT:   /* Assertion forced to fail, therefore continue. */\n        case MATCH_SKIP:\n        case MATCH_PRUNE:\n        do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n        goto ASSERT_NOT_FAILED;\n\n        default:             /* Pass back any other return */\n        RRETURN(rrc);\n        }\n      }\n\n    /* None of the branches have matched or there was a backtrack to (*COMMIT),\n    (*SKIP), (*PRUNE), or (*THEN) in the last branch. This is success for a\n    negative assertion, so carry on. */\n\n    ASSERT_NOT_FAILED:\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n#undef Lframe_type\n\n\n    /* ===================================================================== */\n    /* The callout item calls an external function, if one is provided, passing\n    details of the match so far. This is mainly for debugging, though the\n    function is able to force a failure. */\n\n    case OP_CALLOUT:\n    case OP_CALLOUT_STR:\n    rrc = do_callout(F, mb, &length);\n    if (rrc > 0) RRETURN(MATCH_NOMATCH);\n    if (rrc < 0) RRETURN(rrc);\n    Fecode += length;\n    break;\n\n\n    /* ===================================================================== */\n    /* Conditional group: compilation checked that there are no more than two\n    branches. If the condition is false, skipping the first branch takes us\n    past the end of the item if there is only one branch, but that's exactly\n    what we want. */\n\n    case OP_COND:\n    case OP_SCOND:\n\n    /* The variable Flength will be added to Fecode when the condition is\n    false, to get to the second branch. Setting it to the offset to the ALT or\n    KET, then incrementing Fecode achieves this effect. However, if the second\n    branch is non-existent, we must point to the KET so that the end of the\n    group is correctly processed. We now have Fecode pointing to the condition\n    or callout. */\n\n    Flength = GET(Fecode, 1);    /* Offset to the second branch */\n    if (Fecode[Flength] != OP_ALT) Flength -= 1 + LINK_SIZE;\n    Fecode += 1 + LINK_SIZE;     /* From this opcode */\n\n    /* Because of the way auto-callout works during compile, a callout item is\n    inserted between OP_COND and an assertion condition. Such a callout can\n    also be inserted manually. */\n\n    if (*Fecode == OP_CALLOUT || *Fecode == OP_CALLOUT_STR)\n      {\n      rrc = do_callout(F, mb, &length);\n      if (rrc > 0) RRETURN(MATCH_NOMATCH);\n      if (rrc < 0) RRETURN(rrc);\n\n      /* Advance Fecode past the callout, so it now points to the condition. We\n      must adjust Flength so that the value of Fecode+Flength is unchanged. */\n\n      Fecode += length;\n      Flength -= length;\n      }\n\n    /* Test the various possible conditions */\n\n    condition = FALSE;\n    switch(*Fecode)\n      {\n      case OP_RREF:                  /* Group recursion test */\n      if (Fcurrent_recurse != RECURSE_UNSET)\n        {\n        number = GET2(Fecode, 1);\n        condition = (number == RREF_ANY || number == Fcurrent_recurse);\n        }\n      break;\n\n      case OP_DNRREF:       /* Duplicate named group recursion test */\n      if (Fcurrent_recurse != RECURSE_UNSET)\n        {\n        int count = GET2(Fecode, 1 + IMM2_SIZE);\n        PCRE2_SPTR slot = mb->name_table + GET2(Fecode, 1) * mb->name_entry_size;\n        while (count-- > 0)\n          {\n          number = GET2(slot, 0);\n          condition = number == Fcurrent_recurse;\n          if (condition) break;\n          slot += mb->name_entry_size;\n          }\n        }\n      break;\n\n      case OP_CREF:                         /* Numbered group used test */\n      offset = (GET2(Fecode, 1) << 1) - 2;  /* Doubled ref number */\n      condition = offset < Foffset_top && Fovector[offset] != PCRE2_UNSET;\n      break;\n\n      case OP_DNCREF:      /* Duplicate named group used test */\n        {\n        int count = GET2(Fecode, 1 + IMM2_SIZE);\n        PCRE2_SPTR slot = mb->name_table + GET2(Fecode, 1) * mb->name_entry_size;\n        while (count-- > 0)\n          {\n          offset = (GET2(slot, 0) << 1) - 2;\n          condition = offset < Foffset_top && Fovector[offset] != PCRE2_UNSET;\n          if (condition) break;\n          slot += mb->name_entry_size;\n          }\n        }\n      break;\n\n      case OP_FALSE:\n      case OP_FAIL:   /* The assertion (?!) becomes OP_FAIL */\n      break;\n\n      case OP_TRUE:\n      condition = TRUE;\n      break;\n\n      /* The condition is an assertion. Run code similar to the assertion code\n      above. */\n\n#define Lpositive      F->temp_32[0]\n#define Lstart_branch  F->temp_sptr[0]\n\n      default:\n      Lpositive = (*Fecode == OP_ASSERT || *Fecode == OP_ASSERTBACK);\n      Lstart_branch = Fecode;\n\n      for (;;)\n        {\n        group_frame_type = GF_CONDASSERT | *Fecode;\n        RMATCH(Lstart_branch + PRIV(OP_lengths)[*Lstart_branch], RM5);\n\n        switch(rrc)\n          {\n          case MATCH_ACCEPT:  /* Save captures */\n          memcpy(Fovector,\n                (char *)assert_accept_frame + offsetof(heapframe, ovector),\n                assert_accept_frame->offset_top * sizeof(PCRE2_SIZE));\n          Foffset_top = assert_accept_frame->offset_top;\n\n          /* Fall through */\n          /* In the case of a match, the captures have already been put into\n          the current frame. */\n\n          case MATCH_MATCH:\n          condition = Lpositive;   /* TRUE for positive assertion */\n          break;\n\n          /* PCRE doesn't allow the effect of (*THEN) to escape beyond an\n          assertion; it is therefore always treated as NOMATCH. */\n\n          case MATCH_NOMATCH:\n          case MATCH_THEN:\n          Lstart_branch += GET(Lstart_branch, 1);\n          if (*Lstart_branch == OP_ALT) continue;  /* Try next branch */\n          condition = !Lpositive;  /* TRUE for negative assertion */\n          break;\n\n          /* These force no match without checking other branches. */\n\n          case MATCH_COMMIT:\n          case MATCH_SKIP:\n          case MATCH_PRUNE:\n          condition = !Lpositive;\n          break;\n\n          default:\n          RRETURN(rrc);\n          }\n        break;  /* Out of the branch loop */\n        }\n\n      /* If the condition is true, find the end of the assertion so that\n      advancing past it gets us to the start of the first branch. */\n\n      if (condition)\n        {\n        do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n        }\n      break;  /* End of assertion condition */\n      }\n\n#undef Lpositive\n#undef Lstart_branch\n\n    /* Choose branch according to the condition. */\n\n    Fecode += condition? PRIV(OP_lengths)[*Fecode] : Flength;\n\n    /* If the opcode is OP_SCOND it means we are at a repeated conditional\n    group that might match an empty string. We must therefore descend a level\n    so that the start is remembered for checking. For OP_COND we can just\n    continue at this level. */\n\n    if (Fop == OP_SCOND)\n      {\n      group_frame_type  = GF_NOCAPTURE | Fop;\n      RMATCH(Fecode, RM35);\n      RRETURN(rrc);\n      }\n    break;\n\n\n\n/* ========================================================================= */\n/*                  End of start of parenthesis opcodes                      */\n/* ========================================================================= */\n\n\n    /* ===================================================================== */\n    /* Move the subject pointer back by one fixed amount. This occurs at the\n    start of each branch that has a fixed length in a lookbehind assertion. If\n    we are too close to the start to move back, fail. When working with UTF-8\n    we move back a number of characters, not bytes. */\n\n    case OP_REVERSE:\n    number = GET(Fecode, 1);\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      while (number-- > 0)\n        {\n        if (Feptr <= mb->check_subject) RRETURN(MATCH_NOMATCH);\n        Feptr--;\n        BACKCHAR(Feptr);\n        }\n      }\n    else\n#endif\n\n    /* No UTF support, or not in UTF mode: count is code unit count */\n\n      {\n      if ((ptrdiff_t)number > Feptr - mb->start_subject) RRETURN(MATCH_NOMATCH);\n      Feptr -= number;\n      }\n\n    /* Save the earliest consulted character, then skip to next opcode */\n\n    if (Feptr < mb->start_used_ptr) mb->start_used_ptr = Feptr;\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n\n    /* ===================================================================== */\n    /* Move the subject pointer back by a variable amount. This occurs at the\n    start of each branch of a lookbehind assertion when the branch has a\n    variable, but limited, length. A loop is needed to try matching the branch\n    after moving back different numbers of characters. If we are too close to\n    the start to move back even the minimum amount, fail. When working with\n    UTF-8 we move back a number of characters, not bytes. */\n\n#define Lmin F->temp_32[0]\n#define Lmax F->temp_32[1]\n#define Leptr F->temp_sptr[0]\n\n    case OP_VREVERSE:\n    Lmin = GET2(Fecode, 1);\n    Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n    Leptr = Feptr;\n\n    /* Move back by the maximum branch length and then work forwards. This\n    ensures that items such as \\d{3,5} get the maximum length, which is\n    relevant for captures, and makes for Perl compatibility. */\n\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      { \n      for (i = 0; i < Lmax; i++)\n        {\n        if (Feptr == mb->start_subject)\n          {\n          if (i < Lmin) RRETURN(MATCH_NOMATCH);\n          Lmax = i;\n          break;\n          }\n        Feptr--;\n        if (utf) { BACKCHAR(Feptr); }\n        }\n      }   \n    else\n#endif\n\n    /* No UTF support or not in UTF mode */\n\n      {\n      ptrdiff_t available = Feptr - mb->start_subject;\n      if (Lmin > available) RRETURN(MATCH_NOMATCH);\n      if (Lmax > available) Lmax = available;\n      Feptr -= Lmax;\n      }\n\n    /* Now try matching, moving forward one character on failure, until we\n    reach the mimimum back length. */\n\n    for (;;)\n      {\n      RMATCH(Fecode + 1 + 2 * IMM2_SIZE, RM37);\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      if (Lmax-- <= Lmin) RRETURN(MATCH_NOMATCH);\n      Feptr++;\n#ifdef SUPPORT_UNICODE\n      if (utf) { FORWARDCHAR(Feptr); }\n#endif\n      }\n    /* Control never reaches here */\n\n#undef Lmin\n#undef Lmax\n#undef Leptr\n\n    /* ===================================================================== */\n    /* An alternation is the end of a branch; scan along to find the end of the\n    bracketed group. */\n\n    case OP_ALT:\n    branch_end = Fecode;\n    do Fecode += GET(Fecode,1); while (*Fecode == OP_ALT);\n    break;\n\n\n    /* ===================================================================== */\n    /* The end of a parenthesized group. For all but OP_BRA and OP_COND, the\n    starting frame was added to the chained frames in order to remember the\n    starting subject position for the group. */\n\n    case OP_KET:\n    case OP_KETRMIN:\n    case OP_KETRMAX:\n    case OP_KETRPOS:\n\n    bracode = Fecode - GET(Fecode, 1);\n\n    if (branch_end == NULL) branch_end = Fecode;\n    branch_start = bracode;\n    while (branch_start + GET(branch_start, 1) != branch_end)\n      branch_start += GET(branch_start, 1);\n    branch_end = NULL;\n\n\n    /* Point N to the frame at the start of the most recent group, and P to its\n    predecessor. Remember the subject pointer at the start of the group. */\n\n    if (*bracode != OP_BRA && *bracode != OP_COND)\n      {\n      N = (heapframe *)((char *)match_data->heapframes + Flast_group_offset);\n      P = (heapframe *)((char *)N - frame_size);\n      Flast_group_offset = P->last_group_offset;\n\n#ifdef DEBUG_SHOW_RMATCH\n      fprintf(stderr, \"++ KET for frame=%d type=%x prev char offset=%lu\\n\",\n        N->rdepth, N->group_frame_type,\n        (char *)P->eptr - (char *)mb->start_subject);\n#endif\n\n      /* If we are at the end of an assertion that is a condition, return a\n      match, discarding any intermediate backtracking points. Copy back the\n      mark setting and the captures into the frame before N so that they are\n      set on return. Doing this for all assertions, both positive and negative,\n      seems to match what Perl does. */\n\n      if (GF_IDMASK(N->group_frame_type) == GF_CONDASSERT)\n        {\n        memcpy((char *)P + offsetof(heapframe, ovector), Fovector,\n          Foffset_top * sizeof(PCRE2_SIZE));\n        P->offset_top = Foffset_top;\n        P->mark = Fmark;\n        Fback_frame = (char *)F - (char *)P;\n        RRETURN(MATCH_MATCH);\n        }\n      }\n    else P = NULL;   /* Indicates starting frame not recorded */\n\n    /* The group was not a conditional assertion. */\n\n    switch (*bracode)\n      {\n      case OP_BRA:    /* No need to do anything for these */\n      case OP_COND:\n      case OP_SCOND:\n      break;\n\n      /* Non-atomic positive assertions are like OP_BRA, except that the\n      subject pointer must be put back to where it was at the start of the\n      assertion. For a variable lookbehind, check its end point. */\n\n      case OP_ASSERTBACK_NA:\n      if (branch_start[1 + LINK_SIZE] == OP_VREVERSE && Feptr != P->eptr)\n        RRETURN(MATCH_NOMATCH);\n      /* Fall through */\n\n      case OP_ASSERT_NA:\n      if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n      Feptr = P->eptr;\n      break;\n\n      /* Atomic positive assertions are like OP_ONCE, except that in addition\n      the subject pointer must be put back to where it was at the start of the\n      assertion. For a variable lookbehind, check its end point. */\n\n      case OP_ASSERTBACK:\n      if (branch_start[1 + LINK_SIZE] == OP_VREVERSE && Feptr != P->eptr)\n        RRETURN(MATCH_NOMATCH);\n      /* Fall through */\n\n      case OP_ASSERT:\n      if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n      Feptr = P->eptr;\n      /* Fall through */\n\n      /* For an atomic group, discard internal backtracking points. We must\n      also ensure that any remaining branches within the top-level of the group\n      are not tried. Do this by adjusting the code pointer within the backtrack\n      frame so that it points to the final branch. */\n\n      case OP_ONCE:\n      Fback_frame = ((char *)F - (char *)P);\n      for (;;)\n        {\n        uint32_t y = GET(P->ecode,1);\n        if ((P->ecode)[y] != OP_ALT) break;\n        P->ecode += y;\n        }\n      break;\n\n      /* A matching negative assertion returns MATCH, which is turned into\n      NOMATCH at the assertion level. For a variable lookbehind, check its end\n      point. */\n\n      case OP_ASSERTBACK_NOT:\n      if (branch_start[1 + LINK_SIZE] == OP_VREVERSE && Feptr != P->eptr)\n        RRETURN(MATCH_NOMATCH);\n      /* Fall through */\n\n      case OP_ASSERT_NOT:\n      RRETURN(MATCH_MATCH);\n\n      /* At the end of a script run, apply the script-checking rules. This code\n      will never by exercised if Unicode support it not compiled, because in\n      that environment script runs cause an error at compile time. */\n\n      case OP_SCRIPT_RUN:\n      if (!PRIV(script_run)(P->eptr, Feptr, utf)) RRETURN(MATCH_NOMATCH);\n      break;\n\n      /* Whole-pattern recursion is coded as a recurse into group 0, so it\n      won't be picked up here. Instead, we catch it when the OP_END is reached.\n      Other recursion is handled here. */\n\n      case OP_CBRA:\n      case OP_CBRAPOS:\n      case OP_SCBRA:\n      case OP_SCBRAPOS:\n      number = GET2(bracode, 1+LINK_SIZE);\n\n      /* Handle a recursively called group. We reinstate the previous set of\n      captures and then carry on after the recursion call. */\n\n      if (Fcurrent_recurse == number)\n        {\n        P = (heapframe *)((char *)N - frame_size);\n        memcpy((char *)F + offsetof(heapframe, ovector), P->ovector,\n          P->offset_top * sizeof(PCRE2_SIZE));\n        Foffset_top = P->offset_top;\n        Fcapture_last = P->capture_last;\n        Fcurrent_recurse = P->current_recurse;\n        Fecode = P->ecode + 1 + LINK_SIZE;\n        continue;  /* With next opcode */\n        }\n\n      /* Deal with actual capturing. */\n\n      offset = (number << 1) - 2;\n      Fcapture_last = number;\n      Fovector[offset] = P->eptr - mb->start_subject;\n      Fovector[offset+1] = Feptr - mb->start_subject;\n      if (offset >= Foffset_top) Foffset_top = offset + 2;\n      break;\n      }  /* End actions relating to the starting opcode */\n\n    /* OP_KETRPOS is a possessive repeating ket. Remember the current position,\n    and return the MATCH_KETRPOS. This makes it possible to do the repeats one\n    at a time from the outer level. This must precede the empty string test -\n    in this case that test is done at the outer level. */\n\n    if (*Fecode == OP_KETRPOS)\n      {\n      memcpy((char *)P + offsetof(heapframe, eptr),\n             (char *)F + offsetof(heapframe, eptr),\n             frame_copy_size);\n      RRETURN(MATCH_KETRPOS);\n      }\n\n    /* Handle the different kinds of closing brackets. A non-repeating ket\n    needs no special action, just continuing at this level. This also happens\n    for the repeating kets if the group matched no characters, in order to\n    forcibly break infinite loops. Otherwise, the repeating kets try the rest\n    of the pattern or restart from the preceding bracket, in the appropriate\n    order. */\n\n    if (Fop != OP_KET && (P == NULL || Feptr != P->eptr))\n      {\n      if (Fop == OP_KETRMIN)\n        {\n        RMATCH(Fecode + 1 + LINK_SIZE, RM6);\n        if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n        Fecode -= GET(Fecode, 1);\n        break;   /* End of ket processing */\n        }\n\n      /* Repeat the maximum number of times (KETRMAX) */\n\n      RMATCH(bracode, RM7);\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      }\n\n    /* Carry on at this level for a non-repeating ket, or after matching an\n    empty string, or after repeating for a maximum number of times. */\n\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n\n    /* ===================================================================== */\n    /* Start and end of line assertions, not multiline mode. */\n\n    case OP_CIRC:   /* Start of line, unless PCRE2_NOTBOL is set. */\n    if (Feptr != mb->start_subject || (mb->moptions & PCRE2_NOTBOL) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_SOD:    /* Unconditional start of subject */\n    if (Feptr != mb->start_subject) RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    /* When PCRE2_NOTEOL is unset, assert before the subject end, or a\n    terminating newline unless PCRE2_DOLLAR_ENDONLY is set. */\n\n    case OP_DOLL:\n    if ((mb->moptions & PCRE2_NOTEOL) != 0) RRETURN(MATCH_NOMATCH);\n    if ((mb->poptions & PCRE2_DOLLAR_ENDONLY) == 0) goto ASSERT_NL_OR_EOS;\n\n    /* Fall through */\n    /* Unconditional end of subject assertion (\\z) */\n\n    case OP_EOD:\n    if (Feptr < mb->end_subject) RRETURN(MATCH_NOMATCH);\n    if (mb->partial != 0)\n      {\n      mb->hitend = TRUE;\n      if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n      }\n    Fecode++;\n    break;\n\n    /* End of subject or ending \\n assertion (\\Z) */\n\n    case OP_EODN:\n    ASSERT_NL_OR_EOS:\n    if (Feptr < mb->end_subject &&\n        (!IS_NEWLINE(Feptr) || Feptr != mb->end_subject - mb->nllen))\n      {\n      if (mb->partial != 0 &&\n          Feptr + 1 >= mb->end_subject &&\n          NLBLOCK->nltype == NLTYPE_FIXED &&\n          NLBLOCK->nllen == 2 &&\n          UCHAR21TEST(Feptr) == NLBLOCK->nl[0])\n        {\n        mb->hitend = TRUE;\n        if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n        }\n      RRETURN(MATCH_NOMATCH);\n      }\n\n    /* Either at end of string or \\n before end. */\n\n    if (mb->partial != 0)\n      {\n      mb->hitend = TRUE;\n      if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n      }\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Start and end of line assertions, multiline mode. */\n\n    /* Start of subject unless notbol, or after any newline except for one at\n    the very end, unless PCRE2_ALT_CIRCUMFLEX is set. */\n\n    case OP_CIRCM:\n    if ((mb->moptions & PCRE2_NOTBOL) != 0 && Feptr == mb->start_subject)\n      RRETURN(MATCH_NOMATCH);\n    if (Feptr != mb->start_subject &&\n        ((Feptr == mb->end_subject &&\n           (mb->poptions & PCRE2_ALT_CIRCUMFLEX) == 0) ||\n         !WAS_NEWLINE(Feptr)))\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    /* Assert before any newline, or before end of subject unless noteol is\n    set. */\n\n    case OP_DOLLM:\n    if (Feptr < mb->end_subject)\n      {\n      if (!IS_NEWLINE(Feptr))\n        {\n        if (mb->partial != 0 &&\n            Feptr + 1 >= mb->end_subject &&\n            NLBLOCK->nltype == NLTYPE_FIXED &&\n            NLBLOCK->nllen == 2 &&\n            UCHAR21TEST(Feptr) == NLBLOCK->nl[0])\n          {\n          mb->hitend = TRUE;\n          if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n          }\n        RRETURN(MATCH_NOMATCH);\n        }\n      }\n    else\n      {\n      if ((mb->moptions & PCRE2_NOTEOL) != 0) RRETURN(MATCH_NOMATCH);\n      SCHECK_PARTIAL();\n      }\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Start of match assertion */\n\n    case OP_SOM:\n    if (Feptr != mb->start_subject + mb->start_offset) RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Reset the start of match point */\n\n    case OP_SET_SOM:\n    Fstart_match = Feptr;\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Word boundary assertions. Find out if the previous and current\n    characters are \"word\" characters. It takes a bit more work in UTF mode.\n    Characters > 255 are assumed to be \"non-word\" characters when PCRE2_UCP is\n    not set. When it is set, use Unicode properties if available, even when not\n    in UTF mode. Remember the earliest and latest consulted characters. */\n\n    case OP_NOT_WORD_BOUNDARY:\n    case OP_WORD_BOUNDARY:\n    case OP_NOT_UCP_WORD_BOUNDARY:\n    case OP_UCP_WORD_BOUNDARY:\n    if (Feptr == mb->check_subject) prev_is_word = FALSE; else\n      {\n      PCRE2_SPTR lastptr = Feptr - 1;\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        BACKCHAR(lastptr);\n        GETCHAR(fc, lastptr);\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      fc = *lastptr;\n      if (lastptr < mb->start_used_ptr) mb->start_used_ptr = lastptr;\n#ifdef SUPPORT_UNICODE\n      if (Fop == OP_UCP_WORD_BOUNDARY || Fop == OP_NOT_UCP_WORD_BOUNDARY)\n        {\n        if (fc == '_') prev_is_word = TRUE; else\n          {\n          int cat = UCD_CATEGORY(fc);\n          prev_is_word = (cat == ucp_L || cat == ucp_N);\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      prev_is_word = CHMAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0;\n      }\n\n    /* Get status of next character */\n\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      cur_is_word = FALSE;\n      }\n    else\n      {\n      PCRE2_SPTR nextptr = Feptr + 1;\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        FORWARDCHARTEST(nextptr, mb->end_subject);\n        GETCHAR(fc, Feptr);\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      fc = *Feptr;\n      if (nextptr > mb->last_used_ptr) mb->last_used_ptr = nextptr;\n#ifdef SUPPORT_UNICODE\n      if (Fop == OP_UCP_WORD_BOUNDARY || Fop == OP_NOT_UCP_WORD_BOUNDARY)\n        {\n        if (fc == '_') cur_is_word = TRUE; else\n          {\n          int cat = UCD_CATEGORY(fc);\n          cur_is_word = (cat == ucp_L || cat == ucp_N);\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      cur_is_word = CHMAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0;\n      }\n\n    /* Now see if the situation is what we want */\n\n    if ((*Fecode++ == OP_WORD_BOUNDARY || Fop == OP_UCP_WORD_BOUNDARY)?\n         cur_is_word == prev_is_word : cur_is_word != prev_is_word)\n      RRETURN(MATCH_NOMATCH);\n    break;\n\n\n    /* ===================================================================== */\n    /* Backtracking (*VERB)s, with and without arguments. Note that if the\n    pattern is successfully matched, we do not come back from RMATCH. */\n\n    case OP_MARK:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM12);\n\n    /* A return of MATCH_SKIP_ARG means that matching failed at SKIP with an\n    argument, and we must check whether that argument matches this MARK's\n    argument. It is passed back in mb->verb_skip_ptr. If it does match, we\n    return MATCH_SKIP with mb->verb_skip_ptr now pointing to the subject\n    position that corresponds to this mark. Otherwise, pass back the return\n    code unaltered. */\n\n    if (rrc == MATCH_SKIP_ARG &&\n             PRIV(strcmp)(Fecode + 2, mb->verb_skip_ptr) == 0)\n      {\n      mb->verb_skip_ptr = Feptr;   /* Pass back current position */\n      RRETURN(MATCH_SKIP);\n      }\n    RRETURN(rrc);\n\n    case OP_FAIL:\n    RRETURN(MATCH_NOMATCH);\n\n    /* Record the current recursing group number in mb->verb_current_recurse\n    when a backtracking return such as MATCH_COMMIT is given. This enables the\n    recurse processing to catch verbs from within the recursion. */\n\n    case OP_COMMIT:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM13);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_COMMIT);\n\n    case OP_COMMIT_ARG:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM36);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_COMMIT);\n\n    case OP_PRUNE:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM14);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_PRUNE);\n\n    case OP_PRUNE_ARG:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM15);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_PRUNE);\n\n    case OP_SKIP:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM16);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_skip_ptr = Feptr;   /* Pass back current position */\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_SKIP);\n\n    /* Note that, for Perl compatibility, SKIP with an argument does NOT set\n    nomatch_mark. When a pattern match ends with a SKIP_ARG for which there was\n    not a matching mark, we have to re-run the match, ignoring the SKIP_ARG\n    that failed and any that precede it (either they also failed, or were not\n    triggered). To do this, we maintain a count of executed SKIP_ARGs. If a\n    SKIP_ARG gets to top level, the match is re-run with mb->ignore_skip_arg\n    set to the count of the one that failed. */\n\n    case OP_SKIP_ARG:\n    mb->skip_arg_count++;\n    if (mb->skip_arg_count <= mb->ignore_skip_arg)\n      {\n      Fecode += PRIV(OP_lengths)[*Fecode] + Fecode[1];\n      break;\n      }\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM17);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n\n    /* Pass back the current skip name and return the special MATCH_SKIP_ARG\n    return code. This will either be caught by a matching MARK, or get to the\n    top, where it causes a rematch with mb->ignore_skip_arg set to the value of\n    mb->skip_arg_count. */\n\n    mb->verb_skip_ptr = Fecode + 2;\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_SKIP_ARG);\n\n    /* For THEN (and THEN_ARG) we pass back the address of the opcode, so that\n    the branch in which it occurs can be determined. */\n\n    case OP_THEN:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM18);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_ecode_ptr = Fecode;\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_THEN);\n\n    case OP_THEN_ARG:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM19);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_ecode_ptr = Fecode;\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_THEN);\n\n\n    /* ===================================================================== */\n    /* There's been some horrible disaster. Arrival here can only mean there is\n    something seriously wrong in the code above or the OP_xxx definitions. */\n\n    default:\n    return PCRE2_ERROR_INTERNAL;\n    }\n\n  /* Do not insert any code in here without much thought; it is assumed\n  that \"continue\" in the code above comes out to here to repeat the main\n  loop. */\n\n  }  /* End of main loop */\n/* Control never reaches here */\n\n\n/* ========================================================================= */\n/* The RRETURN() macro jumps here. The number that is saved in Freturn_id\nindicates which label we actually want to return to. The value in Frdepth is\nthe index number of the frame in the vector. The return value has been placed\nin rrc. */\n\n#define LBL(val) case val: goto L_RM##val;\n\nRETURN_SWITCH:\nif (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\nif (Frdepth == 0) return rrc;                     /* Exit from the top level */\nF = (heapframe *)((char *)F - Fback_frame);       /* Backtrack */\nmb->cb->callout_flags |= PCRE2_CALLOUT_BACKTRACK; /* Note for callouts */\n\n#ifdef DEBUG_SHOW_RMATCH\nfprintf(stderr, \"++ RETURN %d to %d\\n\", rrc, Freturn_id);\n#endif\n\nswitch (Freturn_id)\n  {\n  LBL( 1) LBL( 2) LBL( 3) LBL( 4) LBL( 5) LBL( 6) LBL( 7) LBL( 8)\n  LBL( 9) LBL(10) LBL(11) LBL(12) LBL(13) LBL(14) LBL(15) LBL(16)\n  LBL(17) LBL(18) LBL(19) LBL(20) LBL(21) LBL(22) LBL(23) LBL(24)\n  LBL(25) LBL(26) LBL(27) LBL(28) LBL(29) LBL(30) LBL(31) LBL(32)\n  LBL(33) LBL(34) LBL(35) LBL(36) LBL(37)\n\n#ifdef SUPPORT_WIDE_CHARS\n  LBL(100) LBL(101)\n#endif\n\n#ifdef SUPPORT_UNICODE\n  LBL(200) LBL(201) LBL(202) LBL(203) LBL(204) LBL(205) LBL(206)\n  LBL(207) LBL(208) LBL(209) LBL(210) LBL(211) LBL(212) LBL(213)\n  LBL(214) LBL(215) LBL(216) LBL(217) LBL(218) LBL(219) LBL(220)\n  LBL(221) LBL(222) LBL(223) LBL(224) LBL(225)\n#endif\n\n  default:\n  return PCRE2_ERROR_INTERNAL;\n  }\n#undef LBL\n}",
                "afterPatchSourceCode": "static int\nmatch(PCRE2_SPTR start_eptr, PCRE2_SPTR start_ecode, uint16_t top_bracket,\n  PCRE2_SIZE frame_size, pcre2_match_data *match_data, match_block *mb)\n{\n/* Frame-handling variables */\n\nheapframe *F;           /* Current frame pointer */\nheapframe *N = NULL;    /* Temporary frame pointers */\nheapframe *P = NULL;\n\nheapframe *frames_top;  /* End of frames vector */\nheapframe *assert_accept_frame = NULL;  /* For passing back a frame with captures */\nPCRE2_SIZE heapframes_size;   /* Usable size of frames vector */\nPCRE2_SIZE frame_copy_size;   /* Amount to copy when creating a new frame */\n\n/* Local variables that do not need to be preserved over calls to RRMATCH(). */\n\nPCRE2_SPTR branch_end = NULL;\nPCRE2_SPTR branch_start;\nPCRE2_SPTR bracode;     /* Temp pointer to start of group */\nPCRE2_SIZE offset;      /* Used for group offsets */\nPCRE2_SIZE length;      /* Used for various length calculations */\n\nint rrc;                /* Return from functions & backtracking \"recursions\" */\n#ifdef SUPPORT_UNICODE\nint proptype;           /* Type of character property */\n#endif\n\nuint32_t i;             /* Used for local loops */\nuint32_t fc;            /* Character values */\nuint32_t number;        /* Used for group and other numbers */\nuint32_t reptype = 0;   /* Type of repetition (0 to avoid compiler warning) */\nuint32_t group_frame_type;  /* Specifies type for new group frames */\n\nBOOL condition;         /* Used in conditional groups */\nBOOL cur_is_word;       /* Used in \"word\" tests */\nBOOL prev_is_word;      /* Used in \"word\" tests */\n\n/* UTF and UCP flags */\n\n#ifdef SUPPORT_UNICODE\nBOOL utf = (mb->poptions & PCRE2_UTF) != 0;\nBOOL ucp = (mb->poptions & PCRE2_UCP) != 0;\n#else\nBOOL utf = FALSE;  /* Required for convenience even when no Unicode support */\n#endif\n\n/* This is the length of the last part of a backtracking frame that must be\ncopied when a new frame is created. */\n\nframe_copy_size = frame_size - offsetof(heapframe, eptr);\n\n/* Set up the first frame and the end of the frames vector. We set the local\nheapframes_size to the usuable amount of the vector, that is, a whole number of\nframes. */\n\nF = match_data->heapframes;\nheapframes_size = (match_data->heapframes_size / frame_size) * frame_size;\nframes_top = (heapframe *)((char *)F + heapframes_size);\n\nFrdepth = 0;                        /* \"Recursion\" depth */\nFcapture_last = 0;                  /* Number of most recent capture */\nFcurrent_recurse = RECURSE_UNSET;   /* Not pattern recursing. */\nFstart_match = Feptr = start_eptr;  /* Current data pointer and start match */\nFmark = NULL;                       /* Most recent mark */\nFoffset_top = 0;                    /* End of captures within the frame */\nFlast_group_offset = PCRE2_UNSET;   /* Saved frame of most recent group */\ngroup_frame_type = 0;               /* Not a start of group frame */\ngoto NEW_FRAME;                     /* Start processing with this frame */\n\n/* Come back here when we want to create a new frame for remembering a\nbacktracking point. */\n\nMATCH_RECURSE:\n\n/* Set up a new backtracking frame. If the vector is full, get a new one,\ndoubling the size, but constrained by the heap limit (which is in KiB). */\n\nN = (heapframe *)((char *)F + frame_size);\nif (N >= frames_top)\n  {\n  heapframe *new;\n  PCRE2_SIZE newsize;\n\n  if (match_data->heapframes_size >= PCRE2_SIZE_MAX / 2)\n    {\n    if (match_data->heapframes_size == PCRE2_SIZE_MAX - 1)\n      return PCRE2_ERROR_NOMEMORY;\n    newsize = PCRE2_SIZE_MAX - 1;\n    }\n  else\n    newsize = match_data->heapframes_size * 2;\n\n  if (newsize / 1024 >= mb->heap_limit)\n    {\n    PCRE2_SIZE old_size = match_data->heapframes_size / 1024;\n    if (mb->heap_limit <= old_size) return PCRE2_ERROR_HEAPLIMIT;\n    else\n      {\n      PCRE2_SIZE max_delta = 1024 * (mb->heap_limit - old_size);\n      int over_bytes = match_data->heapframes_size % 1024;\n      if (over_bytes) max_delta -= (1024 - over_bytes);\n      newsize = match_data->heapframes_size + max_delta;\n      }\n    }\n\n  new = match_data->memctl.malloc(newsize, match_data->memctl.memory_data);\n  if (new == NULL) return PCRE2_ERROR_NOMEMORY;\n  memcpy(new, match_data->heapframes, heapframes_size);\n\n  F = (heapframe *)((char *)new + ((char *)F - (char *)match_data->heapframes));\n  N = (heapframe *)((char *)F + frame_size);\n\n  match_data->memctl.free(match_data->heapframes, match_data->memctl.memory_data);\n  match_data->heapframes = new;\n  match_data->heapframes_size = newsize;\n\n  heapframes_size = (newsize / frame_size) * frame_size;\n  frames_top = (heapframe *)((char *)new + heapframes_size);\n  }\n\n#ifdef DEBUG_SHOW_RMATCH\nfprintf(stderr, \"++ RMATCH %2d frame=%d\", Freturn_id, Frdepth + 1);\nif (group_frame_type != 0)\n  {\n  fprintf(stderr, \" type=%x \", group_frame_type);\n  switch (GF_IDMASK(group_frame_type))\n    {\n    case GF_CAPTURE:\n    fprintf(stderr, \"capture=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    case GF_NOCAPTURE:\n    fprintf(stderr, \"nocapture op=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    case GF_CONDASSERT:\n    fprintf(stderr, \"condassert op=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    case GF_RECURSE:\n    fprintf(stderr, \"recurse=%d\", GF_DATAMASK(group_frame_type));\n    break;\n\n    default:\n    fprintf(stderr, \"*** unknown ***\");\n    break;\n    }\n  }\nfprintf(stderr, \"\\n\");\n#endif\n\n/* Copy those fields that must be copied into the new frame, increase the\n\"recursion\" depth (i.e. the new frame's index) and then make the new frame\ncurrent. */\n\nmemcpy((char *)N + offsetof(heapframe, eptr),\n       (char *)F + offsetof(heapframe, eptr),\n       frame_copy_size);\n\nN->rdepth = Frdepth + 1;\nF = N;\n\n/* Carry on processing with a new frame. */\n\nNEW_FRAME:\nFgroup_frame_type = group_frame_type;\nFecode = start_ecode;      /* Starting code pointer */\nFback_frame = frame_size;  /* Default is go back one frame */\n\n/* If this is a special type of group frame, remember its offset for quick\naccess at the end of the group. If this is a recursion, set a new current\nrecursion value. */\n\nif (group_frame_type != 0)\n  {\n  Flast_group_offset = (char *)F - (char *)match_data->heapframes;\n  if (GF_IDMASK(group_frame_type) == GF_RECURSE)\n    Fcurrent_recurse = GF_DATAMASK(group_frame_type);\n  group_frame_type = 0;\n  }\n\n\n/* ========================================================================= */\n/* This is the main processing loop. First check that we haven't recorded too\nmany backtracks (search tree is too large), or that we haven't exceeded the\nrecursive depth limit (used too many backtracking frames). If not, process the\nopcodes. */\n\nif (mb->match_call_count++ >= mb->match_limit) return PCRE2_ERROR_MATCHLIMIT;\nif (Frdepth >= mb->match_limit_depth) return PCRE2_ERROR_DEPTHLIMIT;\n\nfor (;;)\n  {\n#ifdef DEBUG_SHOW_OPS\nfprintf(stderr, \"++ op=%d\\n\", *Fecode);\n#endif\n\n  Fop = (uint8_t)(*Fecode);  /* Cast needed for 16-bit and 32-bit modes */\n  switch(Fop)\n    {\n    /* ===================================================================== */\n    /* Before OP_ACCEPT there may be any number of OP_CLOSE opcodes, to close\n    any currently open capturing brackets. Unlike reaching the end of a group,\n    where we know the starting frame is at the top of the chained frames, in\n    this case we have to search back for the relevant frame in case other types\n    of group that use chained frames have intervened. Multiple OP_CLOSEs always\n    come innermost first, which matches the chain order. We can ignore this in\n    a recursion, because captures are not passed out of recursions. */\n\n    case OP_CLOSE:\n    if (Fcurrent_recurse == RECURSE_UNSET)\n      {\n      number = GET2(Fecode, 1);\n      offset = Flast_group_offset;\n      for(;;)\n        {\n        if (offset == PCRE2_UNSET) return PCRE2_ERROR_INTERNAL;\n        N = (heapframe *)((char *)match_data->heapframes + offset);\n        P = (heapframe *)((char *)N - frame_size);\n        if (N->group_frame_type == (GF_CAPTURE | number)) break;\n        offset = P->last_group_offset;\n        }\n      offset = (number << 1) - 2;\n      Fcapture_last = number;\n      Fovector[offset] = P->eptr - mb->start_subject;\n      Fovector[offset+1] = Feptr - mb->start_subject;\n      if (offset >= Foffset_top) Foffset_top = offset + 2;\n      }\n    Fecode += PRIV(OP_lengths)[*Fecode];\n    break;\n\n\n    /* ===================================================================== */\n    /* Real or forced end of the pattern, assertion, or recursion. In an\n    assertion ACCEPT, update the last used pointer and remember the current\n    frame so that the captures and mark can be fished out of it. */\n\n    case OP_ASSERT_ACCEPT:\n    if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n    assert_accept_frame = F;\n    RRETURN(MATCH_ACCEPT);\n\n    /* If recursing, we have to find the most recent recursion. */\n\n    case OP_ACCEPT:\n    case OP_END:\n\n    /* Handle end of a recursion. */\n\n    if (Fcurrent_recurse != RECURSE_UNSET)\n      {\n      offset = Flast_group_offset;\n      for(;;)\n        {\n        if (offset == PCRE2_UNSET) return PCRE2_ERROR_INTERNAL;\n        N = (heapframe *)((char *)match_data->heapframes + offset);\n        P = (heapframe *)((char *)N - frame_size);\n        if (GF_IDMASK(N->group_frame_type) == GF_RECURSE) break;\n        offset = P->last_group_offset;\n        }\n\n      /* N is now the frame of the recursion; the previous frame is at the\n      OP_RECURSE position. Go back there, copying the current subject position\n      and mark, and the start_match position (\\K might have changed it), and\n      then move on past the OP_RECURSE. */\n\n      P->eptr = Feptr;\n      P->mark = Fmark;\n      P->start_match = Fstart_match;\n      F = P;\n      Fecode += 1 + LINK_SIZE;\n      continue;\n      }\n\n    /* Not a recursion. Fail for an empty string match if either PCRE2_NOTEMPTY\n    is set, or if PCRE2_NOTEMPTY_ATSTART is set and we have matched at the\n    start of the subject. In both cases, backtracking will then try other\n    alternatives, if any. */\n\n    if (Feptr == Fstart_match &&\n         ((mb->moptions & PCRE2_NOTEMPTY) != 0 ||\n           ((mb->moptions & PCRE2_NOTEMPTY_ATSTART) != 0 &&\n             Fstart_match == mb->start_subject + mb->start_offset)))\n      RRETURN(MATCH_NOMATCH);\n\n    /* Also fail if PCRE2_ENDANCHORED is set and the end of the match is not\n    the end of the subject. After (*ACCEPT) we fail the entire match (at this\n    position) but backtrack on reaching the end of the pattern. */\n\n    if (Feptr < mb->end_subject &&\n        ((mb->moptions | mb->poptions) & PCRE2_ENDANCHORED) != 0)\n      {\n      if (Fop == OP_END) RRETURN(MATCH_NOMATCH);\n      return MATCH_NOMATCH;\n      }\n\n    /* We have a successful match of the whole pattern. Record the result and\n    then do a direct return from the function. If there is space in the offset\n    vector, set any pairs that follow the highest-numbered captured string but\n    are less than the number of capturing groups in the pattern to PCRE2_UNSET.\n    It is documented that this happens. \"Gaps\" are set to PCRE2_UNSET\n    dynamically. It is only those at the end that need setting here. */\n\n    mb->end_match_ptr = Feptr;           /* Record where we ended */\n    mb->end_offset_top = Foffset_top;    /* and how many extracts were taken */\n    mb->mark = Fmark;                    /* and the last success mark */\n    if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n\n    match_data->ovector[0] = Fstart_match - mb->start_subject;\n    match_data->ovector[1] = Feptr - mb->start_subject;\n\n    /* Set i to the smaller of the sizes of the external and frame ovectors. */\n\n    i = 2 * ((top_bracket + 1 > match_data->oveccount)?\n      match_data->oveccount : top_bracket + 1);\n    memcpy(match_data->ovector + 2, Fovector, (i - 2) * sizeof(PCRE2_SIZE));\n    while (--i >= Foffset_top + 2) match_data->ovector[i] = PCRE2_UNSET;\n    return MATCH_MATCH;  /* Note: NOT RRETURN */\n\n\n    /*===================================================================== */\n    /* Match any single character type except newline; have to take care with\n    CRLF newlines and partial matching. */\n\n    case OP_ANY:\n    if (IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n    if (mb->partial != 0 &&\n        Feptr == mb->end_subject - 1 &&\n        NLBLOCK->nltype == NLTYPE_FIXED &&\n        NLBLOCK->nllen == 2 &&\n        UCHAR21TEST(Feptr) == NLBLOCK->nl[0])\n      {\n      mb->hitend = TRUE;\n      if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n      }\n    /* Fall through */\n\n    /* Match any single character whatsoever. */\n\n    case OP_ALLANY:\n    if (Feptr >= mb->end_subject)  /* DO NOT merge the Feptr++ here; it must */\n      {                            /* not be updated before SCHECK_PARTIAL. */\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    Feptr++;\n#ifdef SUPPORT_UNICODE\n    if (utf) ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n#endif\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single code unit, even in UTF mode. This opcode really does\n    match any code unit, even newline. (It really should be called ANYCODEUNIT,\n    of course - the byte name is from pre-16 bit days.) */\n\n    case OP_ANYBYTE:\n    if (Feptr >= mb->end_subject)   /* DO NOT merge the Feptr++ here; it must */\n      {                             /* not be updated before SCHECK_PARTIAL. */\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    Feptr++;\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single character, casefully */\n\n    case OP_CHAR:\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      Flength = 1;\n      Fecode++;\n      GETCHARLEN(fc, Fecode, Flength);\n      if (Flength > (PCRE2_SIZE)(mb->end_subject - Feptr))\n        {\n        CHECK_PARTIAL();             /* Not SCHECK_PARTIAL() */\n        RRETURN(MATCH_NOMATCH);\n        }\n      for (; Flength > 0; Flength--)\n        {\n        if (*Fecode++ != UCHAR21INC(Feptr)) RRETURN(MATCH_NOMATCH);\n        }\n      }\n    else\n#endif\n\n    /* Not UTF mode */\n      {\n      if (mb->end_subject - Feptr < 1)\n        {\n        SCHECK_PARTIAL();            /* This one can use SCHECK_PARTIAL() */\n        RRETURN(MATCH_NOMATCH);\n        }\n      if (Fecode[1] != *Feptr++) RRETURN(MATCH_NOMATCH);\n      Fecode += 2;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single character, caselessly. If we are at the end of the\n    subject, give up immediately. We get here only when the pattern character\n    has at most one other case. Characters with more than two cases are coded\n    as OP_PROP with the pseudo-property PT_CLIST. */\n\n    case OP_CHARI:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      Flength = 1;\n      Fecode++;\n      GETCHARLEN(fc, Fecode, Flength);\n\n      /* If the pattern character's value is < 128, we know that its other case\n      (if any) is also < 128 (and therefore only one code unit long in all\n      code-unit widths), so we can use the fast lookup table. We checked above\n      that there is at least one character left in the subject. */\n\n      if (fc < 128)\n        {\n        uint32_t cc = UCHAR21(Feptr);\n        if (mb->lcc[fc] != TABLE_GET(cc, mb->lcc, cc)) RRETURN(MATCH_NOMATCH);\n        Fecode++;\n        Feptr++;\n        }\n\n      /* Otherwise we must pick up the subject character and use Unicode\n      property support to test its other case. Note that we cannot use the\n      value of \"Flength\" to check for sufficient bytes left, because the other\n      case of the character may have more or fewer code units. */\n\n      else\n        {\n        uint32_t dc;\n        GETCHARINC(dc, Feptr);\n        Fecode += Flength;\n        if (dc != fc && dc != UCD_OTHERCASE(fc)) RRETURN(MATCH_NOMATCH);\n        }\n      }\n\n    /* If UCP is set without UTF we must do the same as above, but with one\n    character per code unit. */\n\n    else if (ucp)\n      {\n      uint32_t cc = UCHAR21(Feptr);\n      fc = Fecode[1];\n      if (fc < 128)\n        {\n        if (mb->lcc[fc] != TABLE_GET(cc, mb->lcc, cc)) RRETURN(MATCH_NOMATCH);\n        }\n      else\n        {\n        if (cc != fc && cc != UCD_OTHERCASE(fc)) RRETURN(MATCH_NOMATCH);\n        }\n      Feptr++;\n      Fecode += 2;\n      }\n\n    else\n#endif   /* SUPPORT_UNICODE */\n\n    /* Not UTF or UCP mode; use the table for characters < 256. */\n      {\n      if (TABLE_GET(Fecode[1], mb->lcc, Fecode[1])\n          != TABLE_GET(*Feptr, mb->lcc, *Feptr)) RRETURN(MATCH_NOMATCH);\n      Feptr++;\n      Fecode += 2;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match not a single character. */\n\n    case OP_NOT:\n    case OP_NOTI:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      uint32_t ch;\n      Fecode++;\n      GETCHARINC(ch, Fecode);\n      GETCHARINC(fc, Feptr);\n      if (ch == fc)\n        {\n        RRETURN(MATCH_NOMATCH);  /* Caseful match */\n        }\n      else if (Fop == OP_NOTI)   /* If caseless */\n        {\n        if (ch > 127)\n          ch = UCD_OTHERCASE(ch);\n        else\n          ch = (mb->fcc)[ch];\n        if (ch == fc) RRETURN(MATCH_NOMATCH);\n        }\n      }\n\n    /* UCP without UTF is as above, but with one character per code unit. */\n\n    else if (ucp)\n      {\n      uint32_t ch;\n      fc = UCHAR21INC(Feptr);\n      ch = Fecode[1];\n      Fecode += 2;\n\n      if (ch == fc)\n        {\n        RRETURN(MATCH_NOMATCH);  /* Caseful match */\n        }\n      else if (Fop == OP_NOTI)   /* If caseless */\n        {\n        if (ch > 127)\n          ch = UCD_OTHERCASE(ch);\n        else\n          ch = (mb->fcc)[ch];\n        if (ch == fc) RRETURN(MATCH_NOMATCH);\n        }\n      }\n\n    else\n#endif  /* SUPPORT_UNICODE */\n\n    /* Neither UTF nor UCP is set */\n\n      {\n      uint32_t ch = Fecode[1];\n      fc = UCHAR21INC(Feptr);\n      if (ch == fc || (Fop == OP_NOTI && TABLE_GET(ch, mb->fcc, ch) == fc))\n        RRETURN(MATCH_NOMATCH);\n      Fecode += 2;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match a single character repeatedly. */\n\n#define Loclength    F->temp_size\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lcharptr     F->temp_sptr[1]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n#define Lc           F->temp_32[2]\n#define Loc          F->temp_32[3]\n\n    case OP_EXACT:\n    case OP_EXACTI:\n    Lmin = Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_POSUPTO:\n    case OP_POSUPTOI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_UPTO:\n    case OP_UPTOI:\n    reptype = REPTYPE_MAX;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_MINUPTO:\n    case OP_MINUPTOI:\n    reptype = REPTYPE_MIN;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATCHAR;\n\n    case OP_POSSTAR:\n    case OP_POSSTARI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATCHAR;\n\n    case OP_POSPLUS:\n    case OP_POSPLUSI:\n    reptype = REPTYPE_POS;\n    Lmin = 1;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATCHAR;\n\n    case OP_POSQUERY:\n    case OP_POSQUERYI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = 1;\n    Fecode++;\n    goto REPEATCHAR;\n\n    case OP_STAR:\n    case OP_STARI:\n    case OP_MINSTAR:\n    case OP_MINSTARI:\n    case OP_PLUS:\n    case OP_PLUSI:\n    case OP_MINPLUS:\n    case OP_MINPLUSI:\n    case OP_QUERY:\n    case OP_QUERYI:\n    case OP_MINQUERY:\n    case OP_MINQUERYI:\n    fc = *Fecode++ - ((Fop < OP_STARI)? OP_STAR : OP_STARI);\n    Lmin = rep_min[fc];\n    Lmax = rep_max[fc];\n    reptype = rep_typ[fc];\n\n    /* Common code for all repeated single-character matches. We first check\n    for the minimum number of characters. If the minimum equals the maximum, we\n    are done. Otherwise, if minimizing, check the rest of the pattern for a\n    match; if there isn't one, advance up to the maximum, one character at a\n    time.\n\n    If maximizing, advance up to the maximum number of matching characters,\n    until Feptr is past the end of the maximum run. If possessive, we are\n    then done (no backing up). Otherwise, match at this position; anything\n    other than no match is immediately returned. For nomatch, back up one\n    character, unless we are matching \\R and the last thing matched was\n    \\r\\n, in which case, back up two code units until we reach the first\n    optional character position.\n\n    The various UTF/non-UTF and caseful/caseless cases are handled separately,\n    for speed. */\n\n    REPEATCHAR:\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      Flength = 1;\n      Lcharptr = Fecode;\n      GETCHARLEN(fc, Fecode, Flength);\n      Fecode += Flength;\n\n      /* Handle multi-code-unit character matching, caseful and caseless. */\n\n      if (Flength > 1)\n        {\n        uint32_t othercase;\n\n        if (Fop >= OP_STARI &&     /* Caseless */\n            (othercase = UCD_OTHERCASE(fc)) != fc)\n          Loclength = PRIV(ord2utf)(othercase, Foccu);\n        else Loclength = 0;\n\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr <= mb->end_subject - Flength &&\n            memcmp(Feptr, Lcharptr, CU2BYTES(Flength)) == 0) Feptr += Flength;\n          else if (Loclength > 0 &&\n                   Feptr <= mb->end_subject - Loclength &&\n                   memcmp(Feptr, Foccu, CU2BYTES(Loclength)) == 0)\n            Feptr += Loclength;\n          else\n            {\n            CHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          }\n\n        if (Lmin == Lmax) continue;\n\n        if (reptype == REPTYPE_MIN)\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM202);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr <= mb->end_subject - Flength &&\n              memcmp(Feptr, Lcharptr, CU2BYTES(Flength)) == 0) Feptr += Flength;\n            else if (Loclength > 0 &&\n                     Feptr <= mb->end_subject - Loclength &&\n                     memcmp(Feptr, Foccu, CU2BYTES(Loclength)) == 0)\n              Feptr += Loclength;\n            else\n              {\n              CHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            }\n          /* Control never gets here */\n          }\n\n        else  /* Maximize */\n          {\n          Lstart_eptr = Feptr;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr <= mb->end_subject - Flength &&\n                memcmp(Feptr, Lcharptr, CU2BYTES(Flength)) == 0)\n              Feptr += Flength;\n            else if (Loclength > 0 &&\n                     Feptr <= mb->end_subject - Loclength &&\n                     memcmp(Feptr, Foccu, CU2BYTES(Loclength)) == 0)\n              Feptr += Loclength;\n            else\n              {\n              CHECK_PARTIAL();\n              break;\n              }\n            }\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          if (reptype != REPTYPE_POS) for(;;)\n            {\n            if (Feptr <= Lstart_eptr) break;\n            RMATCH(Fecode, RM203);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            BACKCHAR(Feptr);\n            }\n          }\n        break;   /* End of repeated wide character handling */\n        }\n\n      /* Length of UTF character is 1. Put it into the preserved variable and\n      fall through to the non-UTF code. */\n\n      Lc = fc;\n      }\n    else\n#endif  /* SUPPORT_UNICODE */\n\n    /* When not in UTF mode, load a single-code-unit character. Then proceed as\n    above, using Unicode casing if either UTF or UCP is set. */\n\n    Lc = *Fecode++;\n\n    /* Caseless comparison */\n\n    if (Fop >= OP_STARI)\n      {\n#if PCRE2_CODE_UNIT_WIDTH == 8\n#ifdef SUPPORT_UNICODE\n      if (ucp && !utf && Lc > 127) Loc = UCD_OTHERCASE(Lc);\n      else\n#endif  /* SUPPORT_UNICODE */\n      /* Lc will be < 128 in UTF-8 mode. */\n      Loc = mb->fcc[Lc];\n#else /* 16-bit & 32-bit */\n#ifdef SUPPORT_UNICODE\n      if ((utf || ucp) && Lc > 127) Loc = UCD_OTHERCASE(Lc);\n      else\n#endif  /* SUPPORT_UNICODE */\n      Loc = TABLE_GET(Lc, mb->fcc, Lc);\n#endif  /* PCRE2_CODE_UNIT_WIDTH == 8 */\n\n      for (i = 1; i <= Lmin; i++)\n        {\n        uint32_t cc;                 /* Faster than PCRE2_UCHAR */\n        if (Feptr >= mb->end_subject)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        cc = UCHAR21TEST(Feptr);\n        if (Lc != cc && Loc != cc) RRETURN(MATCH_NOMATCH);\n        Feptr++;\n        }\n      if (Lmin == Lmax) continue;\n\n      if (reptype == REPTYPE_MIN)\n        {\n        for (;;)\n          {\n          uint32_t cc;               /* Faster than PCRE2_UCHAR */\n          RMATCH(Fecode, RM25);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21TEST(Feptr);\n          if (Lc != cc && Loc != cc) RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        /* Control never gets here */\n        }\n\n      else  /* Maximize */\n        {\n        Lstart_eptr = Feptr;\n        for (i = Lmin; i < Lmax; i++)\n          {\n          uint32_t cc;               /* Faster than PCRE2_UCHAR */\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n          cc = UCHAR21TEST(Feptr);\n          if (Lc != cc && Loc != cc) break;\n          Feptr++;\n          }\n        if (reptype != REPTYPE_POS) for (;;)\n          {\n          if (Feptr == Lstart_eptr) break;\n          RMATCH(Fecode, RM26);\n          Feptr--;\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          }\n        }\n      }\n\n    /* Caseful comparisons (includes all multi-byte characters) */\n\n    else\n      {\n      for (i = 1; i <= Lmin; i++)\n        {\n        if (Feptr >= mb->end_subject)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        if (Lc != UCHAR21INCTEST(Feptr)) RRETURN(MATCH_NOMATCH);\n        }\n\n      if (Lmin == Lmax) continue;\n\n      if (reptype == REPTYPE_MIN)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM27);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lc != UCHAR21INCTEST(Feptr)) RRETURN(MATCH_NOMATCH);\n          }\n        /* Control never gets here */\n        }\n      else  /* Maximize */\n        {\n        Lstart_eptr = Feptr;\n        for (i = Lmin; i < Lmax; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n\n          if (Lc != UCHAR21TEST(Feptr)) break;\n          Feptr++;\n          }\n\n        if (reptype != REPTYPE_POS) for (;;)\n          {\n          if (Feptr <= Lstart_eptr) break;\n          RMATCH(Fecode, RM28);\n          Feptr--;\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          }\n        }\n      }\n    break;\n\n#undef Loclength\n#undef Lstart_eptr\n#undef Lcharptr\n#undef Lmin\n#undef Lmax\n#undef Lc\n#undef Loc\n\n\n    /* ===================================================================== */\n    /* Match a negated single one-byte character repeatedly. This is almost a\n    repeat of the code for a repeated single character, but I haven't found a\n    nice way of commoning these up that doesn't require a test of the\n    positive/negative option for each character match. Maybe that wouldn't add\n    very much to the time taken, but character matching *is* what this is all\n    about... */\n\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n#define Lc           F->temp_32[2]\n#define Loc          F->temp_32[3]\n\n    case OP_NOTEXACT:\n    case OP_NOTEXACTI:\n    Lmin = Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTUPTO:\n    case OP_NOTUPTOI:\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    reptype = REPTYPE_MAX;\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTMINUPTO:\n    case OP_NOTMINUPTOI:\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    reptype = REPTYPE_MIN;\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSSTAR:\n    case OP_NOTPOSSTARI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSPLUS:\n    case OP_NOTPOSPLUSI:\n    reptype = REPTYPE_POS;\n    Lmin = 1;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSQUERY:\n    case OP_NOTPOSQUERYI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = 1;\n    Fecode++;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTPOSUPTO:\n    case OP_NOTPOSUPTOI:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATNOTCHAR;\n\n    case OP_NOTSTAR:\n    case OP_NOTSTARI:\n    case OP_NOTMINSTAR:\n    case OP_NOTMINSTARI:\n    case OP_NOTPLUS:\n    case OP_NOTPLUSI:\n    case OP_NOTMINPLUS:\n    case OP_NOTMINPLUSI:\n    case OP_NOTQUERY:\n    case OP_NOTQUERYI:\n    case OP_NOTMINQUERY:\n    case OP_NOTMINQUERYI:\n    fc = *Fecode++ - ((Fop >= OP_NOTSTARI)? OP_NOTSTARI: OP_NOTSTAR);\n    Lmin = rep_min[fc];\n    Lmax = rep_max[fc];\n    reptype = rep_typ[fc];\n\n    /* Common code for all repeated single-character non-matches. */\n\n    REPEATNOTCHAR:\n    GETCHARINCTEST(Lc, Fecode);\n\n    /* The code is duplicated for the caseless and caseful cases, for speed,\n    since matching characters is likely to be quite common. First, ensure the\n    minimum number of matches are present. If Lmin = Lmax, we are done.\n    Otherwise, if minimizing, keep trying the rest of the expression and\n    advancing one matching character if failing, up to the maximum.\n    Alternatively, if maximizing, find the maximum number of characters and\n    work backwards. */\n\n    if (Fop >= OP_NOTSTARI)     /* Caseless */\n      {\n#ifdef SUPPORT_UNICODE\n      if ((utf || ucp) && Lc > 127)\n        Loc = UCD_OTHERCASE(Lc);\n      else\n#endif /* SUPPORT_UNICODE */\n\n      Loc = TABLE_GET(Lc, mb->fcc, Lc);  /* Other case from table */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        uint32_t d;\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(d, Feptr);\n          if (Lc == d || Loc == d) RRETURN(MATCH_NOMATCH);\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n\n      /* Not UTF mode */\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lc == *Feptr || Loc == *Feptr) RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        }\n\n      if (Lmin == Lmax) continue;  /* Finished for exact count */\n\n      if (reptype == REPTYPE_MIN)\n        {\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (;;)\n            {\n            RMATCH(Fecode, RM204);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINC(d, Feptr);\n            if (Lc == d || Loc == d) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        else\n#endif  /*SUPPORT_UNICODE */\n\n        /* Not UTF mode */\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM29);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            if (Lc == *Feptr || Loc == *Feptr) RRETURN(MATCH_NOMATCH);\n            Feptr++;\n            }\n          }\n        /* Control never gets here */\n        }\n\n      /* Maximize case */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(d, Feptr, len);\n            if (Lc == d || Loc == d) break;\n            Feptr += len;\n            }\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          if (reptype != REPTYPE_POS) for(;;)\n            {\n            if (Feptr <= Lstart_eptr) break;\n            RMATCH(Fecode, RM205);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            BACKCHAR(Feptr);\n            }\n          }\n        else\n#endif  /* SUPPORT_UNICODE */\n\n        /* Not UTF mode */\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (Lc == *Feptr || Loc == *Feptr) break;\n            Feptr++;\n            }\n          if (reptype != REPTYPE_POS) for (;;)\n            {\n            if (Feptr == Lstart_eptr) break;\n            RMATCH(Fecode, RM30);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            }\n          }\n        }\n      }\n\n    /* Caseful comparisons */\n\n    else\n      {\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        uint32_t d;\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(d, Feptr);\n          if (Lc == d) RRETURN(MATCH_NOMATCH);\n          }\n        }\n      else\n#endif\n      /* Not UTF mode */\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lc == *Feptr++) RRETURN(MATCH_NOMATCH);\n          }\n        }\n\n      if (Lmin == Lmax) continue;\n\n      if (reptype == REPTYPE_MIN)\n        {\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (;;)\n            {\n            RMATCH(Fecode, RM206);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINC(d, Feptr);\n            if (Lc == d) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        else\n#endif\n        /* Not UTF mode */\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM31);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            if (Lc == *Feptr++) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        /* Control never gets here */\n        }\n\n      /* Maximize case */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          uint32_t d;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(d, Feptr, len);\n            if (Lc == d) break;\n            Feptr += len;\n            }\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          if (reptype != REPTYPE_POS) for(;;)\n            {\n            if (Feptr <= Lstart_eptr) break;\n            RMATCH(Fecode, RM207);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            BACKCHAR(Feptr);\n            }\n          }\n        else\n#endif\n        /* Not UTF mode */\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (Lc == *Feptr) break;\n            Feptr++;\n            }\n          if (reptype != REPTYPE_POS) for (;;)\n            {\n            if (Feptr == Lstart_eptr) break;\n            RMATCH(Fecode, RM32);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            }\n          }\n        }\n      }\n    break;\n\n#undef Lstart_eptr\n#undef Lmin\n#undef Lmax\n#undef Lc\n#undef Loc\n\n\n    /* ===================================================================== */\n    /* Match a bit-mapped character class, possibly repeatedly. These opcodes\n    are used when all the characters in the class have values in the range\n    0-255, and either the matching is caseful, or the characters are in the\n    range 0-127 when UTF processing is enabled. The only difference between\n    OP_CLASS and OP_NCLASS occurs when a data character outside the range is\n    encountered. */\n\n#define Lmin               F->temp_32[0]\n#define Lmax               F->temp_32[1]\n#define Lstart_eptr        F->temp_sptr[0]\n#define Lbyte_map_address  F->temp_sptr[1]\n#define Lbyte_map          ((unsigned char *)Lbyte_map_address)\n\n    case OP_NCLASS:\n    case OP_CLASS:\n      {\n      Lbyte_map_address = Fecode + 1;           /* Save for matching */\n      Fecode += 1 + (32 / sizeof(PCRE2_UCHAR)); /* Advance past the item */\n\n      /* Look past the end of the item to see if there is repeat information\n      following. Then obey similar code to character type repeats. */\n\n      switch (*Fecode)\n        {\n        case OP_CRSTAR:\n        case OP_CRMINSTAR:\n        case OP_CRPLUS:\n        case OP_CRMINPLUS:\n        case OP_CRQUERY:\n        case OP_CRMINQUERY:\n        case OP_CRPOSSTAR:\n        case OP_CRPOSPLUS:\n        case OP_CRPOSQUERY:\n        fc = *Fecode++ - OP_CRSTAR;\n        Lmin = rep_min[fc];\n        Lmax = rep_max[fc];\n        reptype = rep_typ[fc];\n        break;\n\n        case OP_CRRANGE:\n        case OP_CRMINRANGE:\n        case OP_CRPOSRANGE:\n        Lmin = GET2(Fecode, 1);\n        Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n        if (Lmax == 0) Lmax = UINT32_MAX;       /* Max 0 => infinity */\n        reptype = rep_typ[*Fecode - OP_CRSTAR];\n        Fecode += 1 + 2 * IMM2_SIZE;\n        break;\n\n        default:               /* No repeat follows */\n        Lmin = Lmax = 1;\n        break;\n        }\n\n      /* First, ensure the minimum number of matches are present. */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          if (fc > 255)\n            {\n            if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n            }\n          else\n            if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n          }\n        }\n      else\n#endif\n      /* Not UTF mode */\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          fc = *Feptr++;\n#if PCRE2_CODE_UNIT_WIDTH != 8\n          if (fc > 255)\n            {\n            if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n            }\n          else\n#endif\n          if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n          }\n        }\n\n      /* If Lmax == Lmin we are done. Continue with main loop. */\n\n      if (Lmin == Lmax) continue;\n\n      /* If minimizing, keep testing the rest of the expression and advancing\n      the pointer while it matches the class. */\n\n      if (reptype == REPTYPE_MIN)\n        {\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM200);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINC(fc, Feptr);\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n              }\n            else\n              if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        else\n#endif\n        /* Not UTF mode */\n          {\n          for (;;)\n            {\n            RMATCH(Fecode, RM23);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            fc = *Feptr++;\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) RRETURN(MATCH_NOMATCH);\n              }\n            else\n#endif\n            if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) RRETURN(MATCH_NOMATCH);\n            }\n          }\n        /* Control never gets here */\n        }\n\n      /* If maximizing, find the longest possible run, then work backwards. */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n\n#ifdef SUPPORT_UNICODE\n        if (utf)\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) break;\n              }\n            else\n              if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) break;\n            Feptr += len;\n            }\n\n          if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n          /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n          Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n          go too far. */\n\n          for (;;)\n            {\n            RMATCH(Fecode, RM201);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Feptr-- <= Lstart_eptr) break;  /* Tried at original position */\n            BACKCHAR(Feptr);\n            }\n          }\n        else\n#endif\n          /* Not UTF mode */\n          {\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            fc = *Feptr;\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            if (fc > 255)\n              {\n              if (Fop == OP_CLASS) break;\n              }\n            else\n#endif\n            if ((Lbyte_map[fc/8] & (1u << (fc&7))) == 0) break;\n            Feptr++;\n            }\n\n          if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n          while (Feptr >= Lstart_eptr)\n            {\n            RMATCH(Fecode, RM24);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            Feptr--;\n            }\n          }\n\n        RRETURN(MATCH_NOMATCH);\n        }\n      }\n    /* Control never gets here */\n\n#undef Lbyte_map_address\n#undef Lbyte_map\n#undef Lstart_eptr\n#undef Lmin\n#undef Lmax\n\n\n    /* ===================================================================== */\n    /* Match an extended character class. In the 8-bit library, this opcode is\n    encountered only when UTF-8 mode mode is supported. In the 16-bit and\n    32-bit libraries, codepoints greater than 255 may be encountered even when\n    UTF is not supported. */\n\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lxclass_data F->temp_sptr[1]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n\n#ifdef SUPPORT_WIDE_CHARS\n    case OP_XCLASS:\n      {\n      Lxclass_data = Fecode + 1 + LINK_SIZE;  /* Save for matching */\n      Fecode += GET(Fecode, 1);               /* Advance past the item */\n\n      switch (*Fecode)\n        {\n        case OP_CRSTAR:\n        case OP_CRMINSTAR:\n        case OP_CRPLUS:\n        case OP_CRMINPLUS:\n        case OP_CRQUERY:\n        case OP_CRMINQUERY:\n        case OP_CRPOSSTAR:\n        case OP_CRPOSPLUS:\n        case OP_CRPOSQUERY:\n        fc = *Fecode++ - OP_CRSTAR;\n        Lmin = rep_min[fc];\n        Lmax = rep_max[fc];\n        reptype = rep_typ[fc];\n        break;\n\n        case OP_CRRANGE:\n        case OP_CRMINRANGE:\n        case OP_CRPOSRANGE:\n        Lmin = GET2(Fecode, 1);\n        Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n        if (Lmax == 0) Lmax = UINT32_MAX;  /* Max 0 => infinity */\n        reptype = rep_typ[*Fecode - OP_CRSTAR];\n        Fecode += 1 + 2 * IMM2_SIZE;\n        break;\n\n        default:               /* No repeat follows */\n        Lmin = Lmax = 1;\n        break;\n        }\n\n      /* First, ensure the minimum number of matches are present. */\n\n      for (i = 1; i <= Lmin; i++)\n        {\n        if (Feptr >= mb->end_subject)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        GETCHARINCTEST(fc, Feptr);\n        if (!PRIV(xclass)(fc, Lxclass_data, utf)) RRETURN(MATCH_NOMATCH);\n        }\n\n      /* If Lmax == Lmin we can just continue with the main loop. */\n\n      if (Lmin == Lmax) continue;\n\n      /* If minimizing, keep testing the rest of the expression and advancing\n      the pointer while it matches the class. */\n\n      if (reptype == REPTYPE_MIN)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM100);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINCTEST(fc, Feptr);\n          if (!PRIV(xclass)(fc, Lxclass_data, utf)) RRETURN(MATCH_NOMATCH);\n          }\n        /* Control never gets here */\n        }\n\n      /* If maximizing, find the longest possible run, then work backwards. */\n\n      else\n        {\n        Lstart_eptr = Feptr;\n        for (i = Lmin; i < Lmax; i++)\n          {\n          int len = 1;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n#ifdef SUPPORT_UNICODE\n          GETCHARLENTEST(fc, Feptr, len);\n#else\n          fc = *Feptr;\n#endif\n          if (!PRIV(xclass)(fc, Lxclass_data, utf)) break;\n          Feptr += len;\n          }\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n        Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n        go too far. */\n\n        for(;;)\n          {\n          RMATCH(Fecode, RM101);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Feptr-- <= Lstart_eptr) break;  /* Tried at original position */\n#ifdef SUPPORT_UNICODE\n          if (utf) BACKCHAR(Feptr);\n#endif\n          }\n        RRETURN(MATCH_NOMATCH);\n        }\n\n      /* Control never gets here */\n      }\n#endif  /* SUPPORT_WIDE_CHARS: end of XCLASS */\n\n#undef Lstart_eptr\n#undef Lxclass_data\n#undef Lmin\n#undef Lmax\n\n\n    /* ===================================================================== */\n    /* Match various character types when PCRE2_UCP is not set. These opcodes\n    are not generated when PCRE2_UCP is set - instead appropriate property\n    tests are compiled. */\n\n    case OP_NOT_DIGIT:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (CHMAX_255(fc) && (mb->ctypes[fc] & ctype_digit) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_DIGIT:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (!CHMAX_255(fc) || (mb->ctypes[fc] & ctype_digit) == 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_NOT_WHITESPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (CHMAX_255(fc) && (mb->ctypes[fc] & ctype_space) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_WHITESPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (!CHMAX_255(fc) || (mb->ctypes[fc] & ctype_space) == 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_NOT_WORDCHAR:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (CHMAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_WORDCHAR:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    if (!CHMAX_255(fc) || (mb->ctypes[fc] & ctype_word) == 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_ANYNL:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      default: RRETURN(MATCH_NOMATCH);\n\n      case CHAR_CR:\n      if (Feptr >= mb->end_subject)\n        {\n        SCHECK_PARTIAL();\n        }\n      else if (UCHAR21TEST(Feptr) == CHAR_LF) Feptr++;\n      break;\n\n      case CHAR_LF:\n      break;\n\n      case CHAR_VT:\n      case CHAR_FF:\n      case CHAR_NEL:\n#ifndef EBCDIC\n      case 0x2028:\n      case 0x2029:\n#endif  /* Not EBCDIC */\n      if (mb->bsr_convention == PCRE2_BSR_ANYCRLF) RRETURN(MATCH_NOMATCH);\n      break;\n      }\n    Fecode++;\n    break;\n\n    case OP_NOT_HSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      HSPACE_CASES: RRETURN(MATCH_NOMATCH);  /* Byte and multibyte cases */\n      default: break;\n      }\n    Fecode++;\n    break;\n\n    case OP_HSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      HSPACE_CASES: break;  /* Byte and multibyte cases */\n      default: RRETURN(MATCH_NOMATCH);\n      }\n    Fecode++;\n    break;\n\n    case OP_NOT_VSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      VSPACE_CASES: RRETURN(MATCH_NOMATCH);\n      default: break;\n      }\n    Fecode++;\n    break;\n\n    case OP_VSPACE:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n    switch(fc)\n      {\n      VSPACE_CASES: break;\n      default: RRETURN(MATCH_NOMATCH);\n      }\n    Fecode++;\n    break;\n\n\n#ifdef SUPPORT_UNICODE\n\n    /* ===================================================================== */\n    /* Check the next character by Unicode property. We will get here only\n    if the support is in the binary; otherwise a compile-time error occurs. */\n\n    case OP_PROP:\n    case OP_NOTPROP:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    GETCHARINCTEST(fc, Feptr);\n      {\n      const uint32_t *cp;\n      const ucd_record *prop = GET_UCD(fc);\n      BOOL notmatch = Fop == OP_NOTPROP;\n\n      switch(Fecode[1])\n        {\n        case PT_ANY:\n        if (notmatch) RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_LAMP:\n        if ((prop->chartype == ucp_Lu ||\n             prop->chartype == ucp_Ll ||\n             prop->chartype == ucp_Lt) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_GC:\n        if ((Fecode[2] == PRIV(ucp_gentype)[prop->chartype]) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_PC:\n        if ((Fecode[2] == prop->chartype) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_SC:\n        if ((Fecode[2] == prop->script) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_SCX:\n          {\n          BOOL ok = (Fecode[2] == prop->script ||\n                     MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Fecode[2]) != 0);\n          if (ok == notmatch) RRETURN(MATCH_NOMATCH);\n          }\n        break;\n\n        /* These are specials */\n\n        case PT_ALNUM:\n        if ((PRIV(ucp_gentype)[prop->chartype] == ucp_L ||\n             PRIV(ucp_gentype)[prop->chartype] == ucp_N) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n        which means that Perl space and POSIX space are now identical. PCRE\n        was changed at release 8.34. */\n\n        case PT_SPACE:    /* Perl space */\n        case PT_PXSPACE:  /* POSIX space */\n        switch(fc)\n          {\n          HSPACE_CASES:\n          VSPACE_CASES:\n          if (notmatch) RRETURN(MATCH_NOMATCH);\n          break;\n\n          default:\n          if ((PRIV(ucp_gentype)[prop->chartype] == ucp_Z) == notmatch)\n            RRETURN(MATCH_NOMATCH);\n          break;\n          }\n        break;\n\n        case PT_WORD:\n        if ((PRIV(ucp_gentype)[prop->chartype] == ucp_L ||\n             PRIV(ucp_gentype)[prop->chartype] == ucp_N ||\n             fc == CHAR_UNDERSCORE) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_CLIST:\n        cp = PRIV(ucd_caseless_sets) + Fecode[2];\n        for (;;)\n          {\n          if (fc < *cp)\n            { if (notmatch) break; else { RRETURN(MATCH_NOMATCH); } }\n          if (fc == *cp++)\n            { if (notmatch) { RRETURN(MATCH_NOMATCH); } else break; }\n          }\n        break;\n\n        case PT_UCNC:\n        if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n             fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n             fc >= 0xe000) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_BIDICL:\n        if ((UCD_BIDICLASS_PROP(prop) == Fecode[2]) == notmatch)\n          RRETURN(MATCH_NOMATCH);\n        break;\n\n        case PT_BOOL:\n          {\n          BOOL ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n            UCD_BPROPS_PROP(prop), Fecode[2]) != 0;\n          if (ok == notmatch) RRETURN(MATCH_NOMATCH);\n          }\n        break;\n\n        /* This should never occur */\n\n        default:\n        return PCRE2_ERROR_INTERNAL;\n        }\n\n      Fecode += 3;\n      }\n    break;\n\n\n    /* ===================================================================== */\n    /* Match an extended Unicode sequence. We will get here only if the support\n    is in the binary; otherwise a compile-time error occurs. */\n\n    case OP_EXTUNI:\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      RRETURN(MATCH_NOMATCH);\n      }\n    else\n      {\n      GETCHARINCTEST(fc, Feptr);\n      Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject, mb->end_subject, utf,\n        NULL);\n      }\n    CHECK_PARTIAL();\n    Fecode++;\n    break;\n\n#endif  /* SUPPORT_UNICODE */\n\n\n    /* ===================================================================== */\n    /* Match a single character type repeatedly. Note that the property type\n    does not need to be in a stack frame as it is not used within an RMATCH()\n    loop. */\n\n#define Lstart_eptr  F->temp_sptr[0]\n#define Lmin         F->temp_32[0]\n#define Lmax         F->temp_32[1]\n#define Lctype       F->temp_32[2]\n#define Lpropvalue   F->temp_32[3]\n\n    case OP_TYPEEXACT:\n    Lmin = Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATTYPE;\n\n    case OP_TYPEUPTO:\n    case OP_TYPEMINUPTO:\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    reptype = (*Fecode == OP_TYPEMINUPTO)? REPTYPE_MIN : REPTYPE_MAX;\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSSTAR:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSPLUS:\n    reptype = REPTYPE_POS;\n    Lmin = 1;\n    Lmax = UINT32_MAX;\n    Fecode++;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSQUERY:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = 1;\n    Fecode++;\n    goto REPEATTYPE;\n\n    case OP_TYPEPOSUPTO:\n    reptype = REPTYPE_POS;\n    Lmin = 0;\n    Lmax = GET2(Fecode, 1);\n    Fecode += 1 + IMM2_SIZE;\n    goto REPEATTYPE;\n\n    case OP_TYPESTAR:\n    case OP_TYPEMINSTAR:\n    case OP_TYPEPLUS:\n    case OP_TYPEMINPLUS:\n    case OP_TYPEQUERY:\n    case OP_TYPEMINQUERY:\n    fc = *Fecode++ - OP_TYPESTAR;\n    Lmin = rep_min[fc];\n    Lmax = rep_max[fc];\n    reptype = rep_typ[fc];\n\n    /* Common code for all repeated character type matches. */\n\n    REPEATTYPE:\n    Lctype = *Fecode++;      /* Code for the character type */\n\n#ifdef SUPPORT_UNICODE\n    if (Lctype == OP_PROP || Lctype == OP_NOTPROP)\n      {\n      proptype = *Fecode++;\n      Lpropvalue = *Fecode++;\n      }\n    else proptype = -1;\n#endif\n\n    /* First, ensure the minimum number of matches are present. Use inline\n    code for maximizing the speed, and do the type test once at the start\n    (i.e. keep it out of the loops). As there are no calls to RMATCH in the\n    loops, we can use an ordinary variable for \"notmatch\". The code for UTF\n    mode is separated out for tidiness, except for Unicode property tests. */\n\n    if (Lmin > 0)\n      {\n#ifdef SUPPORT_UNICODE\n      if (proptype >= 0)  /* Property tests in all modes */\n        {\n        BOOL notmatch = Lctype == OP_NOTPROP;\n        switch(proptype)\n          {\n          case PT_ANY:\n          if (notmatch) RRETURN(MATCH_NOMATCH);\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            }\n          break;\n\n          case PT_LAMP:\n          for (i = 1; i <= Lmin; i++)\n            {\n            int chartype;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            chartype = UCD_CHARTYPE(fc);\n            if ((chartype == ucp_Lu ||\n                 chartype == ucp_Ll ||\n                 chartype == ucp_Lt) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_GC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CATEGORY(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_PC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CHARTYPE(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_SC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_SCRIPT(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_SCX:\n          for (i = 1; i <= Lmin; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = (prop->script == Lpropvalue ||\n                  MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Lpropvalue) != 0);\n            if (ok == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_ALNUM:\n          for (i = 1; i <= Lmin; i++)\n            {\n            int category;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n          which means that Perl space and POSIX space are now identical. PCRE\n          was changed at release 8.34. */\n\n          case PT_SPACE:    /* Perl space */\n          case PT_PXSPACE:  /* POSIX space */\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            switch(fc)\n              {\n              HSPACE_CASES:\n              VSPACE_CASES:\n              if (notmatch) RRETURN(MATCH_NOMATCH);\n              break;\n\n              default:\n              if ((UCD_CATEGORY(fc) == ucp_Z) == notmatch)\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            }\n          break;\n\n          case PT_WORD:\n          for (i = 1; i <= Lmin; i++)\n            {\n            int category;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N ||\n                fc == CHAR_UNDERSCORE) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_CLIST:\n          for (i = 1; i <= Lmin; i++)\n            {\n            const uint32_t *cp;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            cp = PRIV(ucd_caseless_sets) + Lpropvalue;\n            for (;;)\n              {\n              if (fc < *cp)\n                {\n                if (notmatch) break;\n                RRETURN(MATCH_NOMATCH);\n                }\n              if (fc == *cp++)\n                {\n                if (notmatch) RRETURN(MATCH_NOMATCH);\n                break;\n                }\n              }\n            }\n          break;\n\n          case PT_UCNC:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n                 fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n                 fc >= 0xe000) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_BIDICL:\n          for (i = 1; i <= Lmin; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_BIDICLASS(fc) == Lpropvalue) == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          case PT_BOOL:\n          for (i = 1; i <= Lmin; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n              UCD_BPROPS_PROP(prop), Lpropvalue) != 0;\n            if (ok == notmatch)\n              RRETURN(MATCH_NOMATCH);\n            }\n          break;\n\n          /* This should not occur */\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n        }\n\n      /* Match extended Unicode sequences. We will get here only if the\n      support is in the binary; otherwise a compile-time error occurs. */\n\n      else if (Lctype == OP_EXTUNI)\n        {\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          else\n            {\n            GETCHARINCTEST(fc, Feptr);\n            Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject,\n              mb->end_subject, utf, NULL);\n            }\n          CHECK_PARTIAL();\n          }\n        }\n      else\n#endif     /* SUPPORT_UNICODE */\n\n/* Handle all other cases in UTF mode */\n\n#ifdef SUPPORT_UNICODE\n      if (utf) switch(Lctype)\n        {\n        case OP_ANY:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n          if (mb->partial != 0 &&\n              Feptr + 1 >= mb->end_subject &&\n              NLBLOCK->nltype == NLTYPE_FIXED &&\n              NLBLOCK->nllen == 2 &&\n              UCHAR21(Feptr) == NLBLOCK->nl[0])\n            {\n            mb->hitend = TRUE;\n            if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n            }\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_ALLANY:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_ANYBYTE:\n        if (Feptr > mb->end_subject - Lmin) RRETURN(MATCH_NOMATCH);\n        Feptr += Lmin;\n        break;\n\n        case OP_ANYNL:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n\n            case CHAR_CR:\n            if (Feptr < mb->end_subject && UCHAR21(Feptr) == CHAR_LF) Feptr++;\n            break;\n\n            case CHAR_LF:\n            break;\n\n            case CHAR_VT:\n            case CHAR_FF:\n            case CHAR_NEL:\n#ifndef EBCDIC\n            case 0x2028:\n            case 0x2029:\n#endif  /* Not EBCDIC */\n            if (mb->bsr_convention == PCRE2_BSR_ANYCRLF) RRETURN(MATCH_NOMATCH);\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            HSPACE_CASES: RRETURN(MATCH_NOMATCH);\n            default: break;\n            }\n          }\n        break;\n\n        case OP_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            HSPACE_CASES: break;\n            default: RRETURN(MATCH_NOMATCH);\n            }\n          }\n        break;\n\n        case OP_NOT_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            VSPACE_CASES: RRETURN(MATCH_NOMATCH);\n            default: break;\n            }\n          }\n        break;\n\n        case OP_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          switch(fc)\n            {\n            VSPACE_CASES: break;\n            default: RRETURN(MATCH_NOMATCH);\n            }\n          }\n        break;\n\n        case OP_NOT_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          GETCHARINC(fc, Feptr);\n          if (fc < 128 && (mb->ctypes[fc] & ctype_digit) != 0)\n            RRETURN(MATCH_NOMATCH);\n          }\n        break;\n\n        case OP_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc >= 128 || (mb->ctypes[cc] & ctype_digit) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          /* No need to skip more code units - we know it has only one. */\n          }\n        break;\n\n        case OP_NOT_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc < 128 && (mb->ctypes[cc] & ctype_space) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc >= 128 || (mb->ctypes[cc] & ctype_space) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          /* No need to skip more code units - we know it has only one. */\n          }\n        break;\n\n        case OP_NOT_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc < 128 && (mb->ctypes[cc] & ctype_word) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n          }\n        break;\n\n        case OP_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          uint32_t cc;\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          cc = UCHAR21(Feptr);\n          if (cc >= 128 || (mb->ctypes[cc] & ctype_word) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          /* No need to skip more code units - we know it has only one. */\n          }\n        break;\n\n        default:\n        return PCRE2_ERROR_INTERNAL;\n        }  /* End switch(Lctype) */\n\n      else\n#endif     /* SUPPORT_UNICODE */\n\n      /* Code for the non-UTF case for minimum matching of operators other\n      than OP_PROP and OP_NOTPROP. */\n\n      switch(Lctype)\n        {\n        case OP_ANY:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n          if (mb->partial != 0 &&\n              Feptr + 1 >= mb->end_subject &&\n              NLBLOCK->nltype == NLTYPE_FIXED &&\n              NLBLOCK->nllen == 2 &&\n              *Feptr == NLBLOCK->nl[0])\n            {\n            mb->hitend = TRUE;\n            if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n            }\n          Feptr++;\n          }\n        break;\n\n        case OP_ALLANY:\n        if (Feptr > mb->end_subject - Lmin)\n          {\n          SCHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        Feptr += Lmin;\n        break;\n\n        /* This OP_ANYBYTE case will never be reached because \\C gets turned\n        into OP_ALLANY in non-UTF mode. Cut out the code so that coverage\n        reports don't complain about it's never being used. */\n\n/*        case OP_ANYBYTE:\n*        if (Feptr > mb->end_subject - Lmin)\n*          {\n*          SCHECK_PARTIAL();\n*          RRETURN(MATCH_NOMATCH);\n*          }\n*        Feptr += Lmin;\n*        break;\n*/\n        case OP_ANYNL:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n\n            case CHAR_CR:\n            if (Feptr < mb->end_subject && *Feptr == CHAR_LF) Feptr++;\n            break;\n\n            case CHAR_LF:\n            break;\n\n            case CHAR_VT:\n            case CHAR_FF:\n            case CHAR_NEL:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            case 0x2028:\n            case 0x2029:\n#endif\n            if (mb->bsr_convention == PCRE2_BSR_ANYCRLF) RRETURN(MATCH_NOMATCH);\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: break;\n            HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            HSPACE_MULTIBYTE_CASES:\n#endif\n            RRETURN(MATCH_NOMATCH);\n            }\n          }\n        break;\n\n        case OP_HSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n            HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            HSPACE_MULTIBYTE_CASES:\n#endif\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            VSPACE_MULTIBYTE_CASES:\n#endif\n            RRETURN(MATCH_NOMATCH);\n            default: break;\n            }\n          }\n        break;\n\n        case OP_VSPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          switch(*Feptr++)\n            {\n            default: RRETURN(MATCH_NOMATCH);\n            VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n            VSPACE_MULTIBYTE_CASES:\n#endif\n            break;\n            }\n          }\n        break;\n\n        case OP_NOT_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_digit) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_DIGIT:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_digit) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_NOT_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_space) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_WHITESPACE:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_space) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_NOT_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_word) != 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        case OP_WORDCHAR:\n        for (i = 1; i <= Lmin; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_word) == 0)\n            RRETURN(MATCH_NOMATCH);\n          Feptr++;\n          }\n        break;\n\n        default:\n        return PCRE2_ERROR_INTERNAL;\n        }\n      }\n\n    /* If Lmin = Lmax we are done. Continue with the main loop. */\n\n    if (Lmin == Lmax) continue;\n\n    /* If minimizing, we have to test the rest of the pattern before each\n    subsequent match. This means we cannot use a local \"notmatch\" variable as\n    in the other cases. As all 4 temporary 32-bit values in the frame are\n    already in use, just test the type each time. */\n\n    if (reptype == REPTYPE_MIN)\n      {\n#ifdef SUPPORT_UNICODE\n      if (proptype >= 0)\n        {\n        switch(proptype)\n          {\n          case PT_ANY:\n          for (;;)\n            {\n            RMATCH(Fecode, RM208);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if (Lctype == OP_NOTPROP) RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_LAMP:\n          for (;;)\n            {\n            int chartype;\n            RMATCH(Fecode, RM209);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            chartype = UCD_CHARTYPE(fc);\n            if ((chartype == ucp_Lu ||\n                 chartype == ucp_Ll ||\n                 chartype == ucp_Lt) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_GC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM210);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CATEGORY(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_PC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM211);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_CHARTYPE(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_SC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM212);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_SCRIPT(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_SCX:\n          for (;;)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            RMATCH(Fecode, RM225);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = (prop->script == Lpropvalue\n                  || MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Lpropvalue) != 0);\n            if (ok == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_ALNUM:\n          for (;;)\n            {\n            int category;\n            RMATCH(Fecode, RM213);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n          which means that Perl space and POSIX space are now identical. PCRE\n          was changed at release 8.34. */\n\n          case PT_SPACE:    /* Perl space */\n          case PT_PXSPACE:  /* POSIX space */\n          for (;;)\n            {\n            RMATCH(Fecode, RM214);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            switch(fc)\n              {\n              HSPACE_CASES:\n              VSPACE_CASES:\n              if (Lctype == OP_NOTPROP) RRETURN(MATCH_NOMATCH);\n              break;\n\n              default:\n              if ((UCD_CATEGORY(fc) == ucp_Z) == (Lctype == OP_NOTPROP))\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            }\n          /* Control never gets here */\n\n          case PT_WORD:\n          for (;;)\n            {\n            int category;\n            RMATCH(Fecode, RM215);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L ||\n                 category == ucp_N ||\n                 fc == CHAR_UNDERSCORE) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_CLIST:\n          for (;;)\n            {\n            const uint32_t *cp;\n            RMATCH(Fecode, RM216);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            cp = PRIV(ucd_caseless_sets) + Lpropvalue;\n            for (;;)\n              {\n              if (fc < *cp)\n                {\n                if (Lctype == OP_NOTPROP) break;\n                RRETURN(MATCH_NOMATCH);\n                }\n              if (fc == *cp++)\n                {\n                if (Lctype == OP_NOTPROP) RRETURN(MATCH_NOMATCH);\n                break;\n                }\n              }\n            }\n          /* Control never gets here */\n\n          case PT_UCNC:\n          for (;;)\n            {\n            RMATCH(Fecode, RM217);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n                 fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n                 fc >= 0xe000) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_BIDICL:\n          for (;;)\n            {\n            RMATCH(Fecode, RM224);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            if ((UCD_BIDICLASS(fc) == Lpropvalue) == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          case PT_BOOL:\n          for (;;)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            RMATCH(Fecode, RM223);\n            if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n            if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              RRETURN(MATCH_NOMATCH);\n              }\n            GETCHARINCTEST(fc, Feptr);\n            prop = GET_UCD(fc);\n            ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n              UCD_BPROPS_PROP(prop), Lpropvalue) != 0;\n            if (ok == (Lctype == OP_NOTPROP))\n              RRETURN(MATCH_NOMATCH);\n            }\n          /* Control never gets here */\n\n          /* This should never occur */\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n        }\n\n      /* Match extended Unicode sequences. We will get here only if the\n      support is in the binary; otherwise a compile-time error occurs. */\n\n      else if (Lctype == OP_EXTUNI)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM218);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          else\n            {\n            GETCHARINCTEST(fc, Feptr);\n            Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject, mb->end_subject,\n              utf, NULL);\n            }\n          CHECK_PARTIAL();\n          }\n        }\n      else\n#endif     /* SUPPORT_UNICODE */\n\n      /* UTF mode for non-property testing character types. */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM219);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lctype == OP_ANY && IS_NEWLINE(Feptr)) RRETURN(MATCH_NOMATCH);\n          GETCHARINC(fc, Feptr);\n          switch(Lctype)\n            {\n            case OP_ANY:               /* This is the non-NL case */\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                fc == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            break;\n\n            case OP_ALLANY:\n            case OP_ANYBYTE:\n            break;\n\n            case OP_ANYNL:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n\n              case CHAR_CR:\n              if (Feptr < mb->end_subject && UCHAR21(Feptr) == CHAR_LF) Feptr++;\n              break;\n\n              case CHAR_LF:\n              break;\n\n              case CHAR_VT:\n              case CHAR_FF:\n              case CHAR_NEL:\n#ifndef EBCDIC\n              case 0x2028:\n              case 0x2029:\n#endif  /* Not EBCDIC */\n              if (mb->bsr_convention == PCRE2_BSR_ANYCRLF)\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            break;\n\n            case OP_NOT_HSPACE:\n            switch(fc)\n              {\n              HSPACE_CASES: RRETURN(MATCH_NOMATCH);\n              default: break;\n              }\n            break;\n\n            case OP_HSPACE:\n            switch(fc)\n              {\n              HSPACE_CASES: break;\n              default: RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_NOT_VSPACE:\n            switch(fc)\n              {\n              VSPACE_CASES: RRETURN(MATCH_NOMATCH);\n              default: break;\n              }\n            break;\n\n            case OP_VSPACE:\n            switch(fc)\n              {\n              VSPACE_CASES: break;\n              default: RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_NOT_DIGIT:\n            if (fc < 256 && (mb->ctypes[fc] & ctype_digit) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_DIGIT:\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_digit) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WHITESPACE:\n            if (fc < 256 && (mb->ctypes[fc] & ctype_space) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WHITESPACE:\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_space) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WORDCHAR:\n            if (fc < 256 && (mb->ctypes[fc] & ctype_word) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WORDCHAR:\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_word) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            default:\n            return PCRE2_ERROR_INTERNAL;\n            }\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n\n      /* Not UTF mode */\n        {\n        for (;;)\n          {\n          RMATCH(Fecode, RM33);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            RRETURN(MATCH_NOMATCH);\n            }\n          if (Lctype == OP_ANY && IS_NEWLINE(Feptr))\n            RRETURN(MATCH_NOMATCH);\n          fc = *Feptr++;\n          switch(Lctype)\n            {\n            case OP_ANY:               /* This is the non-NL case */\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                fc == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            break;\n\n            case OP_ALLANY:\n            case OP_ANYBYTE:\n            break;\n\n            case OP_ANYNL:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n\n              case CHAR_CR:\n              if (Feptr < mb->end_subject && *Feptr == CHAR_LF) Feptr++;\n              break;\n\n              case CHAR_LF:\n              break;\n\n              case CHAR_VT:\n              case CHAR_FF:\n              case CHAR_NEL:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              case 0x2028:\n              case 0x2029:\n#endif\n              if (mb->bsr_convention == PCRE2_BSR_ANYCRLF)\n                RRETURN(MATCH_NOMATCH);\n              break;\n              }\n            break;\n\n            case OP_NOT_HSPACE:\n            switch(fc)\n              {\n              default: break;\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_HSPACE:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              break;\n              }\n            break;\n\n            case OP_NOT_VSPACE:\n            switch(fc)\n              {\n              default: break;\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              RRETURN(MATCH_NOMATCH);\n              }\n            break;\n\n            case OP_VSPACE:\n            switch(fc)\n              {\n              default: RRETURN(MATCH_NOMATCH);\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              break;\n              }\n            break;\n\n            case OP_NOT_DIGIT:\n            if (MAX_255(fc) && (mb->ctypes[fc] & ctype_digit) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_DIGIT:\n            if (!MAX_255(fc) || (mb->ctypes[fc] & ctype_digit) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WHITESPACE:\n            if (MAX_255(fc) && (mb->ctypes[fc] & ctype_space) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WHITESPACE:\n            if (!MAX_255(fc) || (mb->ctypes[fc] & ctype_space) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_NOT_WORDCHAR:\n            if (MAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            case OP_WORDCHAR:\n            if (!MAX_255(fc) || (mb->ctypes[fc] & ctype_word) == 0)\n              RRETURN(MATCH_NOMATCH);\n            break;\n\n            default:\n            return PCRE2_ERROR_INTERNAL;\n            }\n          }\n        }\n      /* Control never gets here */\n      }\n\n    /* If maximizing, it is worth using inline code for speed, doing the type\n    test once at the start (i.e. keep it out of the loops). Once again,\n    \"notmatch\" can be an ordinary local variable because the loops do not call\n    RMATCH. */\n\n    else\n      {\n      Lstart_eptr = Feptr;  /* Remember where we started */\n\n#ifdef SUPPORT_UNICODE\n      if (proptype >= 0)\n        {\n        BOOL notmatch = Lctype == OP_NOTPROP;\n        switch(proptype)\n          {\n          case PT_ANY:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if (notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_LAMP:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int chartype;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            chartype = UCD_CHARTYPE(fc);\n            if ((chartype == ucp_Lu ||\n                 chartype == ucp_Ll ||\n                 chartype == ucp_Lt) == notmatch)\n              break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_GC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_CATEGORY(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_PC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_CHARTYPE(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_SC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_SCRIPT(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_SCX:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            prop = GET_UCD(fc);\n            ok = (prop->script == Lpropvalue ||\n                  MAPBIT(PRIV(ucd_script_sets) + UCD_SCRIPTX_PROP(prop), Lpropvalue) != 0);\n            if (ok == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_ALNUM:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int category;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N) == notmatch)\n              break;\n            Feptr+= len;\n            }\n          break;\n\n          /* Perl space used to exclude VT, but from Perl 5.18 it is included,\n          which means that Perl space and POSIX space are now identical. PCRE\n          was changed at release 8.34. */\n\n          case PT_SPACE:    /* Perl space */\n          case PT_PXSPACE:  /* POSIX space */\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            switch(fc)\n              {\n              HSPACE_CASES:\n              VSPACE_CASES:\n              if (notmatch) goto ENDLOOP99;  /* Break the loop */\n              break;\n\n              default:\n              if ((UCD_CATEGORY(fc) == ucp_Z) == notmatch)\n                goto ENDLOOP99;   /* Break the loop */\n              break;\n              }\n            Feptr+= len;\n            }\n          ENDLOOP99:\n          break;\n\n          case PT_WORD:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int category;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            category = UCD_CATEGORY(fc);\n            if ((category == ucp_L || category == ucp_N ||\n                 fc == CHAR_UNDERSCORE) == notmatch)\n              break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_CLIST:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            const uint32_t *cp;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            cp = PRIV(ucd_caseless_sets) + Lpropvalue;\n            for (;;)\n              {\n              if (fc < *cp)\n                { if (notmatch) break; else goto GOT_MAX; }\n              if (fc == *cp++)\n                { if (notmatch) goto GOT_MAX; else break; }\n              }\n            Feptr += len;\n            }\n          GOT_MAX:\n          break;\n\n          case PT_UCNC:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((fc == CHAR_DOLLAR_SIGN || fc == CHAR_COMMERCIAL_AT ||\n                 fc == CHAR_GRAVE_ACCENT || (fc >= 0xa0 && fc <= 0xd7ff) ||\n                 fc >= 0xe000) == notmatch)\n              break;\n            Feptr += len;\n            }\n          break;\n\n          case PT_BIDICL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            if ((UCD_BIDICLASS(fc) == Lpropvalue) == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          case PT_BOOL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL ok;\n            const ucd_record *prop;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLENTEST(fc, Feptr, len);\n            prop = GET_UCD(fc);\n            ok = MAPBIT(PRIV(ucd_boolprop_sets) +\n              UCD_BPROPS_PROP(prop), Lpropvalue) != 0;\n            if (ok == notmatch) break;\n            Feptr+= len;\n            }\n          break;\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n\n        /* Feptr is now past the end of the maximum run */\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n        Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't\n        go too far. */\n\n        for(;;)\n          {\n          if (Feptr <= Lstart_eptr) break;\n          RMATCH(Fecode, RM222);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr--;\n          if (utf) BACKCHAR(Feptr);\n          }\n        }\n\n      /* Match extended Unicode grapheme clusters. We will get here only if the\n      support is in the binary; otherwise a compile-time error occurs. */\n\n      else if (Lctype == OP_EXTUNI)\n        {\n        for (i = Lmin; i < Lmax; i++)\n          {\n          if (Feptr >= mb->end_subject)\n            {\n            SCHECK_PARTIAL();\n            break;\n            }\n          else\n            {\n            GETCHARINCTEST(fc, Feptr);\n            Feptr = PRIV(extuni)(fc, Feptr, mb->start_subject, mb->end_subject,\n              utf, NULL);\n            }\n          CHECK_PARTIAL();\n          }\n\n        /* Feptr is now past the end of the maximum run */\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* We use <= Lstart_eptr rather than == Lstart_eptr to detect the start\n        of the run while backtracking because the use of \\C in UTF mode can\n        cause BACKCHAR to move back past Lstart_eptr. This is just palliative;\n        the use of \\C in UTF mode is fraught with danger. */\n\n        for(;;)\n          {\n          int lgb, rgb;\n          PCRE2_SPTR fptr;\n\n          if (Feptr <= Lstart_eptr) break;   /* At start of char run */\n          RMATCH(Fecode, RM220);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n\n          /* Backtracking over an extended grapheme cluster involves inspecting\n          the previous two characters (if present) to see if a break is\n          permitted between them. */\n\n          Feptr--;\n          if (!utf) fc = *Feptr; else\n            {\n            BACKCHAR(Feptr);\n            GETCHAR(fc, Feptr);\n            }\n          rgb = UCD_GRAPHBREAK(fc);\n\n          for (;;)\n            {\n            if (Feptr <= Lstart_eptr) break;   /* At start of char run */\n            fptr = Feptr - 1;\n            if (!utf) fc = *fptr; else\n              {\n              BACKCHAR(fptr);\n              GETCHAR(fc, fptr);\n              }\n            lgb = UCD_GRAPHBREAK(fc);\n            if ((PRIV(ucp_gbtable)[lgb] & (1u << rgb)) == 0) break;\n            Feptr = fptr;\n            rgb = lgb;\n            }\n          }\n        }\n\n      else\n#endif   /* SUPPORT_UNICODE */\n\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        switch(Lctype)\n          {\n          case OP_ANY:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (IS_NEWLINE(Feptr)) break;\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr + 1 >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                UCHAR21(Feptr) == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            Feptr++;\n            ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n            }\n          break;\n\n          case OP_ALLANY:\n          if (Lmax < UINT32_MAX)\n            {\n            for (i = Lmin; i < Lmax; i++)\n              {\n              if (Feptr >= mb->end_subject)\n                {\n                SCHECK_PARTIAL();\n                break;\n                }\n              Feptr++;\n              ACROSSCHAR(Feptr < mb->end_subject, Feptr, Feptr++);\n              }\n            }\n          else\n            {\n            Feptr = mb->end_subject;   /* Unlimited UTF-8 repeat */\n            SCHECK_PARTIAL();\n            }\n          break;\n\n          /* The \"byte\" (i.e. \"code unit\") case is the same as non-UTF */\n\n          case OP_ANYBYTE:\n          fc = Lmax - Lmin;\n          if (fc > (uint32_t)(mb->end_subject - Feptr))\n            {\n            Feptr = mb->end_subject;\n            SCHECK_PARTIAL();\n            }\n          else Feptr += fc;\n          break;\n\n          case OP_ANYNL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc == CHAR_CR)\n              {\n              if (++Feptr >= mb->end_subject) break;\n              if (UCHAR21(Feptr) == CHAR_LF) Feptr++;\n              }\n            else\n              {\n              if (fc != CHAR_LF &&\n                  (mb->bsr_convention == PCRE2_BSR_ANYCRLF ||\n                   (fc != CHAR_VT && fc != CHAR_FF && fc != CHAR_NEL\n#ifndef EBCDIC\n                    && fc != 0x2028 && fc != 0x2029\n#endif  /* Not EBCDIC */\n                    )))\n                break;\n              Feptr += len;\n              }\n            }\n          break;\n\n          case OP_NOT_HSPACE:\n          case OP_HSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL gotspace;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            switch(fc)\n              {\n              HSPACE_CASES: gotspace = TRUE; break;\n              default: gotspace = FALSE; break;\n              }\n            if (gotspace == (Lctype == OP_NOT_HSPACE)) break;\n            Feptr += len;\n            }\n          break;\n\n          case OP_NOT_VSPACE:\n          case OP_VSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            BOOL gotspace;\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            switch(fc)\n              {\n              VSPACE_CASES: gotspace = TRUE; break;\n              default: gotspace = FALSE; break;\n              }\n            if (gotspace == (Lctype == OP_NOT_VSPACE)) break;\n            Feptr += len;\n            }\n          break;\n\n          case OP_NOT_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc < 256 && (mb->ctypes[fc] & ctype_digit) != 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc >= 256 ||(mb->ctypes[fc] & ctype_digit) == 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_NOT_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc < 256 && (mb->ctypes[fc] & ctype_space) != 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc >= 256 ||(mb->ctypes[fc] & ctype_space) == 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_NOT_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc < 256 && (mb->ctypes[fc] & ctype_word) != 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          case OP_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            int len = 1;\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            GETCHARLEN(fc, Feptr, len);\n            if (fc >= 256 || (mb->ctypes[fc] & ctype_word) == 0) break;\n            Feptr+= len;\n            }\n          break;\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        /* After \\C in UTF mode, Lstart_eptr might be in the middle of a\n        Unicode character. Use <= Lstart_eptr to ensure backtracking doesn't go\n        too far. */\n\n        for(;;)\n          {\n          if (Feptr <= Lstart_eptr) break;\n          RMATCH(Fecode, RM221);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr--;\n          BACKCHAR(Feptr);\n          if (Lctype == OP_ANYNL && Feptr > Lstart_eptr &&\n              UCHAR21(Feptr) == CHAR_NL && UCHAR21(Feptr - 1) == CHAR_CR)\n            Feptr--;\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n\n      /* Not UTF mode */\n        {\n        switch(Lctype)\n          {\n          case OP_ANY:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (IS_NEWLINE(Feptr)) break;\n            if (mb->partial != 0 &&    /* Take care with CRLF partial */\n                Feptr + 1 >= mb->end_subject &&\n                NLBLOCK->nltype == NLTYPE_FIXED &&\n                NLBLOCK->nllen == 2 &&\n                *Feptr == NLBLOCK->nl[0])\n              {\n              mb->hitend = TRUE;\n              if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n              }\n            Feptr++;\n            }\n          break;\n\n          case OP_ALLANY:\n          case OP_ANYBYTE:\n          fc = Lmax - Lmin;\n          if (fc > (uint32_t)(mb->end_subject - Feptr))\n            {\n            Feptr = mb->end_subject;\n            SCHECK_PARTIAL();\n            }\n          else Feptr += fc;\n          break;\n\n          case OP_ANYNL:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            fc = *Feptr;\n            if (fc == CHAR_CR)\n              {\n              if (++Feptr >= mb->end_subject) break;\n              if (*Feptr == CHAR_LF) Feptr++;\n              }\n            else\n              {\n              if (fc != CHAR_LF && (mb->bsr_convention == PCRE2_BSR_ANYCRLF ||\n                 (fc != CHAR_VT && fc != CHAR_FF && fc != CHAR_NEL\n#if PCRE2_CODE_UNIT_WIDTH != 8\n                 && fc != 0x2028 && fc != 0x2029\n#endif\n                 ))) break;\n              Feptr++;\n              }\n            }\n          break;\n\n          case OP_NOT_HSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: Feptr++; break;\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              goto ENDLOOP00;\n              }\n            }\n          ENDLOOP00:\n          break;\n\n          case OP_HSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: goto ENDLOOP01;\n              HSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              HSPACE_MULTIBYTE_CASES:\n#endif\n              Feptr++; break;\n              }\n            }\n          ENDLOOP01:\n          break;\n\n          case OP_NOT_VSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: Feptr++; break;\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              goto ENDLOOP02;\n              }\n            }\n          ENDLOOP02:\n          break;\n\n          case OP_VSPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            switch(*Feptr)\n              {\n              default: goto ENDLOOP03;\n              VSPACE_BYTE_CASES:\n#if PCRE2_CODE_UNIT_WIDTH != 8\n              VSPACE_MULTIBYTE_CASES:\n#endif\n              Feptr++; break;\n              }\n            }\n          ENDLOOP03:\n          break;\n\n          case OP_NOT_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_digit) != 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_DIGIT:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_digit) == 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_NOT_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_space) != 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_WHITESPACE:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_space) == 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_NOT_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (MAX_255(*Feptr) && (mb->ctypes[*Feptr] & ctype_word) != 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          case OP_WORDCHAR:\n          for (i = Lmin; i < Lmax; i++)\n            {\n            if (Feptr >= mb->end_subject)\n              {\n              SCHECK_PARTIAL();\n              break;\n              }\n            if (!MAX_255(*Feptr) || (mb->ctypes[*Feptr] & ctype_word) == 0)\n              break;\n            Feptr++;\n            }\n          break;\n\n          default:\n          return PCRE2_ERROR_INTERNAL;\n          }\n\n        if (reptype == REPTYPE_POS) continue;    /* No backtracking */\n\n        for (;;)\n          {\n          if (Feptr == Lstart_eptr) break;\n          RMATCH(Fecode, RM34);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr--;\n          if (Lctype == OP_ANYNL && Feptr > Lstart_eptr && *Feptr == CHAR_LF &&\n              Feptr[-1] == CHAR_CR) Feptr--;\n          }\n        }\n      }\n    break;  /* End of repeat character type processing */\n\n#undef Lstart_eptr\n#undef Lmin\n#undef Lmax\n#undef Lctype\n#undef Lpropvalue\n\n\n    /* ===================================================================== */\n    /* Match a back reference, possibly repeatedly. Look past the end of the\n    item to see if there is repeat information following. The OP_REF and\n    OP_REFI opcodes are used for a reference to a numbered group or to a\n    non-duplicated named group. For a duplicated named group, OP_DNREF and\n    OP_DNREFI are used. In this case we must scan the list of groups to which\n    the name refers, and use the first one that is set. */\n\n#define Lmin      F->temp_32[0]\n#define Lmax      F->temp_32[1]\n#define Lcaseless F->temp_32[2]\n#define Lstart    F->temp_sptr[0]\n#define Loffset   F->temp_size\n\n    case OP_DNREF:\n    case OP_DNREFI:\n    Lcaseless = (Fop == OP_DNREFI);\n      {\n      int count = GET2(Fecode, 1+IMM2_SIZE);\n      PCRE2_SPTR slot = mb->name_table + GET2(Fecode, 1) * mb->name_entry_size;\n      Fecode += 1 + 2*IMM2_SIZE;\n\n      while (count-- > 0)\n        {\n        Loffset = (GET2(slot, 0) << 1) - 2;\n        if (Loffset < Foffset_top && Fovector[Loffset] != PCRE2_UNSET) break;\n        slot += mb->name_entry_size;\n        }\n      }\n    goto REF_REPEAT;\n\n    case OP_REF:\n    case OP_REFI:\n    Lcaseless = (Fop == OP_REFI);\n    Loffset = (GET2(Fecode, 1) << 1) - 2;\n    Fecode += 1 + IMM2_SIZE;\n\n    /* Set up for repetition, or handle the non-repeated case. The maximum and\n    minimum must be in the heap frame, but as they are short-term values, we\n    use temporary fields. */\n\n    REF_REPEAT:\n    switch (*Fecode)\n      {\n      case OP_CRSTAR:\n      case OP_CRMINSTAR:\n      case OP_CRPLUS:\n      case OP_CRMINPLUS:\n      case OP_CRQUERY:\n      case OP_CRMINQUERY:\n      fc = *Fecode++ - OP_CRSTAR;\n      Lmin = rep_min[fc];\n      Lmax = rep_max[fc];\n      reptype = rep_typ[fc];\n      break;\n\n      case OP_CRRANGE:\n      case OP_CRMINRANGE:\n      Lmin = GET2(Fecode, 1);\n      Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n      reptype = rep_typ[*Fecode - OP_CRSTAR];\n      if (Lmax == 0) Lmax = UINT32_MAX;  /* Max 0 => infinity */\n      Fecode += 1 + 2 * IMM2_SIZE;\n      break;\n\n      default:                  /* No repeat follows */\n        {\n        rrc = match_ref(Loffset, Lcaseless, F, mb, &length);\n        if (rrc != 0)\n          {\n          if (rrc > 0) Feptr = mb->end_subject;   /* Partial match */\n          CHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        }\n      Feptr += length;\n      continue;              /* With the main loop */\n      }\n\n    /* Handle repeated back references. If a set group has length zero, just\n    continue with the main loop, because it matches however many times. For an\n    unset reference, if the minimum is zero, we can also just continue. We can\n    also continue if PCRE2_MATCH_UNSET_BACKREF is set, because this makes unset\n    group behave as a zero-length group. For any other unset cases, carrying\n    on will result in NOMATCH. */\n\n    if (Loffset < Foffset_top && Fovector[Loffset] != PCRE2_UNSET)\n      {\n      if (Fovector[Loffset] == Fovector[Loffset + 1]) continue;\n      }\n    else  /* Group is not set */\n      {\n      if (Lmin == 0 || (mb->poptions & PCRE2_MATCH_UNSET_BACKREF) != 0)\n        continue;\n      }\n\n    /* First, ensure the minimum number of matches are present. */\n\n    for (i = 1; i <= Lmin; i++)\n      {\n      PCRE2_SIZE slength;\n      rrc = match_ref(Loffset, Lcaseless, F, mb, &slength);\n      if (rrc != 0)\n        {\n        if (rrc > 0) Feptr = mb->end_subject;   /* Partial match */\n        CHECK_PARTIAL();\n        RRETURN(MATCH_NOMATCH);\n        }\n      Feptr += slength;\n      }\n\n    /* If min = max, we are done. They are not both allowed to be zero. */\n\n    if (Lmin == Lmax) continue;\n\n    /* If minimizing, keep trying and advancing the pointer. */\n\n    if (reptype == REPTYPE_MIN)\n      {\n      for (;;)\n        {\n        PCRE2_SIZE slength;\n        RMATCH(Fecode, RM20);\n        if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n        if (Lmin++ >= Lmax) RRETURN(MATCH_NOMATCH);\n        rrc = match_ref(Loffset, Lcaseless, F, mb, &slength);\n        if (rrc != 0)\n          {\n          if (rrc > 0) Feptr = mb->end_subject;   /* Partial match */\n          CHECK_PARTIAL();\n          RRETURN(MATCH_NOMATCH);\n          }\n        Feptr += slength;\n        }\n      /* Control never gets here */\n      }\n\n    /* If maximizing, find the longest string and work backwards, as long as\n    the matched lengths for each iteration are the same. */\n\n    else\n      {\n      BOOL samelengths = TRUE;\n      Lstart = Feptr;     /* Starting position */\n      Flength = Fovector[Loffset+1] - Fovector[Loffset];\n\n      for (i = Lmin; i < Lmax; i++)\n        {\n        PCRE2_SIZE slength;\n        rrc = match_ref(Loffset, Lcaseless, F, mb, &slength);\n        if (rrc != 0)\n          {\n          /* Can't use CHECK_PARTIAL because we don't want to update Feptr in\n          the soft partial matching case. */\n\n          if (rrc > 0 && mb->partial != 0 &&\n              mb->end_subject > mb->start_used_ptr)\n            {\n            mb->hitend = TRUE;\n            if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n            }\n          break;\n          }\n\n        if (slength != Flength) samelengths = FALSE;\n        Feptr += slength;\n        }\n\n      /* If the length matched for each repetition is the same as the length of\n      the captured group, we can easily work backwards. This is the normal\n      case. However, in caseless UTF-8 mode there are pairs of case-equivalent\n      characters whose lengths (in terms of code units) differ. However, this\n      is very rare, so we handle it by re-matching fewer and fewer times. */\n\n      if (samelengths)\n        {\n        while (Feptr >= Lstart)\n          {\n          RMATCH(Fecode, RM21);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          Feptr -= Flength;\n          }\n        }\n\n      /* The rare case of non-matching lengths. Re-scan the repetition for each\n      iteration. We know that match_ref() will succeed every time. */\n\n      else\n        {\n        Lmax = i;\n        for (;;)\n          {\n          RMATCH(Fecode, RM22);\n          if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n          if (Feptr == Lstart) break; /* Failed after minimal repetition */\n          Feptr = Lstart;\n          Lmax--;\n          for (i = Lmin; i < Lmax; i++)\n            {\n            PCRE2_SIZE slength;\n            (void)match_ref(Loffset, Lcaseless, F, mb, &slength);\n            Feptr += slength;\n            }\n          }\n        }\n\n      RRETURN(MATCH_NOMATCH);\n      }\n    /* Control never gets here */\n\n#undef Lcaseless\n#undef Lmin\n#undef Lmax\n#undef Lstart\n#undef Loffset\n\n\n\n/* ========================================================================= */\n/*           Opcodes for the start of various parenthesized items            */\n/* ========================================================================= */\n\n    /* In all cases, if the result of RMATCH() is MATCH_THEN, check whether the\n    (*THEN) is within the current branch by comparing the address of OP_THEN\n    that is passed back with the end of the branch. If (*THEN) is within the\n    current branch, and the branch is one of two or more alternatives (it\n    either starts or ends with OP_ALT), we have reached the limit of THEN's\n    action, so convert the return code to NOMATCH, which will cause normal\n    backtracking to happen from now on. Otherwise, THEN is passed back to an\n    outer alternative. This implements Perl's treatment of parenthesized\n    groups, where a group not containing | does not affect the current\n    alternative, that is, (X) is NOT the same as (X|(*F)). */\n\n\n    /* ===================================================================== */\n    /* BRAZERO, BRAMINZERO and SKIPZERO occur just before a non-possessive\n    bracket group, indicating that it may occur zero times. It may repeat\n    infinitely, or not at all - i.e. it could be ()* or ()? or even (){0} in\n    the pattern. Brackets with fixed upper repeat limits are compiled as a\n    number of copies, with the optional ones preceded by BRAZERO or BRAMINZERO.\n    Possessive groups with possible zero repeats are preceded by BRAPOSZERO. */\n\n#define Lnext_ecode F->temp_sptr[0]\n\n    case OP_BRAZERO:\n    Lnext_ecode = Fecode + 1;\n    RMATCH(Lnext_ecode, RM9);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    do Lnext_ecode += GET(Lnext_ecode, 1); while (*Lnext_ecode == OP_ALT);\n    Fecode = Lnext_ecode + 1 + LINK_SIZE;\n    break;\n\n    case OP_BRAMINZERO:\n    Lnext_ecode = Fecode + 1;\n    do Lnext_ecode += GET(Lnext_ecode, 1); while (*Lnext_ecode == OP_ALT);\n    RMATCH(Lnext_ecode + 1 + LINK_SIZE, RM10);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    Fecode++;\n    break;\n\n#undef Lnext_ecode\n\n    case OP_SKIPZERO:\n    Fecode++;\n    do Fecode += GET(Fecode,1); while (*Fecode == OP_ALT);\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n\n    /* ===================================================================== */\n    /* Handle possessive brackets with an unlimited repeat. The end of these\n    brackets will always be OP_KETRPOS, which returns MATCH_KETRPOS without\n    going further in the pattern. */\n\n#define Lframe_type    F->temp_32[0]\n#define Lmatched_once  F->temp_32[1]\n#define Lzero_allowed  F->temp_32[2]\n#define Lstart_eptr    F->temp_sptr[0]\n#define Lstart_group   F->temp_sptr[1]\n\n    case OP_BRAPOSZERO:\n    Lzero_allowed = TRUE;                /* Zero repeat is allowed */\n    Fecode += 1;\n    if (*Fecode == OP_CBRAPOS || *Fecode == OP_SCBRAPOS)\n      goto POSSESSIVE_CAPTURE;\n    goto POSSESSIVE_NON_CAPTURE;\n\n    case OP_BRAPOS:\n    case OP_SBRAPOS:\n    Lzero_allowed = FALSE;               /* Zero repeat not allowed */\n\n    POSSESSIVE_NON_CAPTURE:\n    Lframe_type = GF_NOCAPTURE;          /* Remembered frame type */\n    goto POSSESSIVE_GROUP;\n\n    case OP_CBRAPOS:\n    case OP_SCBRAPOS:\n    Lzero_allowed = FALSE;               /* Zero repeat not allowed */\n\n    POSSESSIVE_CAPTURE:\n    number = GET2(Fecode, 1+LINK_SIZE);\n    Lframe_type = GF_CAPTURE | number;   /* Remembered frame type */\n\n    POSSESSIVE_GROUP:\n    Lmatched_once = FALSE;               /* Never matched */\n    Lstart_group = Fecode;               /* Start of this group */\n\n    for (;;)\n      {\n      Lstart_eptr = Feptr;               /* Position at group start */\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM8);\n      if (rrc == MATCH_KETRPOS)\n        {\n        Lmatched_once = TRUE;            /* Matched at least once */\n        if (Feptr == Lstart_eptr)        /* Empty match; skip to end */\n          {\n          do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n          break;\n          }\n\n        Fecode = Lstart_group;\n        continue;\n        }\n\n      /* See comment above about handling THEN. */\n\n      if (rrc == MATCH_THEN)\n        {\n        PCRE2_SPTR next_ecode = Fecode + GET(Fecode,1);\n        if (mb->verb_ecode_ptr < next_ecode &&\n            (*Fecode == OP_ALT || *next_ecode == OP_ALT))\n          rrc = MATCH_NOMATCH;\n        }\n\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Fecode += GET(Fecode, 1);\n      if (*Fecode != OP_ALT) break;\n      }\n\n    /* Success if matched something or zero repeat allowed */\n\n    if (Lmatched_once || Lzero_allowed)\n      {\n      Fecode += 1 + LINK_SIZE;\n      break;\n      }\n\n    RRETURN(MATCH_NOMATCH);\n\n#undef Lmatched_once\n#undef Lzero_allowed\n#undef Lframe_type\n#undef Lstart_eptr\n#undef Lstart_group\n\n\n    /* ===================================================================== */\n    /* Handle non-capturing brackets that cannot match an empty string. When we\n    get to the final alternative within the brackets, as long as there are no\n    THEN's in the pattern, we can optimize by not recording a new backtracking\n    point. (Ideally we should test for a THEN within this group, but we don't\n    have that information.) Don't do this if we are at the very top level,\n    however, because that would make handling assertions and once-only brackets\n    messier when there is nothing to go back to. */\n\n#define Lframe_type F->temp_32[0]     /* Set for all that use GROUPLOOP */\n#define Lnext_branch F->temp_sptr[0]  /* Used only in OP_BRA handling */\n\n    case OP_BRA:\n    if (mb->hasthen || Frdepth == 0)\n      {\n      Lframe_type = 0;\n      goto GROUPLOOP;\n      }\n\n    for (;;)\n      {\n      Lnext_branch = Fecode + GET(Fecode, 1);\n      if (*Lnext_branch != OP_ALT) break;\n\n      /* This is never the final branch. We do not need to test for MATCH_THEN\n      here because this code is not used when there is a THEN in the pattern. */\n\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM1);\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Fecode = Lnext_branch;\n      }\n\n    /* Hit the start of the final branch. Continue at this level. */\n\n    Fecode += PRIV(OP_lengths)[*Fecode];\n    break;\n\n#undef Lnext_branch\n\n\n    /* ===================================================================== */\n    /* Handle a capturing bracket, other than those that are possessive with an\n    unlimited repeat. */\n\n    case OP_CBRA:\n    case OP_SCBRA:\n    Lframe_type = GF_CAPTURE | GET2(Fecode, 1+LINK_SIZE);\n    goto GROUPLOOP;\n\n\n    /* ===================================================================== */\n    /* Atomic groups and non-capturing brackets that can match an empty string\n    must record a backtracking point and also set up a chained frame. */\n\n    case OP_ONCE:\n    case OP_SCRIPT_RUN:\n    case OP_SBRA:\n    Lframe_type = GF_NOCAPTURE | Fop;\n\n    GROUPLOOP:\n    for (;;)\n      {\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM2);\n      if (rrc == MATCH_THEN)\n        {\n        PCRE2_SPTR next_ecode = Fecode + GET(Fecode,1);\n        if (mb->verb_ecode_ptr < next_ecode &&\n            (*Fecode == OP_ALT || *next_ecode == OP_ALT))\n          rrc = MATCH_NOMATCH;\n        }\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Fecode += GET(Fecode, 1);\n      if (*Fecode != OP_ALT) RRETURN(MATCH_NOMATCH);\n      }\n    /* Control never reaches here. */\n\n#undef Lframe_type\n\n\n    /* ===================================================================== */\n    /* Recursion either matches the current regex, or some subexpression. The\n    offset data is the offset to the starting bracket from the start of the\n    whole pattern. (This is so that it works from duplicated subpatterns.) */\n\n#define Lframe_type F->temp_32[0]\n#define Lstart_branch F->temp_sptr[0]\n\n    case OP_RECURSE:\n    bracode = mb->start_code + GET(Fecode, 1);\n    number = (bracode == mb->start_code)? 0 : GET2(bracode, 1 + LINK_SIZE);\n\n    /* If we are already in a recursion, check for repeating the same one\n    without advancing the subject pointer. This should catch convoluted mutual\n    recursions. (Some simple cases are caught at compile time.) */\n\n    if (Fcurrent_recurse != RECURSE_UNSET)\n      {\n      offset = Flast_group_offset;\n      while (offset != PCRE2_UNSET)\n        {\n        N = (heapframe *)((char *)match_data->heapframes + offset);\n        P = (heapframe *)((char *)N - frame_size);\n        if (N->group_frame_type == (GF_RECURSE | number))\n          {\n          if (Feptr == P->eptr) return PCRE2_ERROR_RECURSELOOP;\n          break;\n          }\n        offset = P->last_group_offset;\n        }\n      }\n\n    /* Now run the recursion, branch by branch. */\n\n    Lstart_branch = bracode;\n    Lframe_type = GF_RECURSE | number;\n\n    for (;;)\n      {\n      PCRE2_SPTR next_ecode;\n\n      group_frame_type = Lframe_type;\n      RMATCH(Lstart_branch + PRIV(OP_lengths)[*Lstart_branch], RM11);\n      next_ecode = Lstart_branch + GET(Lstart_branch,1);\n\n      /* Handle backtracking verbs, which are defined in a range that can\n      easily be tested for. PCRE does not allow THEN, SKIP, PRUNE or COMMIT to\n      escape beyond a recursion; they cause a NOMATCH for the entire recursion.\n\n      When one of these verbs triggers, the current recursion group number is\n      recorded. If it matches the recursion we are processing, the verb\n      happened within the recursion and we must deal with it. Otherwise it must\n      have happened after the recursion completed, and so has to be passed\n      back. See comment above about handling THEN. */\n\n      if (rrc >= MATCH_BACKTRACK_MIN && rrc <= MATCH_BACKTRACK_MAX &&\n          mb->verb_current_recurse == (Lframe_type ^ GF_RECURSE))\n        {\n        if (rrc == MATCH_THEN && mb->verb_ecode_ptr < next_ecode &&\n            (*Lstart_branch == OP_ALT || *next_ecode == OP_ALT))\n          rrc = MATCH_NOMATCH;\n        else RRETURN(MATCH_NOMATCH);\n        }\n\n      /* Note that carrying on after (*ACCEPT) in a recursion is handled in the\n      OP_ACCEPT code. Nothing needs to be done here. */\n\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      Lstart_branch = next_ecode;\n      if (*Lstart_branch != OP_ALT) RRETURN(MATCH_NOMATCH);\n      }\n    /* Control never reaches here. */\n\n#undef Lframe_type\n#undef Lstart_branch\n\n\n    /* ===================================================================== */\n    /* Positive assertions are like other groups except that PCRE doesn't allow\n    the effect of (*THEN) to escape beyond an assertion; it is therefore\n    treated as NOMATCH. (*ACCEPT) is treated as successful assertion, with its\n    captures and mark retained. Any other return is an error. */\n\n#define Lframe_type  F->temp_32[0]\n\n    case OP_ASSERT:\n    case OP_ASSERTBACK:\n    case OP_ASSERT_NA:\n    case OP_ASSERTBACK_NA:\n    Lframe_type = GF_NOCAPTURE | Fop;\n    for (;;)\n      {\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM3);\n      if (rrc == MATCH_ACCEPT)\n        {\n        memcpy(Fovector,\n              (char *)assert_accept_frame + offsetof(heapframe, ovector),\n              assert_accept_frame->offset_top * sizeof(PCRE2_SIZE));\n        Foffset_top = assert_accept_frame->offset_top;\n        Fmark = assert_accept_frame->mark;\n        break;\n        }\n      if (rrc != MATCH_NOMATCH && rrc != MATCH_THEN) RRETURN(rrc);\n      Fecode += GET(Fecode, 1);\n      if (*Fecode != OP_ALT) RRETURN(MATCH_NOMATCH);\n      }\n\n    do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n#undef Lframe_type\n\n\n    /* ===================================================================== */\n    /* Handle negative assertions. Loop for each non-matching branch as for\n    positive assertions. */\n\n#define Lframe_type  F->temp_32[0]\n\n    case OP_ASSERT_NOT:\n    case OP_ASSERTBACK_NOT:\n    Lframe_type  = GF_NOCAPTURE | Fop;\n\n    for (;;)\n      {\n      group_frame_type = Lframe_type;\n      RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM4);\n      switch(rrc)\n        {\n        case MATCH_ACCEPT:   /* Assertion matched, therefore it fails. */\n        case MATCH_MATCH:\n        RRETURN (MATCH_NOMATCH);\n\n        case MATCH_NOMATCH:  /* Branch failed, try next if present. */\n        case MATCH_THEN:\n        Fecode += GET(Fecode, 1);\n        if (*Fecode != OP_ALT) goto ASSERT_NOT_FAILED;\n        break;\n\n        case MATCH_COMMIT:   /* Assertion forced to fail, therefore continue. */\n        case MATCH_SKIP:\n        case MATCH_PRUNE:\n        do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n        goto ASSERT_NOT_FAILED;\n\n        default:             /* Pass back any other return */\n        RRETURN(rrc);\n        }\n      }\n\n    /* None of the branches have matched or there was a backtrack to (*COMMIT),\n    (*SKIP), (*PRUNE), or (*THEN) in the last branch. This is success for a\n    negative assertion, so carry on. */\n\n    ASSERT_NOT_FAILED:\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n#undef Lframe_type\n\n\n    /* ===================================================================== */\n    /* The callout item calls an external function, if one is provided, passing\n    details of the match so far. This is mainly for debugging, though the\n    function is able to force a failure. */\n\n    case OP_CALLOUT:\n    case OP_CALLOUT_STR:\n    rrc = do_callout(F, mb, &length);\n    if (rrc > 0) RRETURN(MATCH_NOMATCH);\n    if (rrc < 0) RRETURN(rrc);\n    Fecode += length;\n    break;\n\n\n    /* ===================================================================== */\n    /* Conditional group: compilation checked that there are no more than two\n    branches. If the condition is false, skipping the first branch takes us\n    past the end of the item if there is only one branch, but that's exactly\n    what we want. */\n\n    case OP_COND:\n    case OP_SCOND:\n\n    /* The variable Flength will be added to Fecode when the condition is\n    false, to get to the second branch. Setting it to the offset to the ALT or\n    KET, then incrementing Fecode achieves this effect. However, if the second\n    branch is non-existent, we must point to the KET so that the end of the\n    group is correctly processed. We now have Fecode pointing to the condition\n    or callout. */\n\n    Flength = GET(Fecode, 1);    /* Offset to the second branch */\n    if (Fecode[Flength] != OP_ALT) Flength -= 1 + LINK_SIZE;\n    Fecode += 1 + LINK_SIZE;     /* From this opcode */\n\n    /* Because of the way auto-callout works during compile, a callout item is\n    inserted between OP_COND and an assertion condition. Such a callout can\n    also be inserted manually. */\n\n    if (*Fecode == OP_CALLOUT || *Fecode == OP_CALLOUT_STR)\n      {\n      rrc = do_callout(F, mb, &length);\n      if (rrc > 0) RRETURN(MATCH_NOMATCH);\n      if (rrc < 0) RRETURN(rrc);\n\n      /* Advance Fecode past the callout, so it now points to the condition. We\n      must adjust Flength so that the value of Fecode+Flength is unchanged. */\n\n      Fecode += length;\n      Flength -= length;\n      }\n\n    /* Test the various possible conditions */\n\n    condition = FALSE;\n    switch(*Fecode)\n      {\n      case OP_RREF:                  /* Group recursion test */\n      if (Fcurrent_recurse != RECURSE_UNSET)\n        {\n        number = GET2(Fecode, 1);\n        condition = (number == RREF_ANY || number == Fcurrent_recurse);\n        }\n      break;\n\n      case OP_DNRREF:       /* Duplicate named group recursion test */\n      if (Fcurrent_recurse != RECURSE_UNSET)\n        {\n        int count = GET2(Fecode, 1 + IMM2_SIZE);\n        PCRE2_SPTR slot = mb->name_table + GET2(Fecode, 1) * mb->name_entry_size;\n        while (count-- > 0)\n          {\n          number = GET2(slot, 0);\n          condition = number == Fcurrent_recurse;\n          if (condition) break;\n          slot += mb->name_entry_size;\n          }\n        }\n      break;\n\n      case OP_CREF:                         /* Numbered group used test */\n      offset = (GET2(Fecode, 1) << 1) - 2;  /* Doubled ref number */\n      condition = offset < Foffset_top && Fovector[offset] != PCRE2_UNSET;\n      break;\n\n      case OP_DNCREF:      /* Duplicate named group used test */\n        {\n        int count = GET2(Fecode, 1 + IMM2_SIZE);\n        PCRE2_SPTR slot = mb->name_table + GET2(Fecode, 1) * mb->name_entry_size;\n        while (count-- > 0)\n          {\n          offset = (GET2(slot, 0) << 1) - 2;\n          condition = offset < Foffset_top && Fovector[offset] != PCRE2_UNSET;\n          if (condition) break;\n          slot += mb->name_entry_size;\n          }\n        }\n      break;\n\n      case OP_FALSE:\n      case OP_FAIL:   /* The assertion (?!) becomes OP_FAIL */\n      break;\n\n      case OP_TRUE:\n      condition = TRUE;\n      break;\n\n      /* The condition is an assertion. Run code similar to the assertion code\n      above. */\n\n#define Lpositive      F->temp_32[0]\n#define Lstart_branch  F->temp_sptr[0]\n\n      default:\n      Lpositive = (*Fecode == OP_ASSERT || *Fecode == OP_ASSERTBACK);\n      Lstart_branch = Fecode;\n\n      for (;;)\n        {\n        group_frame_type = GF_CONDASSERT | *Fecode;\n        RMATCH(Lstart_branch + PRIV(OP_lengths)[*Lstart_branch], RM5);\n\n        switch(rrc)\n          {\n          case MATCH_ACCEPT:  /* Save captures */\n          memcpy(Fovector,\n                (char *)assert_accept_frame + offsetof(heapframe, ovector),\n                assert_accept_frame->offset_top * sizeof(PCRE2_SIZE));\n          Foffset_top = assert_accept_frame->offset_top;\n\n          /* Fall through */\n          /* In the case of a match, the captures have already been put into\n          the current frame. */\n\n          case MATCH_MATCH:\n          condition = Lpositive;   /* TRUE for positive assertion */\n          break;\n\n          /* PCRE doesn't allow the effect of (*THEN) to escape beyond an\n          assertion; it is therefore always treated as NOMATCH. */\n\n          case MATCH_NOMATCH:\n          case MATCH_THEN:\n          Lstart_branch += GET(Lstart_branch, 1);\n          if (*Lstart_branch == OP_ALT) continue;  /* Try next branch */\n          condition = !Lpositive;  /* TRUE for negative assertion */\n          break;\n\n          /* These force no match without checking other branches. */\n\n          case MATCH_COMMIT:\n          case MATCH_SKIP:\n          case MATCH_PRUNE:\n          condition = !Lpositive;\n          break;\n\n          default:\n          RRETURN(rrc);\n          }\n        break;  /* Out of the branch loop */\n        }\n\n      /* If the condition is true, find the end of the assertion so that\n      advancing past it gets us to the start of the first branch. */\n\n      if (condition)\n        {\n        do Fecode += GET(Fecode, 1); while (*Fecode == OP_ALT);\n        }\n      break;  /* End of assertion condition */\n      }\n\n#undef Lpositive\n#undef Lstart_branch\n\n    /* Choose branch according to the condition. */\n\n    Fecode += condition? PRIV(OP_lengths)[*Fecode] : Flength;\n\n    /* If the opcode is OP_SCOND it means we are at a repeated conditional\n    group that might match an empty string. We must therefore descend a level\n    so that the start is remembered for checking. For OP_COND we can just\n    continue at this level. */\n\n    if (Fop == OP_SCOND)\n      {\n      group_frame_type  = GF_NOCAPTURE | Fop;\n      RMATCH(Fecode, RM35);\n      RRETURN(rrc);\n      }\n    break;\n\n\n\n/* ========================================================================= */\n/*                  End of start of parenthesis opcodes                      */\n/* ========================================================================= */\n\n\n    /* ===================================================================== */\n    /* Move the subject pointer back by one fixed amount. This occurs at the\n    start of each branch that has a fixed length in a lookbehind assertion. If\n    we are too close to the start to move back, fail. When working with UTF-8\n    we move back a number of characters, not bytes. */\n\n    case OP_REVERSE:\n    number = GET(Fecode, 1);\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      {\n      while (number-- > 0)\n        {\n        if (Feptr <= mb->check_subject) RRETURN(MATCH_NOMATCH);\n        Feptr--;\n        BACKCHAR(Feptr);\n        }\n      }\n    else\n#endif\n\n    /* No UTF support, or not in UTF mode: count is code unit count */\n\n      {\n      if ((ptrdiff_t)number > Feptr - mb->start_subject) RRETURN(MATCH_NOMATCH);\n      Feptr -= number;\n      }\n\n    /* Save the earliest consulted character, then skip to next opcode */\n\n    if (Feptr < mb->start_used_ptr) mb->start_used_ptr = Feptr;\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n\n    /* ===================================================================== */\n    /* Move the subject pointer back by a variable amount. This occurs at the\n    start of each branch of a lookbehind assertion when the branch has a\n    variable, but limited, length. A loop is needed to try matching the branch\n    after moving back different numbers of characters. If we are too close to\n    the start to move back even the minimum amount, fail. When working with\n    UTF-8 we move back a number of characters, not bytes. */\n\n#define Lmin F->temp_32[0]\n#define Lmax F->temp_32[1]\n#define Leptr F->temp_sptr[0]\n\n    case OP_VREVERSE:\n    Lmin = GET2(Fecode, 1);\n    Lmax = GET2(Fecode, 1 + IMM2_SIZE);\n    Leptr = Feptr;\n\n    /* Move back by the maximum branch length and then work forwards. This\n    ensures that items such as \\d{3,5} get the maximum length, which is\n    relevant for captures, and makes for Perl compatibility. */\n\n#ifdef SUPPORT_UNICODE\n    if (utf)\n      { \n      for (i = 0; i < Lmax; i++)\n        {\n        if (Feptr == mb->start_subject)\n          {\n          if (i < Lmin) RRETURN(MATCH_NOMATCH);\n          Lmax = i;\n          break;\n          }\n        Feptr--;\n        if (utf) { BACKCHAR(Feptr); }\n        }\n      }   \n    else\n#endif\n\n    /* No UTF support or not in UTF mode */\n\n      {\n      ptrdiff_t available = Feptr - mb->start_subject;\n      if (Lmin > available) RRETURN(MATCH_NOMATCH);\n      if (Lmax > available) Lmax = available;\n      Feptr -= Lmax;\n      }\n\n    /* Now try matching, moving forward one character on failure, until we\n    reach the mimimum back length. */\n\n    for (;;)\n      {\n      RMATCH(Fecode + 1 + 2 * IMM2_SIZE, RM37);\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      if (Lmax-- <= Lmin) RRETURN(MATCH_NOMATCH);\n      Feptr++;\n#ifdef SUPPORT_UNICODE\n      if (utf) { FORWARDCHARTEST(Feptr, mb->end_subject); }\n#endif\n      }\n    /* Control never reaches here */\n\n#undef Lmin\n#undef Lmax\n#undef Leptr\n\n    /* ===================================================================== */\n    /* An alternation is the end of a branch; scan along to find the end of the\n    bracketed group. */\n\n    case OP_ALT:\n    branch_end = Fecode;\n    do Fecode += GET(Fecode,1); while (*Fecode == OP_ALT);\n    break;\n\n\n    /* ===================================================================== */\n    /* The end of a parenthesized group. For all but OP_BRA and OP_COND, the\n    starting frame was added to the chained frames in order to remember the\n    starting subject position for the group. */\n\n    case OP_KET:\n    case OP_KETRMIN:\n    case OP_KETRMAX:\n    case OP_KETRPOS:\n\n    bracode = Fecode - GET(Fecode, 1);\n\n    if (branch_end == NULL) branch_end = Fecode;\n    branch_start = bracode;\n    while (branch_start + GET(branch_start, 1) != branch_end)\n      branch_start += GET(branch_start, 1);\n    branch_end = NULL;\n\n\n    /* Point N to the frame at the start of the most recent group, and P to its\n    predecessor. Remember the subject pointer at the start of the group. */\n\n    if (*bracode != OP_BRA && *bracode != OP_COND)\n      {\n      N = (heapframe *)((char *)match_data->heapframes + Flast_group_offset);\n      P = (heapframe *)((char *)N - frame_size);\n      Flast_group_offset = P->last_group_offset;\n\n#ifdef DEBUG_SHOW_RMATCH\n      fprintf(stderr, \"++ KET for frame=%d type=%x prev char offset=%lu\\n\",\n        N->rdepth, N->group_frame_type,\n        (char *)P->eptr - (char *)mb->start_subject);\n#endif\n\n      /* If we are at the end of an assertion that is a condition, return a\n      match, discarding any intermediate backtracking points. Copy back the\n      mark setting and the captures into the frame before N so that they are\n      set on return. Doing this for all assertions, both positive and negative,\n      seems to match what Perl does. */\n\n      if (GF_IDMASK(N->group_frame_type) == GF_CONDASSERT)\n        {\n        memcpy((char *)P + offsetof(heapframe, ovector), Fovector,\n          Foffset_top * sizeof(PCRE2_SIZE));\n        P->offset_top = Foffset_top;\n        P->mark = Fmark;\n        Fback_frame = (char *)F - (char *)P;\n        RRETURN(MATCH_MATCH);\n        }\n      }\n    else P = NULL;   /* Indicates starting frame not recorded */\n\n    /* The group was not a conditional assertion. */\n\n    switch (*bracode)\n      {\n      case OP_BRA:    /* No need to do anything for these */\n      case OP_COND:\n      case OP_SCOND:\n      break;\n\n      /* Non-atomic positive assertions are like OP_BRA, except that the\n      subject pointer must be put back to where it was at the start of the\n      assertion. For a variable lookbehind, check its end point. */\n\n      case OP_ASSERTBACK_NA:\n      if (branch_start[1 + LINK_SIZE] == OP_VREVERSE && Feptr != P->eptr)\n        RRETURN(MATCH_NOMATCH);\n      /* Fall through */\n\n      case OP_ASSERT_NA:\n      if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n      Feptr = P->eptr;\n      break;\n\n      /* Atomic positive assertions are like OP_ONCE, except that in addition\n      the subject pointer must be put back to where it was at the start of the\n      assertion. For a variable lookbehind, check its end point. */\n\n      case OP_ASSERTBACK:\n      if (branch_start[1 + LINK_SIZE] == OP_VREVERSE && Feptr != P->eptr)\n        RRETURN(MATCH_NOMATCH);\n      /* Fall through */\n\n      case OP_ASSERT:\n      if (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\n      Feptr = P->eptr;\n      /* Fall through */\n\n      /* For an atomic group, discard internal backtracking points. We must\n      also ensure that any remaining branches within the top-level of the group\n      are not tried. Do this by adjusting the code pointer within the backtrack\n      frame so that it points to the final branch. */\n\n      case OP_ONCE:\n      Fback_frame = ((char *)F - (char *)P);\n      for (;;)\n        {\n        uint32_t y = GET(P->ecode,1);\n        if ((P->ecode)[y] != OP_ALT) break;\n        P->ecode += y;\n        }\n      break;\n\n      /* A matching negative assertion returns MATCH, which is turned into\n      NOMATCH at the assertion level. For a variable lookbehind, check its end\n      point. */\n\n      case OP_ASSERTBACK_NOT:\n      if (branch_start[1 + LINK_SIZE] == OP_VREVERSE && Feptr != P->eptr)\n        RRETURN(MATCH_NOMATCH);\n      /* Fall through */\n\n      case OP_ASSERT_NOT:\n      RRETURN(MATCH_MATCH);\n\n      /* At the end of a script run, apply the script-checking rules. This code\n      will never by exercised if Unicode support it not compiled, because in\n      that environment script runs cause an error at compile time. */\n\n      case OP_SCRIPT_RUN:\n      if (!PRIV(script_run)(P->eptr, Feptr, utf)) RRETURN(MATCH_NOMATCH);\n      break;\n\n      /* Whole-pattern recursion is coded as a recurse into group 0, so it\n      won't be picked up here. Instead, we catch it when the OP_END is reached.\n      Other recursion is handled here. */\n\n      case OP_CBRA:\n      case OP_CBRAPOS:\n      case OP_SCBRA:\n      case OP_SCBRAPOS:\n      number = GET2(bracode, 1+LINK_SIZE);\n\n      /* Handle a recursively called group. We reinstate the previous set of\n      captures and then carry on after the recursion call. */\n\n      if (Fcurrent_recurse == number)\n        {\n        P = (heapframe *)((char *)N - frame_size);\n        memcpy((char *)F + offsetof(heapframe, ovector), P->ovector,\n          P->offset_top * sizeof(PCRE2_SIZE));\n        Foffset_top = P->offset_top;\n        Fcapture_last = P->capture_last;\n        Fcurrent_recurse = P->current_recurse;\n        Fecode = P->ecode + 1 + LINK_SIZE;\n        continue;  /* With next opcode */\n        }\n\n      /* Deal with actual capturing. */\n\n      offset = (number << 1) - 2;\n      Fcapture_last = number;\n      Fovector[offset] = P->eptr - mb->start_subject;\n      Fovector[offset+1] = Feptr - mb->start_subject;\n      if (offset >= Foffset_top) Foffset_top = offset + 2;\n      break;\n      }  /* End actions relating to the starting opcode */\n\n    /* OP_KETRPOS is a possessive repeating ket. Remember the current position,\n    and return the MATCH_KETRPOS. This makes it possible to do the repeats one\n    at a time from the outer level. This must precede the empty string test -\n    in this case that test is done at the outer level. */\n\n    if (*Fecode == OP_KETRPOS)\n      {\n      memcpy((char *)P + offsetof(heapframe, eptr),\n             (char *)F + offsetof(heapframe, eptr),\n             frame_copy_size);\n      RRETURN(MATCH_KETRPOS);\n      }\n\n    /* Handle the different kinds of closing brackets. A non-repeating ket\n    needs no special action, just continuing at this level. This also happens\n    for the repeating kets if the group matched no characters, in order to\n    forcibly break infinite loops. Otherwise, the repeating kets try the rest\n    of the pattern or restart from the preceding bracket, in the appropriate\n    order. */\n\n    if (Fop != OP_KET && (P == NULL || Feptr != P->eptr))\n      {\n      if (Fop == OP_KETRMIN)\n        {\n        RMATCH(Fecode + 1 + LINK_SIZE, RM6);\n        if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n        Fecode -= GET(Fecode, 1);\n        break;   /* End of ket processing */\n        }\n\n      /* Repeat the maximum number of times (KETRMAX) */\n\n      RMATCH(bracode, RM7);\n      if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n      }\n\n    /* Carry on at this level for a non-repeating ket, or after matching an\n    empty string, or after repeating for a maximum number of times. */\n\n    Fecode += 1 + LINK_SIZE;\n    break;\n\n\n    /* ===================================================================== */\n    /* Start and end of line assertions, not multiline mode. */\n\n    case OP_CIRC:   /* Start of line, unless PCRE2_NOTBOL is set. */\n    if (Feptr != mb->start_subject || (mb->moptions & PCRE2_NOTBOL) != 0)\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    case OP_SOD:    /* Unconditional start of subject */\n    if (Feptr != mb->start_subject) RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    /* When PCRE2_NOTEOL is unset, assert before the subject end, or a\n    terminating newline unless PCRE2_DOLLAR_ENDONLY is set. */\n\n    case OP_DOLL:\n    if ((mb->moptions & PCRE2_NOTEOL) != 0) RRETURN(MATCH_NOMATCH);\n    if ((mb->poptions & PCRE2_DOLLAR_ENDONLY) == 0) goto ASSERT_NL_OR_EOS;\n\n    /* Fall through */\n    /* Unconditional end of subject assertion (\\z) */\n\n    case OP_EOD:\n    if (Feptr < mb->end_subject) RRETURN(MATCH_NOMATCH);\n    if (mb->partial != 0)\n      {\n      mb->hitend = TRUE;\n      if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n      }\n    Fecode++;\n    break;\n\n    /* End of subject or ending \\n assertion (\\Z) */\n\n    case OP_EODN:\n    ASSERT_NL_OR_EOS:\n    if (Feptr < mb->end_subject &&\n        (!IS_NEWLINE(Feptr) || Feptr != mb->end_subject - mb->nllen))\n      {\n      if (mb->partial != 0 &&\n          Feptr + 1 >= mb->end_subject &&\n          NLBLOCK->nltype == NLTYPE_FIXED &&\n          NLBLOCK->nllen == 2 &&\n          UCHAR21TEST(Feptr) == NLBLOCK->nl[0])\n        {\n        mb->hitend = TRUE;\n        if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n        }\n      RRETURN(MATCH_NOMATCH);\n      }\n\n    /* Either at end of string or \\n before end. */\n\n    if (mb->partial != 0)\n      {\n      mb->hitend = TRUE;\n      if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n      }\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Start and end of line assertions, multiline mode. */\n\n    /* Start of subject unless notbol, or after any newline except for one at\n    the very end, unless PCRE2_ALT_CIRCUMFLEX is set. */\n\n    case OP_CIRCM:\n    if ((mb->moptions & PCRE2_NOTBOL) != 0 && Feptr == mb->start_subject)\n      RRETURN(MATCH_NOMATCH);\n    if (Feptr != mb->start_subject &&\n        ((Feptr == mb->end_subject &&\n           (mb->poptions & PCRE2_ALT_CIRCUMFLEX) == 0) ||\n         !WAS_NEWLINE(Feptr)))\n      RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n    /* Assert before any newline, or before end of subject unless noteol is\n    set. */\n\n    case OP_DOLLM:\n    if (Feptr < mb->end_subject)\n      {\n      if (!IS_NEWLINE(Feptr))\n        {\n        if (mb->partial != 0 &&\n            Feptr + 1 >= mb->end_subject &&\n            NLBLOCK->nltype == NLTYPE_FIXED &&\n            NLBLOCK->nllen == 2 &&\n            UCHAR21TEST(Feptr) == NLBLOCK->nl[0])\n          {\n          mb->hitend = TRUE;\n          if (mb->partial > 1) return PCRE2_ERROR_PARTIAL;\n          }\n        RRETURN(MATCH_NOMATCH);\n        }\n      }\n    else\n      {\n      if ((mb->moptions & PCRE2_NOTEOL) != 0) RRETURN(MATCH_NOMATCH);\n      SCHECK_PARTIAL();\n      }\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Start of match assertion */\n\n    case OP_SOM:\n    if (Feptr != mb->start_subject + mb->start_offset) RRETURN(MATCH_NOMATCH);\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Reset the start of match point */\n\n    case OP_SET_SOM:\n    Fstart_match = Feptr;\n    Fecode++;\n    break;\n\n\n    /* ===================================================================== */\n    /* Word boundary assertions. Find out if the previous and current\n    characters are \"word\" characters. It takes a bit more work in UTF mode.\n    Characters > 255 are assumed to be \"non-word\" characters when PCRE2_UCP is\n    not set. When it is set, use Unicode properties if available, even when not\n    in UTF mode. Remember the earliest and latest consulted characters. */\n\n    case OP_NOT_WORD_BOUNDARY:\n    case OP_WORD_BOUNDARY:\n    case OP_NOT_UCP_WORD_BOUNDARY:\n    case OP_UCP_WORD_BOUNDARY:\n    if (Feptr == mb->check_subject) prev_is_word = FALSE; else\n      {\n      PCRE2_SPTR lastptr = Feptr - 1;\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        BACKCHAR(lastptr);\n        GETCHAR(fc, lastptr);\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      fc = *lastptr;\n      if (lastptr < mb->start_used_ptr) mb->start_used_ptr = lastptr;\n#ifdef SUPPORT_UNICODE\n      if (Fop == OP_UCP_WORD_BOUNDARY || Fop == OP_NOT_UCP_WORD_BOUNDARY)\n        {\n        if (fc == '_') prev_is_word = TRUE; else\n          {\n          int cat = UCD_CATEGORY(fc);\n          prev_is_word = (cat == ucp_L || cat == ucp_N);\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      prev_is_word = CHMAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0;\n      }\n\n    /* Get status of next character */\n\n    if (Feptr >= mb->end_subject)\n      {\n      SCHECK_PARTIAL();\n      cur_is_word = FALSE;\n      }\n    else\n      {\n      PCRE2_SPTR nextptr = Feptr + 1;\n#ifdef SUPPORT_UNICODE\n      if (utf)\n        {\n        FORWARDCHARTEST(nextptr, mb->end_subject);\n        GETCHAR(fc, Feptr);\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      fc = *Feptr;\n      if (nextptr > mb->last_used_ptr) mb->last_used_ptr = nextptr;\n#ifdef SUPPORT_UNICODE\n      if (Fop == OP_UCP_WORD_BOUNDARY || Fop == OP_NOT_UCP_WORD_BOUNDARY)\n        {\n        if (fc == '_') cur_is_word = TRUE; else\n          {\n          int cat = UCD_CATEGORY(fc);\n          cur_is_word = (cat == ucp_L || cat == ucp_N);\n          }\n        }\n      else\n#endif  /* SUPPORT_UNICODE */\n      cur_is_word = CHMAX_255(fc) && (mb->ctypes[fc] & ctype_word) != 0;\n      }\n\n    /* Now see if the situation is what we want */\n\n    if ((*Fecode++ == OP_WORD_BOUNDARY || Fop == OP_UCP_WORD_BOUNDARY)?\n         cur_is_word == prev_is_word : cur_is_word != prev_is_word)\n      RRETURN(MATCH_NOMATCH);\n    break;\n\n\n    /* ===================================================================== */\n    /* Backtracking (*VERB)s, with and without arguments. Note that if the\n    pattern is successfully matched, we do not come back from RMATCH. */\n\n    case OP_MARK:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM12);\n\n    /* A return of MATCH_SKIP_ARG means that matching failed at SKIP with an\n    argument, and we must check whether that argument matches this MARK's\n    argument. It is passed back in mb->verb_skip_ptr. If it does match, we\n    return MATCH_SKIP with mb->verb_skip_ptr now pointing to the subject\n    position that corresponds to this mark. Otherwise, pass back the return\n    code unaltered. */\n\n    if (rrc == MATCH_SKIP_ARG &&\n             PRIV(strcmp)(Fecode + 2, mb->verb_skip_ptr) == 0)\n      {\n      mb->verb_skip_ptr = Feptr;   /* Pass back current position */\n      RRETURN(MATCH_SKIP);\n      }\n    RRETURN(rrc);\n\n    case OP_FAIL:\n    RRETURN(MATCH_NOMATCH);\n\n    /* Record the current recursing group number in mb->verb_current_recurse\n    when a backtracking return such as MATCH_COMMIT is given. This enables the\n    recurse processing to catch verbs from within the recursion. */\n\n    case OP_COMMIT:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM13);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_COMMIT);\n\n    case OP_COMMIT_ARG:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM36);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_COMMIT);\n\n    case OP_PRUNE:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM14);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_PRUNE);\n\n    case OP_PRUNE_ARG:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM15);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_PRUNE);\n\n    case OP_SKIP:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM16);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_skip_ptr = Feptr;   /* Pass back current position */\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_SKIP);\n\n    /* Note that, for Perl compatibility, SKIP with an argument does NOT set\n    nomatch_mark. When a pattern match ends with a SKIP_ARG for which there was\n    not a matching mark, we have to re-run the match, ignoring the SKIP_ARG\n    that failed and any that precede it (either they also failed, or were not\n    triggered). To do this, we maintain a count of executed SKIP_ARGs. If a\n    SKIP_ARG gets to top level, the match is re-run with mb->ignore_skip_arg\n    set to the count of the one that failed. */\n\n    case OP_SKIP_ARG:\n    mb->skip_arg_count++;\n    if (mb->skip_arg_count <= mb->ignore_skip_arg)\n      {\n      Fecode += PRIV(OP_lengths)[*Fecode] + Fecode[1];\n      break;\n      }\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM17);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n\n    /* Pass back the current skip name and return the special MATCH_SKIP_ARG\n    return code. This will either be caught by a matching MARK, or get to the\n    top, where it causes a rematch with mb->ignore_skip_arg set to the value of\n    mb->skip_arg_count. */\n\n    mb->verb_skip_ptr = Fecode + 2;\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_SKIP_ARG);\n\n    /* For THEN (and THEN_ARG) we pass back the address of the opcode, so that\n    the branch in which it occurs can be determined. */\n\n    case OP_THEN:\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode], RM18);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_ecode_ptr = Fecode;\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_THEN);\n\n    case OP_THEN_ARG:\n    Fmark = mb->nomatch_mark = Fecode + 2;\n    RMATCH(Fecode + PRIV(OP_lengths)[*Fecode] + Fecode[1], RM19);\n    if (rrc != MATCH_NOMATCH) RRETURN(rrc);\n    mb->verb_ecode_ptr = Fecode;\n    mb->verb_current_recurse = Fcurrent_recurse;\n    RRETURN(MATCH_THEN);\n\n\n    /* ===================================================================== */\n    /* There's been some horrible disaster. Arrival here can only mean there is\n    something seriously wrong in the code above or the OP_xxx definitions. */\n\n    default:\n    return PCRE2_ERROR_INTERNAL;\n    }\n\n  /* Do not insert any code in here without much thought; it is assumed\n  that \"continue\" in the code above comes out to here to repeat the main\n  loop. */\n\n  }  /* End of main loop */\n/* Control never reaches here */\n\n\n/* ========================================================================= */\n/* The RRETURN() macro jumps here. The number that is saved in Freturn_id\nindicates which label we actually want to return to. The value in Frdepth is\nthe index number of the frame in the vector. The return value has been placed\nin rrc. */\n\n#define LBL(val) case val: goto L_RM##val;\n\nRETURN_SWITCH:\nif (Feptr > mb->last_used_ptr) mb->last_used_ptr = Feptr;\nif (Frdepth == 0) return rrc;                     /* Exit from the top level */\nF = (heapframe *)((char *)F - Fback_frame);       /* Backtrack */\nmb->cb->callout_flags |= PCRE2_CALLOUT_BACKTRACK; /* Note for callouts */\n\n#ifdef DEBUG_SHOW_RMATCH\nfprintf(stderr, \"++ RETURN %d to %d\\n\", rrc, Freturn_id);\n#endif\n\nswitch (Freturn_id)\n  {\n  LBL( 1) LBL( 2) LBL( 3) LBL( 4) LBL( 5) LBL( 6) LBL( 7) LBL( 8)\n  LBL( 9) LBL(10) LBL(11) LBL(12) LBL(13) LBL(14) LBL(15) LBL(16)\n  LBL(17) LBL(18) LBL(19) LBL(20) LBL(21) LBL(22) LBL(23) LBL(24)\n  LBL(25) LBL(26) LBL(27) LBL(28) LBL(29) LBL(30) LBL(31) LBL(32)\n  LBL(33) LBL(34) LBL(35) LBL(36) LBL(37)\n\n#ifdef SUPPORT_WIDE_CHARS\n  LBL(100) LBL(101)\n#endif\n\n#ifdef SUPPORT_UNICODE\n  LBL(200) LBL(201) LBL(202) LBL(203) LBL(204) LBL(205) LBL(206)\n  LBL(207) LBL(208) LBL(209) LBL(210) LBL(211) LBL(212) LBL(213)\n  LBL(214) LBL(215) LBL(216) LBL(217) LBL(218) LBL(219) LBL(220)\n  LBL(221) LBL(222) LBL(223) LBL(224) LBL(225)\n#endif\n\n  default:\n  return PCRE2_ERROR_INTERNAL;\n  }\n#undef LBL\n}",
                "patchDiffEmbeddings": [
                    0.010700942017138004,
                    0.03461725264787674,
                    0.042686816304922104,
                    -0.02798033133149147,
                    -0.06601838022470474,
                    0.009655699133872986,
                    0.04862203821539879,
                    0.0056282272562384605,
                    0.03634227067232132,
                    0.030260859057307243,
                    0.0644395500421524,
                    -0.008939379826188087,
                    -0.013105729594826698,
                    0.042277488857507706,
                    0.00658210227265954,
                    -0.005467420909553766,
                    0.021708877757191658,
                    -0.029105976223945618,
                    -0.004261372145265341,
                    0.05423564836382866,
                    0.06069714576005936,
                    0.0030991798266768456,
                    0.01593446172773838,
                    0.03640074282884598,
                    -0.04610760882496834,
                    -0.010627848096191883,
                    0.004012852907180786,
                    0.025582851842045784,
                    0.06654465198516846,
                    -0.05274453014135361,
                    0.016650782898068428,
                    -0.025699801743030548,
                    -0.02605065330862999,
                    -0.03388631343841553,
                    0.016460737213492393,
                    0.02553899586200714,
                    0.032161299139261246,
                    0.022279009222984314,
                    -0.045581333339214325,
                    -0.023185374215245247,
                    -0.017834901809692383,
                    -0.012477122247219086,
                    -0.019881531596183777,
                    -0.04075713828206062,
                    -0.0004575219063553959,
                    -0.006446878891438246,
                    -0.010554754175245762,
                    -0.0007670287159271538,
                    0.03873974829912186,
                    -0.006951226387172937,
                    0.015583612024784088,
                    0.021811209619045258,
                    0.0033696270547807217,
                    0.09432031959295273,
                    -0.012652548030018806,
                    0.02033471316099167,
                    0.005419909954071045,
                    -0.013405414298176765,
                    0.06888365745544434,
                    0.0272932481020689,
                    0.01748405210673809,
                    -0.009268301539123058,
                    -0.013171514496207237,
                    -0.04447030648589134,
                    -0.03865203633904457,
                    0.001162192435003817,
                    -0.04192664101719856,
                    0.006523627322167158,
                    0.035640567541122437,
                    0.03961687535047531,
                    -0.006249525118619204,
                    -0.003113798564299941,
                    0.0006720066885463893,
                    -0.03286300227046013,
                    0.021007176488637924,
                    -0.015992937609553337,
                    0.0007163198897615075,
                    0.036810070276260376,
                    -0.0016080649802461267,
                    -0.013580840080976486,
                    0.006348202005028725,
                    0.019296780228614807,
                    0.008025705814361572,
                    -0.03210282325744629,
                    0.00019404136401135474,
                    -0.02996848337352276,
                    -0.07432184368371964,
                    0.00014424616529140621,
                    -0.05768567696213722,
                    -0.02274681068956852,
                    -0.02150421403348446,
                    0.023580079898238182,
                    -0.03318461403250694,
                    0.025509757921099663,
                    0.020393187180161476,
                    -0.015525136142969131,
                    0.008405794389545918,
                    -0.019633011892437935,
                    -0.015086573548614979,
                    -0.009195207618176937,
                    0.018331941217184067,
                    -0.04049399867653847,
                    0.038768984377384186,
                    -0.027205536141991615,
                    0.05169197916984558,
                    -0.0018282602541148663,
                    -0.050025440752506256,
                    0.05096103996038437,
                    -0.02495424449443817,
                    0.01171694602817297,
                    -0.027454055845737457,
                    -0.0046633887104690075,
                    -0.014348325319588184,
                    0.009187898598611355,
                    0.05476192384958267,
                    -0.01026968751102686,
                    -0.009195207618176937,
                    -0.018902072682976723,
                    0.0051604267209768295,
                    0.013368867337703705,
                    0.01321537047624588,
                    0.036488454788923264,
                    0.004524510353803635,
                    -0.046370748430490494,
                    0.009494893252849579,
                    -0.019399112090468407,
                    0.04490887001156807,
                    0.02068556286394596,
                    0.00617643166333437,
                    -0.03069942258298397,
                    0.07104723155498505,
                    -0.009443727321922779,
                    0.022191297262907028,
                    0.008632385171949863,
                    -0.04444107040762901,
                    0.029705345630645752,
                    -0.00758714322000742,
                    0.013105729594826698,
                    0.0006382007850334048,
                    0.038359660655260086,
                    0.006483425851911306,
                    -0.009604533202946186,
                    0.02429640106856823,
                    0.020977938547730446,
                    0.014348325319588184,
                    0.01097869873046875,
                    -0.015305855311453342,
                    0.0042723361402750015,
                    0.04373936727643013,
                    0.00939256139099598,
                    -0.02010081149637699,
                    -0.01380012184381485,
                    -0.0437101311981678,
                    0.039558399468660355,
                    0.0022659096866846085,
                    -0.02127031423151493,
                    -0.014699175953865051,
                    -0.016577688977122307,
                    -0.005032512359321117,
                    0.014859982766211033,
                    -0.009838433936238289,
                    -0.022732190787792206,
                    -1.7688143998384476e-05,
                    0.014779578894376755,
                    0.01641688123345375,
                    -0.013997474685311317,
                    -0.02790723741054535,
                    0.00044998410157859325,
                    -0.07104723155498505,
                    0.022454435005784035,
                    0.03733634576201439,
                    -0.04175121337175369,
                    -0.028097281232476234,
                    0.00889552291482687,
                    -0.012082415632903576,
                    -0.020246999338269234,
                    -0.04625379666686058,
                    -0.0027830488979816437,
                    -0.02284914255142212,
                    -0.007842971943318844,
                    -0.0026971634943038225,
                    0.02508581429719925,
                    0.02618222124874592,
                    0.0022202259860932827,
                    -0.04517200589179993,
                    -0.06853280961513519,
                    0.017191676422953606,
                    0.014633391052484512,
                    0.02350698597729206,
                    -0.023828599601984024,
                    0.022776048630475998,
                    0.019983861595392227,
                    0.0556098110973835,
                    0.026372265070676804,
                    -0.03464649245142937,
                    -0.01575903780758381,
                    0.0668955072760582,
                    -0.03719015792012215,
                    -0.005339506547898054,
                    0.03751176968216896,
                    -0.01689930073916912,
                    -0.014684556983411312,
                    0.024632632732391357,
                    0.04347623139619827,
                    -0.011965465731918812,
                    -0.017440196126699448,
                    -0.06519972532987595,
                    0.02701549232006073,
                    -0.01644611917436123,
                    -0.036839306354522705,
                    0.001784403924830258,
                    -0.011665781028568745,
                    0.015335092321038246,
                    -0.02635764703154564,
                    -0.03730710968375206,
                    -0.002863452071323991,
                    0.00667712464928627,
                    0.010708251036703587,
                    -0.029544539749622345,
                    0.010525516234338284,
                    -0.012404028326272964,
                    -0.02360931783914566,
                    0.042686816304922104,
                    0.015802893787622452,
                    -0.014501822181046009,
                    0.055317435413599014,
                    0.028857456520199776,
                    -0.003570635337382555,
                    -0.03672235831618309,
                    -0.01776180788874626,
                    0.05303690582513809,
                    -0.006903715431690216,
                    0.016270693391561508,
                    -0.04990848898887634,
                    -0.015992937609553337,
                    -0.04192664101719856,
                    -0.05446954816579819,
                    -0.011227217502892017,
                    0.03327232599258423,
                    -0.004020162392407656,
                    -0.026576928794384003,
                    0.02243981696665287,
                    0.04780338704586029,
                    -0.030640946701169014,
                    -0.01755714602768421,
                    -0.014436038210988045,
                    0.006936607416719198,
                    0.05137036740779877,
                    0.015408186241984367,
                    -0.019428348168730736,
                    0.05525895953178406,
                    0.03558209165930748,
                    -0.002872588811442256,
                    -0.029208308085799217,
                    -0.044207166880369186,
                    0.039382971823215485,
                    0.027512529864907265,
                    0.02681082859635353,
                    -0.024354875087738037,
                    -0.058416616171598434,
                    -0.049674589186906815,
                    -0.027161680161952972,
                    -0.00752866780385375,
                    0.026796210557222366,
                    -0.022425197064876556,
                    -0.017630239948630333,
                    0.06297767162322998,
                    0.039763063192367554,
                    0.0384766086935997,
                    0.0006715498748235404,
                    -0.03523124381899834,
                    0.020860988646745682,
                    0.027205536141991615,
                    -0.0035286061465740204,
                    -0.05365089699625969,
                    -0.028477368876338005,
                    0.04543514549732208,
                    0.027454055845737457,
                    0.03499734029173851,
                    -0.008866285905241966,
                    -0.006158158183097839,
                    -0.014077877625823021,
                    -0.016957776620984077,
                    -0.031605787575244904,
                    0.01951606199145317,
                    0.0065163178369402885,
                    -0.03107951022684574,
                    0.028550462797284126,
                    0.061340369284152985,
                    -0.025787515565752983,
                    -0.03871050849556923,
                    -0.039733823388814926,
                    0.006234906613826752,
                    -0.007616380695253611,
                    0.010364709421992302,
                    0.04622456058859825,
                    0.024530300870537758,
                    -0.026957016438245773,
                    -0.01268178503960371,
                    -0.01951606199145317,
                    0.022001253440976143,
                    -0.008215750567615032,
                    -0.018156515434384346,
                    0.0016427845694124699,
                    -0.01730862632393837,
                    -0.021913539618253708,
                    -0.011197979561984539,
                    -0.05204283073544502,
                    -0.03186892345547676,
                    -0.006450533401221037,
                    -0.012901066802442074,
                    -0.0035523618571460247,
                    -0.026006797328591347,
                    -0.013142276555299759,
                    0.013975546695291996,
                    -0.018916692584753036,
                    0.05210130661725998,
                    0.034324876964092255,
                    -0.02374088764190674,
                    -0.0003714081831276417,
                    0.01175349298864603,
                    -0.013792811892926693,
                    0.03485115244984627,
                    -0.01675311289727688,
                    0.01834655925631523,
                    0.04356394335627556,
                    -0.014209447428584099,
                    -0.024311019107699394,
                    0.024457206949591637,
                    -0.01562746800482273,
                    -0.013632005080580711,
                    -0.04195587709546089,
                    -0.013741645961999893,
                    -0.05189664289355278,
                    -0.008968616835772991,
                    0.02612374722957611,
                    -0.019779199734330177,
                    0.0719243586063385,
                    -0.013895143754780293,
                    0.0024742272216826677,
                    -0.006110646761953831,
                    0.0021617510356009007,
                    -0.021840445697307587,
                    0.030670184642076492,
                    -0.015276617370545864,
                    0.04385631904006004,
                    0.031576547771692276,
                    -0.03251215070486069,
                    0.05517124757170677,
                    0.03941221162676811,
                    -0.000785759009886533,
                    -0.012908375822007656,
                    0.03420792892575264,
                    0.026284553110599518,
                    0.05330004543066025,
                    -0.014165590517222881,
                    -0.016489975154399872,
                    -0.009787268005311489,
                    -0.03613760694861412,
                    0.031430359929800034,
                    -0.04137112572789192,
                    -0.014260612428188324,
                    -0.0033111521042883396,
                    -0.005982732865959406,
                    -0.007101068738847971,
                    0.0064870803616940975,
                    -0.013690480962395668,
                    -0.04923602566123009,
                    0.0390905998647213,
                    -0.027073966339230537,
                    -0.00907094869762659,
                    0.0007638308452442288,
                    -0.018244227394461632,
                    0.0344710648059845,
                    -0.018916692584753036,
                    0.0033111521042883396,
                    -0.005533205345273018,
                    0.010591301135718822,
                    0.056662362068891525,
                    0.012309006415307522,
                    0.02150421403348446,
                    -0.029500683769583702,
                    -0.024544918909668922,
                    -0.03306766226887703,
                    -0.00806956272572279,
                    0.001188688911497593,
                    -0.0002983143203891814,
                    0.002618587575852871,
                    -0.0033732817973941565,
                    -0.03768719732761383,
                    -0.0027063002344220877,
                    -0.016840826719999313,
                    0.040347810834646225,
                    -0.012586763128638268,
                    -0.01936987414956093,
                    0.031371887773275375,
                    0.0328337624669075,
                    0.048505086451768875,
                    -0.015130429528653622,
                    -0.006180086173117161,
                    0.011176051571965218,
                    -0.00381184509024024,
                    -0.02091946452856064,
                    -0.009385252371430397,
                    -0.05829966440796852,
                    0.03748253360390663,
                    -0.009524130262434483,
                    0.038944412022829056,
                    0.012922994792461395,
                    0.05069790408015251,
                    0.017542527988553047,
                    0.02681082859635353,
                    0.03499734029173851,
                    0.0008538276888430119,
                    0.06794805824756622,
                    0.005430873949080706,
                    -0.04192664101719856,
                    -0.0028999990317970514,
                    -0.002470572479069233,
                    -0.013873214833438396,
                    -0.054732684046030045,
                    -0.025582851842045784,
                    -0.0247788205742836,
                    0.004794957581907511,
                    -0.03678083047270775,
                    -0.04160502552986145,
                    0.01741095818579197,
                    -0.02106565050780773,
                    0.07227521389722824,
                    -0.09139657020568848,
                    -0.043446991592645645,
                    0.002627724315971136,
                    0.004133457783609629,
                    0.0562237985432148,
                    0.0019534335006028414,
                    0.017396340146660805,
                    -0.02384321764111519,
                    0.028784362599253654,
                    0.009158660657703876,
                    -0.06297767162322998,
                    -0.010934841819107533,
                    0.029851533472537994,
                    -0.020466281101107597,
                    -0.03768719732761383,
                    -0.03172273561358452,
                    0.010240450501441956,
                    -0.02805342525243759,
                    -0.003590736072510481,
                    0.004064018838107586,
                    0.007689474616199732,
                    0.004458725452423096,
                    -0.014618773013353348,
                    0.03669311851263046,
                    -0.05505429953336716,
                    -0.00608140928670764,
                    -0.016636162996292114,
                    0.05116570368409157,
                    0.03397402912378311,
                    0.05014238879084587,
                    0.03856432065367699,
                    0.023068422451615334,
                    -0.008208440616726875,
                    0.03382784128189087,
                    0.024135593324899673,
                    -0.04923602566123009,
                    0.060931045562028885,
                    0.0225713849067688,
                    0.032950714230537415,
                    0.03599141910672188,
                    0.03148883581161499,
                    0.005960804410278797,
                    -0.0025637673679739237,
                    0.05169197916984558,
                    0.009904218837618828,
                    0.012338244356215,
                    0.018112659454345703,
                    -0.0197499617934227,
                    -0.04566904529929161,
                    0.0013650278560817242,
                    -0.0769532173871994,
                    0.05230597034096718,
                    -0.01786413975059986,
                    0.06250987201929092,
                    -0.021621163934469223,
                    -0.0340617410838604,
                    0.10636618733406067,
                    0.034909628331661224,
                    0.03733634576201439,
                    -0.029003644362092018,
                    -0.007232637610286474,
                    0.025524377822875977,
                    0.03192739933729172,
                    -0.02071480080485344,
                    -0.018989786505699158,
                    -0.014743031933903694,
                    -0.007419026922434568,
                    0.03809652104973793,
                    0.007828352972865105,
                    0.04707244783639908,
                    -0.015875987708568573,
                    -0.023448511958122253,
                    0.02925216406583786,
                    0.00753597728908062,
                    0.017147820442914963,
                    0.03107951022684574,
                    0.030611710622906685,
                    0.005262758117169142,
                    -0.01961839385330677,
                    0.010094262659549713,
                    0.021241076290607452,
                    -0.025685183703899384,
                    -0.012294387444853783,
                    0.007287458050996065,
                    -0.040903326123952866,
                    -0.017337864264845848,
                    0.03029009699821472,
                    -0.016738494858145714,
                    0.026971636340022087,
                    -0.04485039412975311,
                    -0.01820037141442299,
                    0.002006426453590393,
                    0.0030955250840634108,
                    -0.014552988111972809,
                    -0.0005198800936341286,
                    0.001780749298632145,
                    -0.023492367938160896,
                    -0.005975423380732536,
                    -0.089466892182827,
                    -0.03713168203830719,
                    -0.017630239948630333,
                    0.02264447882771492,
                    -0.028301943093538284,
                    0.02302456647157669,
                    0.013346939347684383,
                    0.002863452071323991,
                    0.01624145731329918,
                    0.022030489519238472,
                    -0.002461435738950968,
                    0.008676241151988506,
                    -0.04721863567829132,
                    0.010372019372880459,
                    0.010591301135718822,
                    0.0028798982966691256,
                    -0.022279009222984314,
                    -0.0027227464597672224,
                    0.013675861991941929,
                    0.01287182979285717,
                    0.029851533472537994,
                    0.0010836165165528655,
                    -0.021226458251476288,
                    -0.007101068738847971,
                    0.005467420909553766,
                    -0.0012928476789966226,
                    -0.01603679358959198,
                    0.0036912402138113976,
                    0.0036437290254980326,
                    -0.011695018038153648,
                    -0.015510518103837967,
                    -0.03230748698115349,
                    0.01221398450434208,
                    -0.011168742552399635,
                    -0.020641706883907318,
                    -0.029997721314430237,
                    -0.05192587897181511,
                    -0.0017469433369114995,
                    0.01376357488334179,
                    -0.002682544756680727,
                    0.003822809085249901,
                    -0.005105606280267239,
                    -0.019589155912399292,
                    -0.02653307281434536,
                    0.009779958985745907,
                    0.0016930366400629282,
                    0.024734962731599808,
                    0.031225698068737984,
                    -0.03029009699821472,
                    -0.016197599470615387,
                    0.01276949793100357,
                    0.019764579832553864,
                    -0.04292071610689163,
                    0.014523751102387905,
                    -0.026752354577183723,
                    0.011431880295276642,
                    -0.004352739546447992,
                    -0.02030547522008419,
                    -0.00757983373478055,
                    -0.00036752509186044335,
                    -0.03321385011076927,
                    -0.025729039683938026,
                    0.041692741215229034,
                    -0.0008666191133670509,
                    -0.002234844956547022,
                    -0.017527908086776733,
                    0.042862240225076675,
                    -0.019457586109638214,
                    0.030173147097229958,
                    -0.0017633894458413124,
                    0.01426792237907648,
                    -0.001725928857922554,
                    -0.009663009084761143,
                    0.006856204476207495,
                    -0.01707472652196884,
                    0.02432563714683056,
                    -0.03944144770503044,
                    0.025626707822084427,
                    -0.008902832865715027,
                    0.030436284840106964,
                    -0.007484811823815107,
                    0.026518452912569046,
                    0.017542527988553047,
                    0.014202137477695942,
                    0.02787799946963787,
                    -0.006987773347645998,
                    -0.0017378065967932343,
                    0.0036565205082297325,
                    -0.0015404531732201576,
                    0.012674476020038128,
                    -0.019501442089676857,
                    0.0189313106238842,
                    0.0051896641962230206,
                    0.00046323236892931163,
                    0.04672159627079964,
                    0.020320093259215355,
                    -0.015992937609553337,
                    -0.012243222445249557,
                    0.03286300227046013,
                    0.00907094869762659,
                    -0.024311019107699394,
                    0.04376860707998276,
                    -0.034266404807567596,
                    0.016475357115268707,
                    -0.0014280714094638824,
                    -0.0034884046763181686,
                    -0.007711402606219053,
                    -0.031371887773275375,
                    -0.015510518103837967,
                    -0.0028159411158412695,
                    -0.009187898598611355,
                    0.0008615939295850694,
                    -0.018244227394461632,
                    0.001001385971903801,
                    -0.01357353013008833,
                    -0.019954625517129898,
                    -0.04040628671646118,
                    -0.009144042618572712,
                    -0.022454435005784035,
                    -0.00517139071598649,
                    0.028418894857168198,
                    0.015788273885846138,
                    0.00524813961237669,
                    -0.02116798236966133,
                    -0.007769877556711435,
                    0.008873594924807549,
                    -0.010379328392446041,
                    0.004751101136207581,
                    -0.05306614562869072,
                    -0.017937233671545982,
                    0.025115052238106728,
                    0.020320093259215355,
                    -0.005942530930042267,
                    0.005251794122159481,
                    0.033301565796136856,
                    -0.016475357115268707,
                    -0.022103583440184593,
                    -0.003599872812628746,
                    0.04356394335627556,
                    0.016563069075345993,
                    0.0028908622916787863,
                    0.02980767749249935,
                    0.007298422046005726,
                    -0.03087484836578369,
                    0.010072334669530392,
                    0.06122342124581337,
                    -0.017089344561100006,
                    0.04280376806855202,
                    -0.04242367669939995,
                    -0.0073459334671497345,
                    -0.031781211495399475,
                    0.01361007709056139,
                    0.03789185732603073,
                    0.007419026922434568,
                    -0.021796589717268944,
                    -0.049674589186906815,
                    -0.050668664276599884,
                    -0.03514352813363075,
                    0.013588149100542068,
                    0.0050727142952382565,
                    0.0009712346945889294,
                    0.02109488844871521,
                    0.014034021645784378,
                    0.03183968737721443,
                    -0.006205669138580561,
                    0.028711268678307533,
                    -0.05385555699467659,
                    0.011146814562380314,
                    -0.015218142420053482,
                    0.0035121601540595293,
                    0.008274225518107414,
                    -0.029646871611475945,
                    -0.011431880295276642,
                    0.015101192519068718,
                    0.024486444890499115,
                    -0.03944144770503044,
                    0.042862240225076675,
                    -0.06853280961513519,
                    -0.08344395458698273,
                    0.012930304743349552,
                    0.047160159796476364,
                    0.030377808958292007,
                    -0.013310392387211323,
                    -0.030553234741091728,
                    0.00855198223143816,
                    -0.03286300227046013,
                    -0.02670849859714508,
                    -0.027819523587822914,
                    -0.01727938838303089,
                    -0.014114424586296082,
                    -0.0324244387447834,
                    0.03856432065367699,
                    -0.04102027788758278,
                    -0.0038081903476268053,
                    -0.002965783467516303,
                    0.03569904342293739,
                    -0.03347698971629143,
                    0.00844965036958456,
                    0.03853508457541466,
                    0.021665021777153015,
                    0.011241836473345757,
                    0.002669753273949027,
                    0.013325011357665062,
                    0.020013099536299706,
                    0.011914299800992012,
                    -0.017396340146660805,
                    0.00994807481765747,
                    0.024179449304938316,
                    0.04622456058859825,
                    0.002337176352739334,
                    -0.011051791720092297,
                    -0.0428914800286293,
                    0.009560677222907543,
                    0.037628721445798874,
                    -0.03245367482304573,
                    -0.012981469742953777,
                    -0.0009301194222643971,
                    -0.02292223647236824,
                    0.044791918247938156,
                    0.005946185905486345,
                    0.007152234669774771,
                    -0.059556879103183746,
                    0.008544672280550003,
                    0.0014545678859576583,
                    0.013536983169615269,
                    0.0038849387783557177,
                    0.0010845301439985633,
                    0.030553234741091728,
                    -0.011556140147149563,
                    0.009991930797696114,
                    -0.012806044891476631,
                    -0.029719965532422066,
                    0.02935449592769146,
                    -0.015642086043953896,
                    -0.007152234669774771,
                    0.005047131329774857,
                    -0.00908556766808033,
                    -0.004604913294315338,
                    0.019691485911607742,
                    -0.04037705063819885,
                    -0.006461497396230698,
                    0.013909761793911457,
                    -0.013434652239084244,
                    0.047511011362075806,
                    -0.012045868672430515,
                    -0.01049627922475338,
                    0.00426868163049221,
                    0.029617633670568466,
                    -0.014998860657215118,
                    0.002927409252151847,
                    -0.013069182634353638,
                    0.005905983969569206,
                    -0.009641080163419247,
                    0.022688334807753563,
                    0.00806956272572279,
                    0.004312538076192141,
                    -0.014377563260495663,
                    -0.026109127327799797,
                    0.012616001069545746,
                    0.01723553240299225,
                    0.0123894102871418,
                    0.011950846761465073,
                    -0.007872208952903748,
                    0.04935297742486,
                    -0.01855122298002243,
                    -0.016665400937199593,
                    -0.015715179964900017,
                    0.0037497151643037796,
                    0.0007263702573254704,
                    0.0217527337372303,
                    -0.12443499267101288,
                    0.0017761809285730124,
                    0.03423716500401497,
                    0.0041298032738268375,
                    -0.014545679092407227,
                    -0.014786888845264912,
                    0.026489216834306717,
                    0.012338244356215,
                    0.011183361522853374,
                    -0.025992177426815033,
                    0.034675728529691696,
                    0.01562746800482273,
                    -0.01789337769150734,
                    -0.04505505785346031,
                    0.010898294858634472,
                    -0.009319467470049858,
                    0.008113418705761433,
                    0.010057715699076653,
                    -0.008902832865715027,
                    -0.03692701831459999,
                    -0.04046476259827614,
                    -0.027512529864907265,
                    -0.01654845103621483,
                    0.002547321142628789,
                    -0.009582605212926865,
                    0.0015897915000095963,
                    -0.030670184642076492,
                    0.019296780228614807,
                    0.008763954043388367,
                    0.010415875352919102,
                    0.02660616673529148,
                    0.0024321982637047768,
                    0.03757024556398392,
                    0.005544169340282679,
                    0.009955383837223053,
                    0.016826206818223,
                    -0.011848514899611473,
                    -0.038213472813367844,
                    0.021840445697307587,
                    0.007733330596238375,
                    0.0015669496497139335,
                    -0.05400174483656883,
                    -0.00427599111571908,
                    0.009246373549103737,
                    0.003674793988466263,
                    -0.031371887773275375,
                    -0.0006126179359853268,
                    -0.007232637610286474,
                    0.009750721044838428,
                    -0.01282066386193037,
                    -0.013807430863380432,
                    -0.012988779693841934,
                    0.015042716637253761,
                    0.007181472145020962,
                    0.010525516234338284,
                    0.018244227394461632,
                    0.004630496259778738,
                    -0.01862431690096855,
                    -0.0023335216101258993,
                    -0.0006331756012514234,
                    0.0046633887104690075,
                    -0.0032471949234604836,
                    0.033710889518260956,
                    -0.026299171149730682,
                    0.016767732799053192,
                    -0.005193319171667099,
                    -0.033915553241968155,
                    0.0276002436876297,
                    -0.012104343622922897,
                    -0.02051013894379139,
                    0.017294008284807205,
                    0.036225318908691406,
                    -0.00855198223143816,
                    0.027380961924791336,
                    0.007959921844303608,
                    0.032716814428567886,
                    0.011102957651019096,
                    -0.02808266319334507,
                    -0.024486444890499115,
                    0.038038045167922974,
                    0.03552361577749252,
                    0.05344623327255249,
                    0.00043468005605973303,
                    0.02363855578005314,
                    0.007886827923357487,
                    -0.023477748036384583,
                    0.019793817773461342,
                    -0.022863760590553284,
                    -0.016299931332468987,
                    -0.012674476020038128,
                    0.009012473747134209,
                    0.032336726784706116,
                    -0.028199613094329834,
                    0.020246999338269234,
                    -0.02773181162774563,
                    -0.04958687722682953,
                    -0.015992937609553337,
                    -0.03543590381741524,
                    0.004374667536467314,
                    -0.006940262392163277,
                    0.010335472412407398,
                    0.03224901109933853,
                    -0.000714949332177639,
                    -0.03420792892575264,
                    -0.04897288978099823,
                    -0.0017716125585138798,
                    -0.005233520641922951,
                    0.018317321315407753,
                    -0.027644099667668343,
                    -0.0010278824483975768,
                    0.038418132811784744,
                    0.04140036553144455,
                    -0.02140188403427601,
                    0.014903838746249676,
                    0.02976382151246071,
                    -0.013566221110522747,
                    0.003513987408950925,
                    -0.024968864396214485,
                    -0.001278228941373527,
                    -0.015495899133384228,
                    -0.004963073413819075,
                    0.0499669648706913,
                    0.026927778497338295,
                    -0.011022554710507393,
                    -0.04938221350312233,
                    0.006308000534772873,
                    -0.015393567271530628,
                    0.04023086279630661,
                    0.04294995591044426,
                    0.010861747898161411,
                    0.019603773951530457,
                    -0.01184120588004589,
                    0.0006916506681591272,
                    -0.03999696299433708,
                    -0.0003668398130685091,
                    -0.025451283901929855,
                    -0.003797226119786501,
                    0.0485343262553215,
                    0.02205972746014595,
                    0.013420033268630505,
                    0.006541900802403688,
                    0.002768430160358548,
                    0.011183361522853374,
                    -0.00996269378811121,
                    0.042482152581214905,
                    -0.00356698059476912,
                    -0.009831124916672707,
                    0.00953144021332264,
                    -0.025173526257276535,
                    0.014794197864830494,
                    0.018054183572530746,
                    0.009509511291980743,
                    -0.03318461403250694,
                    -0.04923602566123009,
                    0.005829235538840294,
                    0.001841965364292264,
                    -0.0014335534069687128,
                    -0.0011338685872033238,
                    0.030816372483968735,
                    0.034266404807567596,
                    0.01672387681901455,
                    0.016870062798261642,
                    0.0009054502588696778,
                    0.02068556286394596,
                    -0.0032435401808470488,
                    0.05107799172401428,
                    -0.011059101670980453,
                    0.00425771763548255,
                    0.028506606817245483,
                    0.011673090048134327,
                    -0.008771263994276524,
                    0.010035787709057331,
                    0.014034021645784378,
                    -0.030085433274507523,
                    -0.00041457926272414625,
                    0.05300766974687576,
                    0.013325011357665062,
                    0.0020977938547730446,
                    -0.02119722031056881,
                    -0.010715560056269169,
                    0.01761562190949917,
                    -0.009173279628157616,
                    -0.009158660657703876,
                    0.054352596402168274,
                    -0.019457586109638214,
                    0.008215750567615032,
                    -0.002302456647157669,
                    -0.01586136780679226,
                    0.0033184613566845655,
                    0.006066790781915188,
                    0.0495576411485672,
                    0.0660768523812294,
                    -0.006110646761953831,
                    0.02112412638962269,
                    -0.025275858119130135,
                    0.01378550287336111,
                    0.02660616673529148,
                    0.02849198877811432,
                    -0.004889979492872953,
                    0.0009091049432754517,
                    0.012966851703822613,
                    0.05093180388212204,
                    0.003223439445719123,
                    -0.006245870608836412,
                    0.010635157115757465,
                    0.00038237226544879377,
                    0.02371164970099926,
                    -0.006015624850988388,
                    -0.05669160187244415,
                    0.00860314816236496,
                    -0.014669938012957573,
                    -0.020948700606822968,
                    -0.032716814428567886,
                    0.02426716312766075,
                    -0.017907995730638504,
                    -0.013434652239084244,
                    -0.05230597034096718,
                    0.016957776620984077,
                    0.007813734002411366,
                    0.015232761390507221,
                    0.011738874018192291,
                    -0.014808816835284233,
                    -0.010627848096191883,
                    0.03862279653549194,
                    0.010686323046684265,
                    -0.0012087897630408406,
                    -0.02281990461051464,
                    -0.03578675538301468,
                    -0.002386514563113451,
                    -0.016987014561891556,
                    -0.006826967000961304,
                    -0.002872588811442256,
                    -0.009312158450484276,
                    -0.04318385571241379,
                    0.022191297262907028,
                    0.012309006415307522,
                    0.016840826719999313,
                    0.003185064997524023,
                    -0.025451283901929855,
                    0.04315461590886116,
                    0.005869437009096146,
                    -0.029091358184814453,
                    0.007821043021976948,
                    0.0386812724173069,
                    0.06373784691095352,
                    -0.02780490554869175,
                    -0.029193688184022903,
                    0.027454055845737457,
                    -0.026576928794384003,
                    0.011117576621472836,
                    -0.030670184642076492,
                    -0.007886827923357487,
                    0.018843598663806915,
                    0.0015788275049999356,
                    -0.00567939318716526,
                    0.014516441151499748,
                    0.006998737342655659,
                    0.029222926124930382,
                    0.015101192519068718,
                    0.0191359743475914,
                    -0.0007848453824408352,
                    -0.018492747098207474,
                    0.010920222848653793,
                    0.008522744290530682,
                    -0.051224179565906525,
                    -0.0026971634943038225,
                    -0.032541386783123016,
                    0.02378474362194538,
                    0.03537743166089058,
                    -0.014779578894376755,
                    0.035640567541122437,
                    0.012469813227653503,
                    0.010415875352919102,
                    0.015232761390507221,
                    -0.0040311263874173164,
                    -0.028038805350661278,
                    0.040903326123952866,
                    -0.02302456647157669,
                    0.004418523982167244,
                    -0.017264770343899727,
                    0.014304469339549541,
                    0.02708858624100685,
                    0.021211838349699974,
                    0.014472585171461105,
                    -0.004162695724517107,
                    -0.005489349365234375,
                    0.012754878960549831,
                    -0.041868165135383606,
                    -0.00948027428239584,
                    -0.002264082431793213,
                    0.01586136780679226,
                    -0.0008478888194076717,
                    0.02147497795522213,
                    0.004645115230232477,
                    0.008281534537672997,
                    -0.032365962862968445,
                    0.00752866780385375,
                    -0.010189284570515156,
                    -0.015042716637253761,
                    -0.005672083701938391,
                    0.009801886975765228,
                    0.014428728260099888,
                    0.0018748575821518898,
                    0.002315248129889369,
                    -0.014370253309607506,
                    0.0010900122579187155,
                    0.03844737261533737,
                    -0.015261998400092125,
                    0.007013356313109398,
                    -0.041488077491521835,
                    0.01366124302148819,
                    -0.006509008351713419,
                    0.018697410821914673,
                    -0.010847128927707672,
                    0.003062632866203785,
                    0.02116798236966133,
                    -0.004985001403838396,
                    0.006622304208576679,
                    -0.010912913829088211,
                    -0.006907369941473007,
                    -0.014319087378680706,
                    0.05327080935239792,
                    -0.02762947976589203,
                    -0.013281155377626419,
                    0.0008675327990204096,
                    0.0012736605713143945,
                    0.0008990545175038278,
                    0.0003120194305665791,
                    -0.0002757009060587734,
                    0.009984621778130531,
                    -0.0014253302942961454,
                    0.023521605879068375,
                    0.03947068750858307,
                    -0.022015871480107307,
                    0.0030224311631172895,
                    0.03151807561516762,
                    -0.0005495744990184903,
                    0.0038154996000230312,
                    -0.01132223941385746,
                    0.013960927724838257,
                    -0.011877752840518951,
                    0.039763063192367554,
                    -0.014077877625823021,
                    -0.006238561123609543,
                    -0.004330811556428671,
                    -0.0011393505847081542,
                    0.013551602140069008,
                    0.005065404810011387,
                    -0.026284553110599518,
                    -0.018726646900177002,
                    0.09519744664430618,
                    -0.014326397329568863,
                    -0.0025528031401336193,
                    -0.008186512626707554,
                    -0.00563553674146533,
                    0.004341775551438332,
                    -0.011885061860084534,
                    -0.020524756982922554,
                    0.004381977021694183,
                    -0.0036948947235941887,
                    -0.015846749767661095,
                    0.027483291923999786,
                    -0.0224690530449152,
                    -0.021138744428753853,
                    0.029880771413445473,
                    0.01572979986667633,
                    -0.007386134937405586,
                    0.0038630107883363962,
                    -0.025962939485907555,
                    -0.007835661992430687,
                    0.01654845103621483,
                    0.011585377156734467,
                    0.020393187180161476,
                    -0.025246620178222656,
                    -0.01082520093768835,
                    -0.010474350303411484,
                    -0.027351723983883858,
                    -0.0006075927522033453,
                    -0.004444106947630644,
                    0.015978317707777023,
                    0.014735722914338112,
                    0.010657085105776787,
                    -0.04444107040762901,
                    -0.02426716312766075,
                    -0.019691485911607742,
                    -0.0025930048432201147,
                    0.039938487112522125,
                    0.02315613627433777,
                    0.008888213895261288,
                    -0.011278383433818817,
                    -0.04262834042310715,
                    -0.021825827658176422,
                    -0.016197599470615387,
                    0.025904465466737747,
                    -0.004286955110728741,
                    -0.044002506881952286,
                    -0.026167603209614754,
                    0.014428728260099888,
                    0.009443727321922779,
                    0.0033349075820297003,
                    0.017133202403783798,
                    -0.019866911694407463,
                    -0.016226837411522865,
                    -0.004641460254788399,
                    -0.01331770233809948,
                    -0.022308247163891792,
                    0.017834901809692383,
                    0.0061947051435709,
                    -0.0010653430363163352,
                    0.02643074095249176,
                    -0.022308247163891792,
                    0.004407559987157583,
                    0.004451416432857513,
                    -0.023258468136191368,
                    -0.0216504018753767,
                    0.01221398450434208,
                    -0.03435411676764488,
                    -0.004107875283807516,
                    -0.026313791051506996,
                    -0.011665781028568745,
                    -0.022381341084837914,
                    -0.02388707362115383,
                    -0.01634378731250763,
                    0.019706105813384056,
                    0.032395198941230774,
                    -0.0021526142954826355,
                    -0.014721103943884373,
                    -0.00305897812359035,
                    -0.03125493600964546,
                    0.04584447294473648,
                    0.007243602070957422,
                    -0.0045683663338422775,
                    0.005734213627874851,
                    -0.014085187576711178,
                    -0.008493507280945778,
                    -0.012484432198107243,
                    0.010028477758169174,
                    -0.024354875087738037,
                    -0.009575296193361282,
                    -0.006549210287630558,
                    -0.0037405784241855145,
                    0.004995965398848057,
                    -0.02773181162774563,
                    0.001883994322270155,
                    -0.021460358053445816,
                    -0.02053937502205372,
                    0.014099806547164917,
                    -0.016431501135230064,
                    -0.008668932132422924,
                    0.0037424059119075537,
                    0.008647004142403603,
                    -0.033710889518260956,
                    -0.0007007874082773924,
                    0.023960167542099953,
                    -0.024077119305729866,
                    -0.009370633400976658,
                    -0.02584598958492279,
                    0.00805494375526905,
                    -0.01185582485049963,
                    0.003417138010263443,
                    -0.016577688977122307,
                    -0.05303690582513809,
                    0.057042449712753296,
                    0.006223942618817091,
                    -0.0150573356077075,
                    0.02480805665254593,
                    -0.0037241324316710234,
                    -0.009136732667684555,
                    0.026679260656237602,
                    0.01317882351577282,
                    0.005416255444288254,
                    -0.007185126654803753,
                    0.034909628331661224,
                    -0.02945682778954506,
                    -0.0017167921178042889,
                    0.012477122247219086,
                    -0.0012681785738095641,
                    0.0022202259860932827,
                    -0.007565214764326811,
                    0.03482191637158394,
                    -0.016913920640945435,
                    0.00329105113632977,
                    -0.003764333901926875,
                    0.006066790781915188,
                    -0.006461497396230698,
                    -0.009838433936238289,
                    0.06005391851067543,
                    0.0036729667335748672,
                    -0.00425040815025568,
                    0.0008611370576545596,
                    -0.010298925451934338,
                    0.026079891249537468,
                    -0.03230748698115349,
                    -0.0038045356050133705,
                    0.012140890583395958,
                    0.009297539480030537,
                    0.0028068043757230043,
                    0.010700942017138004,
                    -0.006381094455718994,
                    0.005200628191232681,
                    -0.00793068390339613,
                    -0.009714174084365368,
                    -0.012776806950569153,
                    0.04566904529929161,
                    -0.0061179562471807,
                    -0.0011695018038153648,
                    -0.012469813227653503,
                    0.019501442089676857,
                    0.007740640081465244,
                    0.002063074382022023,
                    0.024150213226675987,
                    -0.023141516372561455,
                    -0.016972394660115242,
                    0.017133202403783798,
                    -0.0060192798264324665,
                    0.004542783834040165,
                    -0.01789337769150734,
                    0.011738874018192291,
                    -0.007356897462159395,
                    -0.013120348565280437,
                    -0.0021781970281153917,
                    -0.040727902203798294,
                    -0.01634378731250763,
                    0.012045868672430515,
                    -0.02233748510479927,
                    -0.04280376806855202,
                    -0.019808437675237656,
                    0.02363855578005314,
                    -0.018814360722899437,
                    -0.0045976038090884686,
                    -0.008391175419092178,
                    -0.05476192384958267,
                    0.029105976223945618,
                    -0.003135726787149906,
                    0.0023316943552345037,
                    -0.013727027922868729,
                    -0.007419026922434568,
                    -0.02144574001431465,
                    0.0027355379424989223,
                    -0.02254214696586132,
                    0.030845610424876213,
                    -0.007645618170499802,
                    -0.00037437761784531176,
                    -0.003556016366928816,
                    -0.02480805665254593,
                    0.018492747098207474,
                    -0.007916065864264965,
                    0.008888213895261288,
                    0.03540666773915291,
                    -0.021913539618253708,
                    0.02442796900868416,
                    -0.02315613627433777,
                    -0.014808816835284233,
                    0.02363855578005314,
                    0.010715560056269169,
                    0.03871050849556923,
                    -0.051399603486061096,
                    0.029105976223945618,
                    -0.006728290114551783,
                    -0.010006549768149853,
                    -0.0018712029559537768,
                    -0.00712299719452858,
                    -0.03833042085170746,
                    0.03590370714664459,
                    0.02666464075446129,
                    0.011088338680565357,
                    0.020524756982922554,
                    0.04142960160970688,
                    -0.0034500304609537125,
                    0.008544672280550003,
                    -0.0309333223849535,
                    0.016972394660115242,
                    -0.031605787575244904,
                    -0.040143150836229324,
                    -0.024632632732391357,
                    0.009889599867165089,
                    -0.014706484973430634,
                    0.0024522992316633463,
                    -0.007320350501686335,
                    -0.029690727591514587,
                    -0.031196460127830505,
                    -0.009165970608592033,
                    -0.05806576460599899,
                    -0.016563069075345993,
                    0.024559538811445236,
                    -0.0084131034091115,
                    -0.011212598532438278,
                    0.013493127189576626,
                    0.021182602271437645,
                    0.013295773416757584,
                    -0.03309690207242966,
                    0.01596369966864586,
                    -0.017601002007722855,
                    -0.01606603153049946,
                    0.03145959973335266,
                    0.013880524784326553,
                    0.037804145365953445,
                    -0.004754755645990372,
                    -0.015978317707777023,
                    0.01225053146481514,
                    0.030787134543061256,
                    -0.0010342781897634268,
                    -0.0026057963259518147,
                    -0.01834655925631523,
                    0.02887207642197609,
                    -0.040698662400245667,
                    -0.026679260656237602,
                    -0.028199613094329834,
                    -0.0040420908480882645,
                    -0.05806576460599899,
                    0.017849521711468697,
                    0.0029475099872797728,
                    -0.017089344561100006,
                    0.0010872712591663003,
                    -0.02343389205634594,
                    0.02013004943728447,
                    0.008705479092895985,
                    0.0071631986647844315,
                    0.004868051502853632,
                    0.02140188403427601,
                    0.012360172346234322,
                    0.019004404544830322,
                    -0.004381977021694183,
                    0.004550092853605747,
                    0.005116570275276899,
                    -0.011190670542418957,
                    -0.01865355484187603,
                    0.009619152173399925,
                    0.014955004677176476,
                    0.011899680830538273,
                    0.042833004146814346,
                    -0.0025418391451239586,
                    -0.008771263994276524,
                    -0.003146690782159567,
                    -0.012652548030018806,
                    -0.03678083047270775,
                    -0.014216756448149681,
                    0.027483291923999786,
                    0.0023390036076307297,
                    -0.02374088764190674,
                    0.004023817367851734,
                    0.0332430899143219,
                    0.010430494323372841,
                    -0.024661868810653687,
                    -0.011154123581945896,
                    -0.010708251036703587,
                    -0.06052171811461449,
                    -0.015188904479146004,
                    -0.004842468537390232,
                    0.008698170073330402,
                    -0.009867671877145767,
                    0.01273295097053051,
                    0.004371013026684523,
                    0.008332700468599796,
                    0.0034829226788133383,
                    0.0027647754177451134,
                    0.009524130262434483,
                    0.016811588779091835,
                    -0.027264010161161423,
                    0.0033824185375124216,
                    0.023945549502968788,
                    -0.03204435110092163,
                    0.0014792371075600386,
                    -0.0008232196560129523,
                    -0.00793068390339613,
                    0.003384245792403817,
                    -0.005774415098130703,
                    -0.023521605879068375,
                    -0.012082415632903576,
                    0.02312689833343029,
                    -0.019457586109638214,
                    0.019384492188692093,
                    0.008369247429072857,
                    -0.018536603078246117,
                    0.07759644836187363,
                    -0.003757024649530649,
                    0.031576547771692276,
                    -0.0013513227459043264,
                    0.0015934462426230311,
                    -0.022293629124760628,
                    -0.00566111970692873,
                    0.027936475351452827,
                    -0.012996088713407516,
                    0.013895143754780293,
                    0.015846749767661095,
                    0.010167356580495834,
                    0.0007222587591968477,
                    0.02518814615905285,
                    0.030816372483968735,
                    0.009290230460464954,
                    -0.013441961258649826,
                    -0.018595078960061073,
                    0.0037606791593134403,
                    -0.006439569406211376,
                    0.011746183969080448,
                    0.009743412025272846,
                    -0.0390905998647213,
                    0.02993924729526043,
                    -0.006772146560251713,
                    -0.02178197167813778,
                    -0.0005641932366415858,
                    -0.007017010822892189,
                    -0.01216281857341528,
                    -0.01035740040242672,
                    -0.012499050237238407,
                    -0.005664774216711521,
                    -0.017805665731430054,
                    -0.009853052906692028,
                    -0.027000872418284416,
                    0.009275611490011215,
                    -0.005902329459786415,
                    0.007159543689340353,
                    0.025480519980192184,
                    -0.010861747898161411,
                    0.01868279092013836,
                    -0.0049484544433653355,
                    -0.023009948432445526,
                    0.01189237181097269,
                    -0.007777187041938305,
                    -0.003194201737642288,
                    -0.027512529864907265,
                    0.031050272285938263,
                    0.02216205932199955,
                    -0.0003280087257735431,
                    -0.0095679871737957,
                    0.016270693391561508,
                    -0.004955763928592205,
                    0.015568993054330349,
                    -0.012791425921022892,
                    -0.031605787575244904,
                    0.0163145512342453,
                    -0.0123894102871418,
                    -0.004846123047173023,
                    -0.04835889860987663,
                    -0.01624145731329918,
                    0.024164831265807152,
                    -0.009319467470049858,
                    0.004363703541457653,
                    -0.003954377956688404
                ],
                "returnType": "static int",
                "afterPatchEmbeddings": [
                    0.01853242631919682,
                    0.049072486063797584,
                    0.022869597202386203,
                    -0.010246661178308249,
                    -0.03889457987838687,
                    0.049512244263978454,
                    0.01650325800923468,
                    -0.017864535525492005,
                    0.009756629567440802,
                    0.03784748648860662,
                    0.05395455184686653,
                    0.004555089093239207,
                    0.020455496986647004,
                    0.04664509607645819,
                    0.03192339253389676,
                    -0.018610937288888123,
                    0.03313578944982761,
                    -0.019266043804164718,
                    -0.03530600632899117,
                    0.040785757833413344,
                    0.05233205856045778,
                    -0.041612482600474315,
                    0.018176526440862005,
                    0.0163972590268747,
                    -0.013332949401775969,
                    0.0018390940794624257,
                    -0.003490348009675482,
                    0.013153718256766263,
                    0.041508551848197024,
                    -0.025650371013053112,
                    0.019409076475307915,
                    -0.015574814192247459,
                    0.0028448597047459343,
                    -0.037715828064467875,
                    0.03219109357743102,
                    0.03375642577676854,
                    0.0034405843802106746,
                    0.006272759704938768,
                    0.009395716174574544,
                    -0.013090172798832672,
                    -0.0006639742367116188,
                    -0.028476913246614725,
                    0.014940761325747388,
                    -0.06749465566567814,
                    -0.008171741538008563,
                    -0.0015625997589118936,
                    -0.008712680872782005,
                    -0.0143432394145115,
                    0.013456206049596292,
                    -0.009186097895737476,
                    -0.024296072600549508,
                    0.00807261164655514,
                    -0.022350259241491196,
                    0.09417999399418595,
                    -0.03621431182681689,
                    0.003874771300043087,
                    -0.02025496834232532,
                    0.025492798455614134,
                    0.08514967567248041,
                    -0.024113973770878535,
                    0.05191354345854548,
                    0.0016978427302306494,
                    0.03069605582109109,
                    -0.055307875233524914,
                    -0.040419012905927816,
                    0.020746553826981918,
                    -0.06392565737948747,
                    0.031984763524436216,
                    0.0272147183615652,
                    0.04355770929857652,
                    -0.0013103335131630413,
                    0.031881250822388296,
                    -0.009329890744701193,
                    -0.01983321864065094,
                    0.05090998727049408,
                    0.0032133580030011275,
                    0.039634002500766506,
                    0.024226965592391042,
                    0.015591882503834996,
                    0.0001667011792352354,
                    0.013162869977209233,
                    0.035523602211266235,
                    0.030751271425905103,
                    -0.01886256535837415,
                    0.04689456509150559,
                    -0.02631250674997042,
                    -0.07042238741416128,
                    -0.022450449357355975,
                    -0.038005934723924245,
                    -0.01796125640337612,
                    -0.02947418907542772,
                    -0.0015673804164894807,
                    -0.030302326920926527,
                    0.01120452276164799,
                    0.03664331576070954,
                    -0.050847624019705474,
                    -0.003953430904942833,
                    -0.010219879556228379,
                    -0.0036703938838779067,
                    0.024804434872336602,
                    0.018921284001297636,
                    -0.0150110673008498,
                    -0.002386076522224169,
                    -0.009031504698016545,
                    0.027744734499003006,
                    0.0022678224428784575,
                    -0.038110440955444816,
                    0.03900942650253568,
                    -0.03870077857057251,
                    -0.017337283193017864,
                    -0.021879788350185104,
                    0.04009494111251785,
                    -0.007309563162245408,
                    0.004025944596822195,
                    0.03820404125140589,
                    0.003027451268100316,
                    -0.042130788088064614,
                    0.03000938864096303,
                    -0.007711000663088396,
                    0.008006218728617395,
                    -0.0008083922856428274,
                    0.032151597927512494,
                    0.01988158650234659,
                    -0.03769348513619948,
                    0.019690262944860606,
                    -0.047523135652405034,
                    0.04482949582384133,
                    0.01772240580624474,
                    0.007091678515432877,
                    -0.026584625606266704,
                    0.06839190133399387,
                    0.004737113752839123,
                    -0.020180202106965646,
                    0.01294688324330071,
                    -0.04981419602694387,
                    0.026644826044753152,
                    -0.006771506836302595,
                    0.03177298889736955,
                    -0.04010240844629652,
                    0.03742978755514295,
                    -0.02549772432325608,
                    -0.037316159034752334,
                    0.019858377886753265,
                    0.03001663490405604,
                    -0.004667292219866647,
                    0.01885926102881452,
                    -0.03688085805336433,
                    0.005548041377800208,
                    0.00299462797405353,
                    0.013467660568172264,
                    -0.016098246107862143,
                    -0.021311803458018568,
                    -0.04162721216591242,
                    0.007897522110564844,
                    0.00210402491032814,
                    -0.063869396646728,
                    -0.007029205259164896,
                    -0.0023012838837592766,
                    -0.00596655472387599,
                    0.03283777750547958,
                    -0.020573156832556748,
                    0.0035872922947497534,
                    0.03041138754356061,
                    0.06632543860206132,
                    0.022312792297143946,
                    -0.010887383448744119,
                    -0.042063311155104574,
                    0.031082233619022775,
                    -0.08327455626873244,
                    0.010268527631362772,
                    0.050465914499229735,
                    -0.024560985503093106,
                    -0.05964175733121316,
                    -0.04524427735463285,
                    -0.04947326593521326,
                    -0.020943007178906244,
                    -0.024670190369761216,
                    0.008871278363475388,
                    -0.05855061155897456,
                    -0.03768448354176379,
                    0.0291644456123721,
                    0.010419135963389614,
                    0.0038454655466971955,
                    -0.005352903020070032,
                    -0.027337761502082232,
                    -0.055254834028047144,
                    0.03362832618388169,
                    -0.01588477634759759,
                    -0.007542278421268036,
                    0.00010940572777496815,
                    0.029313632324233535,
                    0.004959940690685308,
                    0.045723313382004825,
                    0.03160998077638526,
                    -0.012473890186484387,
                    -0.05207546750749629,
                    0.08196805302957369,
                    0.008971866163402658,
                    0.002141784009637565,
                    0.008408306198043065,
                    -0.0030477459753508298,
                    0.008204019163877712,
                    0.05475169121103705,
                    0.032133055773293326,
                    0.0040927735717640225,
                    0.005480699652724594,
                    -0.042305272164429586,
                    0.015529066000588418,
                    -0.03752329159781111,
                    -0.0171775667049044,
                    -0.027896583179926496,
                    -0.03140243483288935,
                    -0.00967061071667457,
                    -0.020293576953422647,
                    -0.05091356632913918,
                    0.012074125259240539,
                    -0.018238946459361548,
                    -0.018027086966074527,
                    -0.019013527801355654,
                    0.018628624045125042,
                    -0.0037457449668688754,
                    0.041701529700051115,
                    0.06526481774191642,
                    0.0017284887830301728,
                    -0.004920612528397295,
                    0.056291157977604034,
                    0.028937926321138178,
                    -0.035273107847978734,
                    -0.0014696740932708431,
                    -0.03205640595080141,
                    0.02052266469517199,
                    0.028715277059995027,
                    -0.007121245361756119,
                    -0.05454761864944025,
                    0.0002830153647536338,
                    -0.011456965964197463,
                    -0.05846406238814503,
                    0.0018391475007872656,
                    -0.032556452795694295,
                    -0.0064860121621722056,
                    -0.05267904676973928,
                    0.04514027843498382,
                    0.01096774033552183,
                    -0.025295648383978953,
                    -0.025683042027769803,
                    -0.010240517299303496,
                    -0.011350433661562905,
                    0.015093679857398592,
                    -0.006669039173095433,
                    -0.01750443117624086,
                    0.04976180936298884,
                    -0.0031861727072336954,
                    -0.04201596975520808,
                    -0.007900905548587417,
                    -0.06771446152860192,
                    0.05347290001514857,
                    0.04446446919965139,
                    0.05349998264541983,
                    0.022088826074722987,
                    0.0017354632498402741,
                    -0.05148762647785322,
                    -0.011028003211981725,
                    -0.019493589872175723,
                    0.004672490912202794,
                    -0.03096856964742863,
                    -0.004916820000481015,
                    0.031727601842388944,
                    0.03846533631709346,
                    0.04389790985572432,
                    -0.052584553885525076,
                    0.006333328307758622,
                    0.038339933186292086,
                    0.05001211508810085,
                    -0.007244945061526937,
                    -0.03554604277849094,
                    -0.025064159437443913,
                    0.012575989743857537,
                    0.015600780460355127,
                    -0.01276076644515649,
                    -0.023766194666973172,
                    -0.02915291030244938,
                    0.0018484122170395667,
                    0.04205583752781406,
                    0.01374307361752071,
                    0.027655448366750678,
                    -0.023300963508717874,
                    0.015512656351418583,
                    -0.0041747627023546,
                    0.0165533570723392,
                    -0.019062843374586722,
                    -0.028216405573324867,
                    -0.045883246378582106,
                    0.009648065175239133,
                    -0.03999763133858878,
                    -0.017138226067639817,
                    -0.012344640672853966,
                    0.028012131329040065,
                    -0.01992388928560303,
                    0.035964009067185415,
                    0.0013637873685319662,
                    0.038680717065670646,
                    0.0005590515798786659,
                    -0.003180370864885189,
                    -0.0054750662823422995,
                    -0.011427906538749612,
                    -0.00866989693545013,
                    -0.006810518044624813,
                    -0.032515466452371876,
                    -0.03851743875230352,
                    0.0029198623560152373,
                    -0.010082772627690062,
                    -0.02476431937887427,
                    -0.030153066821493914,
                    -0.07071590816961495,
                    -0.006974140877986362,
                    -0.0425259603629101,
                    0.05280743804953235,
                    0.017698459036272055,
                    0.007703358542397019,
                    -0.02817231283164389,
                    0.015881146888183924,
                    -0.04426835455808695,
                    0.025480858748447757,
                    0.0368634113358961,
                    0.0011574102828748308,
                    0.03612935421377295,
                    -0.009491522322598055,
                    0.009565033506900635,
                    0.021988355515513917,
                    -0.01991456265664849,
                    0.005016672115131806,
                    -0.05585153468803883,
                    0.010426028606826385,
                    -0.010938661500074425,
                    -0.038982346673813256,
                    0.012060577725277867,
                    -0.0174089498260548,
                    0.050622969934538325,
                    0.014989726134031612,
                    0.0020188939663723948,
                    -0.034934293665297954,
                    0.003569530964699032,
                    0.002064478182513385,
                    0.029013758910845587,
                    -0.037724182130169356,
                    0.026001289486576536,
                    0.014333324029087371,
                    -0.011656832105401046,
                    0.036208268557192134,
                    0.03303030163305515,
                    -0.02017601229260756,
                    0.00560861149318277,
                    0.03491201839153525,
                    0.026164692001079463,
                    0.023190494764584596,
                    -0.01986331259639959,
                    -0.00473114721087359,
                    0.0007017190667325135,
                    -0.013440311824658716,
                    0.020040149710454164,
                    -0.048477402317665085,
                    0.005265538767755903,
                    0.017068840051375586,
                    -0.00935119157655176,
                    -0.03385133850610463,
                    0.019686791633453136,
                    -0.03415348201492269,
                    -0.04132269221466385,
                    0.003758399180677209,
                    0.00034431443939519435,
                    -0.0012667729470718216,
                    0.004156018217710603,
                    0.016029972530281118,
                    0.009819247224895447,
                    -0.019904538588101296,
                    0.030278783195795838,
                    -0.0267967256956754,
                    0.015157550385510402,
                    0.04356165022621154,
                    0.03795658929468483,
                    0.006199172327392143,
                    0.02403715472282643,
                    0.00042332784517616525,
                    -0.04248565968031691,
                    0.006418787151820099,
                    -0.022938309074290703,
                    0.019375209987832993,
                    0.0033210727301224885,
                    -0.041674324119590975,
                    -0.03316323901544228,
                    -0.014480433338852069,
                    0.012147731941483648,
                    0.0174964661536924,
                    -0.0021661711686565333,
                    -0.007726669513078088,
                    -0.001824254934255268,
                    0.020219081567699203,
                    0.05996822705547913,
                    -0.016657517406829,
                    -0.003114864203545698,
                    0.001629034964421301,
                    -0.017048812508469364,
                    -0.012633169487983698,
                    0.00861024364583877,
                    -0.03219803649362675,
                    -5.027744335284678e-05,
                    0.014818302341940516,
                    0.048285637235312893,
                    0.03658762002644084,
                    0.060368300004544774,
                    0.03991340455792925,
                    0.030463670947532072,
                    0.027002060817379325,
                    0.015683089583138896,
                    0.033095727248848246,
                    0.02447865959425096,
                    -0.034585933572726886,
                    -0.0021843446654047642,
                    0.052956300869636395,
                    0.017632482561445447,
                    -0.022346442909033277,
                    -0.056025312125468636,
                    -0.0813245638168324,
                    -0.014186871066972376,
                    -0.04956160751932087,
                    0.0030115865302899297,
                    -0.022235321963495255,
                    -0.011821151920721007,
                    0.003263979437257829,
                    -0.04314762116742549,
                    -0.00608254742240596,
                    0.0004768037354367494,
                    0.014615450706883108,
                    0.04006671970316439,
                    -0.00568939949972386,
                    -0.008635903291155586,
                    -0.022061349757837696,
                    0.029462563266669562,
                    0.0027802955546917278,
                    -0.02717315954449168,
                    -0.022134812501375896,
                    0.01488423896371398,
                    0.023785080574818235,
                    -0.03130793181616159,
                    -0.0236942706744988,
                    0.015022767132502267,
                    -0.0390165944611202,
                    -0.048206671525862735,
                    0.015434752120768131,
                    0.020320263618635353,
                    -0.02893936847790426,
                    -0.01337257094482394,
                    0.02259562765868016,
                    -0.034433193916063885,
                    -0.01938786602965338,
                    -0.01931333019167484,
                    0.0910568737205641,
                    -0.01743897433563193,
                    0.03679436175229595,
                    0.001623068600724877,
                    0.04497325918025334,
                    0.0009596948640235808,
                    0.03177239962522423,
                    -0.006100431111395886,
                    0.004143914302948401,
                    0.03966045353794457,
                    -0.026882518056814096,
                    0.006574002776310268,
                    0.047143861881012585,
                    0.03293629515324649,
                    0.005676103527795046,
                    -0.02325360633652617,
                    0.037814754901904474,
                    0.026550163863724018,
                    0.01818966169560082,
                    0.021842953812993997,
                    0.0017020256900037536,
                    -0.048976838351127885,
                    0.010447678206089491,
                    -0.08278706252122454,
                    0.010701672719799389,
                    -0.027246564070388914,
                    0.0027535396114379005,
                    -0.007312394006569879,
                    -0.030032780430722834,
                    0.11215342361973915,
                    0.026115090151483108,
                    0.02877060368536202,
                    -0.0060667948574351085,
                    -0.028271080317676053,
                    -0.007437927872890798,
                    0.01733003215755327,
                    0.011579043639420125,
                    -0.01620260600288877,
                    -0.003072789626185349,
                    0.011724669268426543,
                    0.04335468735222571,
                    0.0015403388369670688,
                    -0.014244957474517381,
                    0.020136401984449673,
                    -0.01801817314528473,
                    0.007910273372815732,
                    0.012001337641722485,
                    0.027814439533039817,
                    0.028085091088909667,
                    0.014237199766469236,
                    0.02950426749015687,
                    -0.005639512346317051,
                    -0.04143818931796474,
                    0.03901594096590705,
                    0.0009446376312344227,
                    0.014876220649990864,
                    -0.027004938260865658,
                    -0.029856970769291006,
                    -0.017039008441717383,
                    0.025161165256876387,
                    -0.030569434493561625,
                    0.01558295755183328,
                    -0.05101499991349338,
                    -0.017421089506930193,
                    0.007200750322220078,
                    -0.01834549137467695,
                    0.00021277492256852827,
                    -0.008022263013535076,
                    -0.03829695110203244,
                    -0.038707352217524166,
                    0.012602401446497723,
                    -0.12020957688286019,
                    -0.027160674476917782,
                    -0.019793205112487774,
                    0.03960405662065878,
                    0.008013381340422784,
                    0.011145207507616692,
                    0.011747866724631566,
                    -0.004978514549103485,
                    0.02801121245285274,
                    -0.0015908642876912638,
                    -0.009491120851055803,
                    0.043981329237003965,
                    -0.05224653006055615,
                    -0.008207162795092749,
                    0.011055049028742304,
                    -0.012906604439585004,
                    -0.002153761055086683,
                    0.005037314576390331,
                    0.027540795915706205,
                    -0.007991210254242273,
                    0.01653811278181563,
                    0.007266351252100899,
                    0.014413672516820497,
                    -0.028245845466370798,
                    -0.006869398612948505,
                    0.007904480741140878,
                    -0.028579303097621862,
                    -0.018247016333906473,
                    -0.004407813610343673,
                    0.007378866955055782,
                    -0.015861428185751158,
                    0.0012283820060707737,
                    -0.005864082648398207,
                    0.007526123278628383,
                    -0.041437979459863834,
                    0.006919892102930459,
                    -0.005362370309297128,
                    -0.00844535402074026,
                    0.001743255833769565,
                    -0.011081747985446994,
                    -0.0027374791329281096,
                    0.025985267421411763,
                    0.00835528508489217,
                    -0.005365443654768071,
                    -0.02415023435705221,
                    0.004726015906454327,
                    -0.019681046158158737,
                    0.015812324593642832,
                    -0.052429782496262636,
                    0.017000491385938645,
                    -0.0001048206000766226,
                    0.004386578094173471,
                    -0.056570020545251676,
                    -0.003871964302197038,
                    -0.03560356635553462,
                    0.03022481935556186,
                    -0.011199815607222907,
                    -0.03545143399425434,
                    -0.008680554758327559,
                    -0.0010741624478420757,
                    -0.02376235957891373,
                    -0.027471695765409188,
                    0.04733664971508018,
                    0.02287989728881834,
                    -0.004592497046382308,
                    0.008847066468659712,
                    0.02308200620697306,
                    -0.0017837763048029458,
                    0.04953465699553394,
                    -0.03219763519199604,
                    0.010912831040422063,
                    0.0014923701300384076,
                    -0.025777904685418022,
                    0.0030383691815074245,
                    -0.0057647516179833965,
                    0.016749077786374675,
                    -0.016857209888788093,
                    -0.02472750145278197,
                    -0.02140923820335024,
                    0.019171636951605266,
                    -0.03879822612432866,
                    -0.005600707030681408,
                    0.01410082776665096,
                    -0.010060664231924959,
                    0.04199472458893937,
                    0.0027613246150777104,
                    -0.005961984265783834,
                    -0.005650794739682515,
                    0.03443997338509406,
                    -0.01617440684139882,
                    -0.014312156083601198,
                    0.007761879259322815,
                    0.0048376142987570725,
                    0.022596237998781733,
                    0.030289612297554894,
                    0.008445425268772486,
                    0.0002934579732941993,
                    0.04322297436608472,
                    0.004593400277436813,
                    0.007726318619797053,
                    -0.018642693177829312,
                    0.05957795616034202,
                    -0.004038553817837461,
                    -0.0011701855646318174,
                    -0.014201455946678408,
                    0.024334760595341277,
                    0.00516936189506976,
                    -0.02600446059045211,
                    -0.007086629787818805,
                    0.019318050636473003,
                    0.010897016268483287,
                    0.020492997257997032,
                    -0.019670185781936193,
                    0.0009214885594932753,
                    -0.00465642868969957,
                    -8.549323971757457e-05,
                    -0.031749679910096196,
                    0.02115025536482971,
                    -0.03465639754873269,
                    0.021704619297927667,
                    0.007160078650172245,
                    0.008237215913177021,
                    -0.005200700278525689,
                    -0.007855256999467446,
                    -0.01102141246555307,
                    0.02565732204651575,
                    -0.0018589252291926184,
                    0.01810422426467993,
                    -0.055050581854148496,
                    -0.015879235836071093,
                    0.00037340036224110064,
                    -0.0034799370166828762,
                    -0.001008285089976517,
                    0.012739697417776226,
                    0.024942185720261953,
                    0.001955636933997897,
                    -0.024553691503805628,
                    -0.012342859895421434,
                    0.038570854263577745,
                    0.024554232319221225,
                    0.0017814375161127043,
                    0.007084158635757565,
                    -0.00222315904303346,
                    0.0019337545577811093,
                    0.02851174106156844,
                    0.0506686050257585,
                    -0.0038179268014204267,
                    0.003104873659269736,
                    -0.020952562646821042,
                    -0.004122895336810833,
                    -0.031617235390161105,
                    0.00036454900937660267,
                    0.04166008457089195,
                    -0.005220014511188721,
                    -0.0022433639346513354,
                    -0.06004838626645279,
                    -0.035481927844616346,
                    -0.030137576006130578,
                    0.013830459097344209,
                    0.012736450828237765,
                    0.029364249599603705,
                    0.01674883324256028,
                    0.00029921273896486004,
                    0.0003593675865395602,
                    -0.01569541389011451,
                    0.023151986166939652,
                    -0.03879625710787006,
                    0.014835843293495915,
                    -0.03626544444172272,
                    -0.006172673194512082,
                    -0.021792440819077528,
                    -0.015822364922716242,
                    -0.07030199419227927,
                    0.02930523696989517,
                    0.015523980304397214,
                    -0.04612000977270699,
                    0.0060451493731770575,
                    -0.0447669157134034,
                    -0.0565749571762305,
                    0.005352529668595932,
                    0.04034660241814144,
                    0.0038087276707578525,
                    -0.018530741301923927,
                    -0.023490458739919538,
                    0.004284600934857746,
                    -0.01340419930852866,
                    -0.008834095437280125,
                    -0.03661168069131162,
                    -0.003133837434178982,
                    -0.009576231442654487,
                    -0.03331501582643235,
                    0.030624693996751565,
                    -0.020848249394562937,
                    -0.009429817630339935,
                    -0.009761756523637087,
                    0.03858811637899525,
                    -0.02274453935785889,
                    0.023465981034712362,
                    -0.0012122711178702854,
                    -0.024472270778435733,
                    0.010935961463651422,
                    -0.004074754670967569,
                    0.04676419507327779,
                    0.01086928929530681,
                    0.012703746050997753,
                    0.00607566377218583,
                    0.0005480898769846554,
                    -0.005595779106549633,
                    0.05133797533849658,
                    -0.04175369436334415,
                    0.005917424075938695,
                    -0.022272114223523255,
                    0.025745294970222928,
                    0.027809026305161157,
                    -0.04003509252537771,
                    -0.018474302085085097,
                    0.0005769415288620075,
                    -0.029220166754643794,
                    0.03396081494134224,
                    -0.005695139463036093,
                    0.022104292784049503,
                    -0.026678773896452648,
                    0.03128788092812237,
                    0.008321780714942679,
                    0.011672282931925348,
                    -0.008535784723148697,
                    -0.03209784264716826,
                    0.051624392075678566,
                    -0.013468761206999299,
                    0.010780012306261102,
                    -0.02599525423163551,
                    -0.03719742739330739,
                    0.03645514047577716,
                    -0.017137663067170066,
                    -0.010912482709884236,
                    0.0028092553870405403,
                    -0.030640109810567872,
                    0.008700280255724604,
                    0.021596806448146186,
                    -0.04520676495018709,
                    -0.037744632845426715,
                    0.0035053263489121223,
                    0.0035400138369754137,
                    -0.0007566526620143112,
                    0.022706812008395465,
                    -0.012817246163296178,
                    -0.0035727307968731843,
                    0.04694705335281648,
                    -0.013818776266044068,
                    0.008434375217143422,
                    -0.05307990216816624,
                    -0.016073265925218412,
                    0.01368267421793581,
                    -0.01631353019008337,
                    -0.011259931514104432,
                    0.03146407069402415,
                    -0.0038256314304270177,
                    -0.039817392129743244,
                    0.009372175673405212,
                    0.01662366632813009,
                    0.027546508998645698,
                    -0.002373051292184137,
                    -0.028420151476610343,
                    0.03135090207752097,
                    -0.042993126228926655,
                    -0.015575635472937244,
                    0.0015662582157033183,
                    0.00751407302532061,
                    0.011992622970827906,
                    -0.01857646665007732,
                    -0.1251029135367106,
                    0.012854662321627694,
                    0.037541775760585365,
                    0.015798521276909953,
                    -0.01906766649813591,
                    0.02934549251195967,
                    0.026789378581083323,
                    0.04615361642677177,
                    -0.026710475914829654,
                    -0.010045762812507533,
                    0.020632058710684516,
                    -0.008419277847243478,
                    -0.0027125460912018453,
                    -0.046717906955220746,
                    0.023236116393018705,
                    0.005614345880435334,
                    0.022490467908499186,
                    -0.008035341777612587,
                    -0.02029484074624562,
                    -0.05284502865513694,
                    -0.031842819010534366,
                    0.006593643292453484,
                    0.003100010418912088,
                    -0.01151940930747435,
                    -0.0054581632591865084,
                    0.011510792391919107,
                    -0.04016193959982853,
                    -0.009301411254294269,
                    0.016392022091255818,
                    -0.007248339129557859,
                    -0.004409090602407149,
                    -0.003519925696507625,
                    0.020604122429080884,
                    -0.020191277693076787,
                    0.0036212913688650804,
                    -0.001616572254342979,
                    -0.005855398110827534,
                    -0.03768587246761729,
                    0.028979496148819853,
                    -0.008166683632159196,
                    0.01790745571928755,
                    -0.032312092012179015,
                    0.0005113163978953792,
                    -0.0025455804555257634,
                    0.008086443102798851,
                    -0.03890129345859294,
                    -0.0026858190821114785,
                    0.0002995676596476219,
                    0.013629684503768577,
                    0.014929427865313405,
                    -0.013660484746971098,
                    -0.02847601840053084,
                    0.014872914424417443,
                    0.012670260804409637,
                    -0.0054647992558772415,
                    0.0074657474659258205,
                    -0.0017276755366374495,
                    -0.01842281390864219,
                    -0.03772440232153601,
                    0.01838625865356856,
                    -0.006743366735236188,
                    -0.008993740948722672,
                    0.006709220846723416,
                    -0.024136187770891996,
                    0.0058217890087515455,
                    -0.02214681566957431,
                    -0.03803948004724992,
                    0.02041942106424516,
                    0.013129406939014448,
                    -0.006489908711661323,
                    0.02831449540674721,
                    0.00596360735078204,
                    -0.015330015700806245,
                    0.00784416609279334,
                    -0.020917361187178813,
                    0.03760430543692118,
                    -0.004791863708221104,
                    -0.005186333272786752,
                    -0.016309003016967142,
                    -0.0008544231116249432,
                    0.0694909551241344,
                    -0.010378919005479012,
                    0.014517508830820897,
                    -0.003662534776108886,
                    0.013843283286368614,
                    0.00010996419818463269,
                    -0.0030160729674660073,
                    -0.0013746579981324298,
                    -0.010413998118438232,
                    -0.0013575793547618118,
                    -0.00040154688961033686,
                    0.037036134254913936,
                    -0.0034848730800612166,
                    0.010922545161647906,
                    -0.03565557725616356,
                    -0.048742263434174905,
                    0.015459821291229678,
                    -0.027244329757166036,
                    0.006846284636128645,
                    0.008439679020890451,
                    0.022287088247088326,
                    0.0171895082886362,
                    -0.010942002005831933,
                    -0.04157218071589358,
                    -0.017228976795666012,
                    -0.004561587426795911,
                    0.0023478321937598617,
                    0.005531400594740486,
                    -0.013459992171955046,
                    -0.012426877996753564,
                    0.020164903574011434,
                    0.03475226881729661,
                    0.004496347380724952,
                    0.029884324998023886,
                    -0.0022306810701779494,
                    0.007504974943748016,
                    0.026727875605681514,
                    -0.049444018309229364,
                    0.0021802155722623717,
                    -0.008399867573776868,
                    -0.03211904626353519,
                    0.019568652600444252,
                    0.034797475893784076,
                    -0.014829965939505963,
                    -0.04090710507340086,
                    0.012383744918443301,
                    -0.008966831060852469,
                    0.04764178466601771,
                    -0.007882199495362363,
                    -0.014087257395001794,
                    0.005598197048201832,
                    0.023662475300151965,
                    -0.007653250542764237,
                    -0.003352741998322947,
                    0.004139333632540531,
                    -0.015752403252907943,
                    0.0018800713051813505,
                    0.013291832254984174,
                    -0.008122207784133867,
                    -0.02329548867712901,
                    -0.00046428158004146336,
                    -0.01104526753360849,
                    0.010328399386613975,
                    0.013340298267343892,
                    0.018536494783392334,
                    0.013118061087072877,
                    -0.02371760483264543,
                    0.009817113648547721,
                    -0.006020817465506871,
                    -0.011277702571461235,
                    0.030284135012502555,
                    -0.04397851144871654,
                    -0.008912977380535753,
                    -0.016826141555759424,
                    -0.050220928448698736,
                    -0.020930541419566965,
                    -0.022688491379226478,
                    -0.015551573582358626,
                    0.048187379647620036,
                    0.012167179704332913,
                    0.025680548325376095,
                    -0.020922755475920884,
                    0.01255691696544904,
                    0.010786334279764625,
                    0.027318689064689233,
                    0.03032598891992935,
                    -0.0015141456385086478,
                    -0.005421904415948947,
                    0.030523935663239164,
                    0.004326607226962675,
                    0.015362825720636911,
                    0.025396282788871596,
                    0.036555156775271824,
                    -0.009041914031448876,
                    0.03217691650605439,
                    0.05674190730376486,
                    0.04356685648265248,
                    0.03142235840736018,
                    -0.009693899414986482,
                    -0.019069870161148614,
                    0.011916041159224892,
                    0.010016232629809158,
                    0.0031965194541705402,
                    0.04801180760354143,
                    0.03145878165628006,
                    -0.011013972015986757,
                    0.029310252089861814,
                    0.006256539258188798,
                    0.0035446490847418615,
                    0.02760526630633226,
                    0.06392986753544884,
                    0.05066396728105133,
                    0.022111615495230757,
                    -0.005779295166185008,
                    -0.010028959452898136,
                    0.0007074018515832445,
                    0.009654547702572635,
                    0.017689139451938958,
                    0.03333810051118534,
                    0.03395223909982666,
                    0.04949830063033672,
                    0.045161865995163725,
                    -0.00016791021577707455,
                    -0.017814727347896155,
                    -0.011030784248513715,
                    0.025021280694169513,
                    0.028666951838153685,
                    -0.00465109439287083,
                    -0.044612608417248616,
                    0.03603722308429172,
                    -0.01682489225322653,
                    -0.00041821556404357004,
                    -0.01176811628381423,
                    -0.00046268550730965165,
                    -0.02373865044570566,
                    0.00017579727796468013,
                    -0.034727217154005334,
                    0.020982631008041708,
                    0.004257677107930883,
                    -0.008454447215818365,
                    0.018608513509429627,
                    -0.0135536125797511,
                    -0.011369084640899476,
                    0.02385358611324717,
                    0.013007709798438809,
                    0.013701975257502434,
                    -0.007028563589817049,
                    -0.00800968283418754,
                    0.03970654477637183,
                    -0.009740678524410845,
                    -0.03985536788731449,
                    -0.012587311885827923,
                    -0.031230250866613993,
                    -0.013133590062642456,
                    0.02069514288423511,
                    0.001990341850250558,
                    0.008620955910376345,
                    0.012877856800560295,
                    -0.036530981205106554,
                    -0.01115215456174106,
                    0.03283659935061135,
                    -0.03182588039791225,
                    -0.008536321718446371,
                    0.03555756838885591,
                    0.02470126179874342,
                    -0.008561854847816725,
                    -0.017357328445365333,
                    0.01784323451613741,
                    -0.015831535335769704,
                    0.0037033568905458746,
                    -0.017556105724728162,
                    -0.022389824393238597,
                    0.03908708724619193,
                    -0.02439672746376977,
                    0.02479900914694566,
                    0.029633841845744063,
                    0.0004464137568001631,
                    0.02061047552258156,
                    0.016292226142830237,
                    0.03619829686925358,
                    -0.0007108956351843353,
                    -0.011414553433302534,
                    0.008097544889209935,
                    -0.005122917789364365,
                    -0.020840203700179336,
                    -0.004584418725831089,
                    -0.030049897751294907,
                    0.019600393137553778,
                    0.01415020201757015,
                    -0.0026784226785977008,
                    -0.00048824802932348764,
                    0.013677396052095893,
                    -0.001988832833002852,
                    0.01197294125082333,
                    0.010154125830009606,
                    0.012210630893573816,
                    -0.006906881583173438,
                    -0.05755036969415015,
                    0.029084593370347023,
                    -0.013800213490421678,
                    -0.0021769015630818452,
                    -0.000516303089978961,
                    0.0007082722362779314,
                    0.007955591808721492,
                    -0.014923518949997983,
                    -0.011042933124996534,
                    -0.014621038124401582,
                    -0.05932041488133672,
                    0.002221186137843006,
                    -0.028562239548876114,
                    -0.007632588649675895,
                    -0.02863964699964793,
                    -0.006148143148804965,
                    -0.004307703975231989,
                    0.0072807218900746784,
                    -0.033784382305082905,
                    0.017123539207397034,
                    -0.004080559519634483,
                    0.006341370495423723,
                    -0.012681349898631376,
                    0.007131878680001917,
                    0.00791628104580653,
                    0.0173830966437208,
                    -0.026155609893398993,
                    0.011507680179266925,
                    0.03166727333027215,
                    0.0329376938183686,
                    -0.019695869132433916,
                    -0.011097424932760334,
                    -0.01879423456481413,
                    0.018929759947772448,
                    0.01624681145139677,
                    0.010273624584922883,
                    0.002963550020149824,
                    0.03939748934749203,
                    0.046078711848853024,
                    -0.020632990244464824,
                    -0.02259626965705893,
                    -0.02031869924852688,
                    0.000756153760596355,
                    -0.0002482493190942747,
                    0.0183239168313757,
                    0.008650700345337473,
                    -0.029169719645039536,
                    0.0004352837553544229,
                    0.006137682467146096,
                    0.01188488816696246,
                    -0.0009759819117453023,
                    -0.007011033880788307,
                    0.007716826152892736,
                    0.01343707672216504,
                    0.005594799584354027,
                    0.02192780688686601,
                    0.021919948344931252,
                    -0.03473464294527704,
                    0.04211862413036912,
                    0.014172136427928177,
                    0.009727604625803434,
                    -0.02737765862202849,
                    0.009927580063137586,
                    0.021732349969678308,
                    0.01793539855708964,
                    0.006725261600543874,
                    0.02413162437538393,
                    0.0017383053344018522,
                    0.003973378849144647,
                    0.00965254168219822,
                    0.028023805986724805,
                    -0.009953899171983823,
                    -0.04926462982253284,
                    0.09577230585752755,
                    0.014980180703897094,
                    -0.00630204508148169,
                    0.03930723506939488,
                    -0.008033718227315486,
                    0.00985577198726564,
                    0.008690739724896092,
                    0.021480284426460175,
                    -0.0021304997677717846,
                    -0.0067212939807412934,
                    -0.022437558648748128,
                    0.03294007038428116,
                    0.013198097654981445,
                    0.001927600921069049,
                    0.011684235698112298,
                    0.01820471558729829,
                    -0.012206789173358351,
                    -0.0032981358363882206,
                    0.014105664406137877,
                    0.012314304251107685,
                    0.03454917036476985,
                    0.002734761553114991,
                    0.01787277921269257,
                    -0.015855151188059646,
                    0.0025412196623598705,
                    -0.005874316764910694,
                    -0.013828672685357589,
                    0.010188275244303865,
                    0.016915131096476674,
                    0.012386839260498439,
                    0.013508943783333817,
                    -0.018190353881288254,
                    -0.03369166549023797,
                    -0.01652481427697885,
                    -0.0031412458446976386,
                    6.303379232140388e-05,
                    0.01270954826382086,
                    0.017172683361556407,
                    0.015210372211127575,
                    -0.008762893861265126,
                    -0.04524732446929668,
                    0.0007781661215352363,
                    -0.013112297047809345,
                    0.006044989069078551,
                    0.00637096598236609,
                    -0.00046103762873163926,
                    -0.0010588048210617986,
                    0.006749671535283267,
                    0.008308484892221345,
                    -0.0032046224100823638,
                    -0.005099875612089938,
                    -0.015099022736158164,
                    0.003882634434397206,
                    -0.01506693649366484,
                    -0.019879487763882743,
                    -0.04976931025007441,
                    0.008622130512294249,
                    0.003505086057664495,
                    0.005003112485413574,
                    -0.009132016771592463,
                    -0.056049512847155515,
                    0.020496389204540534,
                    -0.016843559638463228,
                    -0.031029120601370783,
                    -0.027492217934214937,
                    -0.013987342808230658,
                    -0.017059387764911407,
                    -0.005609946949130325,
                    -0.04510198762170426,
                    0.03464094949672634,
                    -0.030411869460538605,
                    -0.019320828475642933,
                    -0.021393976235361253,
                    0.0036524852757410854,
                    0.004915247966531597,
                    -0.02322462594019204,
                    -0.004197174689416799,
                    0.0148764999034808,
                    0.0018607605859767714,
                    0.03802808417467884,
                    0.019924073929014945,
                    -0.027744906429774646,
                    -0.021675533421828375,
                    -0.0056098406439273486,
                    -0.01288378767025996,
                    -0.006698272383640433,
                    0.002135940962323097,
                    -0.03234194195080478,
                    -0.01195551333294583,
                    0.016387866171933312,
                    0.016233929406475844,
                    0.010986834717424858,
                    -0.01618405754688694,
                    -0.004141524201579712,
                    -0.012182363066612599,
                    -0.007944261088501325,
                    0.040236740386201564,
                    -0.014020829040616023,
                    0.01008141338280251,
                    0.017867280143365204,
                    0.006769545766361749,
                    -0.008281806539547748,
                    0.009314175235933203,
                    0.013469224572572236,
                    -0.04536754000735388,
                    0.0012697006566386778,
                    -0.022082278293814206,
                    -0.002136456610820219,
                    0.0052266808979115585,
                    0.013842891194431033,
                    -0.008024830940929113,
                    -0.028815771326796854,
                    0.03380832095107363,
                    0.010393002053315937,
                    0.0001739951652333787,
                    -0.0021201323941142055,
                    0.011017400804294829,
                    -0.0013572026446506014,
                    0.023228186124445,
                    0.002651646274576678,
                    0.029557826156339537,
                    -0.02066806611171055,
                    0.04756836788410015,
                    0.004585836922232539,
                    -0.0022380428708801653,
                    0.041371850696580934,
                    -0.021906354624073403,
                    0.031107399208125316,
                    -0.025335468418291467,
                    0.012074657116599712,
                    -0.0004236603644821366,
                    -0.035417195166756885,
                    -0.0025390770916944596,
                    -0.0017668536034772602,
                    0.012382832688466414,
                    -0.008201232695355559,
                    0.036780174533627516,
                    0.021512644460561146,
                    -0.03467912321218256,
                    -0.032905094860605916,
                    0.022607563434409613,
                    0.01641558010102959,
                    -0.0170367816648474,
                    -0.009662635339226964,
                    0.01161219949081219,
                    0.006260752881440085,
                    0.004650182591397939,
                    -0.01861682443933706,
                    0.0003444680287276285,
                    -0.03141667874698724,
                    -0.016110360627184572,
                    -0.008817968681866266,
                    -0.021997227878876955,
                    0.028837649614991485,
                    -0.006491382469022194,
                    -0.02302029251842483,
                    0.015163904177751876,
                    0.008323217496183706,
                    0.010345843498288364,
                    -0.01432226326269399,
                    0.013483427494940439,
                    -0.02693600764548812,
                    -0.002972985268370615,
                    0.026117467929440155,
                    0.007184296088560527,
                    0.020499487185345777,
                    -0.023825064343892075,
                    -0.005211319796132627,
                    0.008988087955794428,
                    0.006744341743285493,
                    -0.016690897377071974,
                    -0.032693203818632874,
                    -0.014570082579698725,
                    -0.006925452769841708,
                    -0.024467345400563837,
                    -0.027767779509475374,
                    -0.02005749183087643,
                    0.04576702185126995,
                    -0.023307728382201312,
                    -0.013976612057275663,
                    -0.025326197546837403,
                    -0.02645715037660115,
                    0.02082676636618396,
                    -0.0046119967533949655,
                    0.010316165909981976,
                    -0.003553185893528301,
                    0.030676870754072945,
                    -0.006332666321206112,
                    0.030038151623030945,
                    -0.0035824376464780126,
                    0.019664718638293954,
                    -0.007310588740782842,
                    0.012769407892598951,
                    -0.02735606940650193,
                    0.02814346635258831,
                    -0.010174880410968893,
                    -0.03205488368934276,
                    0.013593319147191694,
                    0.019326689008542276,
                    -0.006923343624774728,
                    0.014775310762333101,
                    -0.011354518129840774,
                    0.015755825710790528,
                    0.01079037482315242,
                    0.00969679409407913,
                    0.007116870229243279,
                    -0.015795239759021282,
                    0.03201217817339017,
                    0.0028467613714150334,
                    -0.021981528901976934,
                    0.014220076309041657,
                    -0.0031070179672760896,
                    -0.017470395625537604,
                    0.05914585059092122,
                    0.024079520265179767,
                    -0.0006829787094020313,
                    -0.0169272490393373,
                    0.043684488420992644,
                    -0.019225805415465518,
                    0.02997393797241129,
                    -0.03283326048123652,
                    0.015214627429721789,
                    -0.004168892902801424,
                    -0.04287135908748013,
                    -0.005112133290894215,
                    0.001429808991063795,
                    -0.04286289573608935,
                    -0.0028156518011590932,
                    -0.011194250634321612,
                    -0.006635802502008164,
                    0.016403423860732,
                    -0.02481778611174165,
                    -0.022579204133317068,
                    0.0008322768767706432,
                    0.04789586486714229,
                    -0.0032130287844291906,
                    -0.008936059360519558,
                    0.02370617734327638,
                    0.02144244607390122,
                    0.010443568068286871,
                    -0.024440889217196716,
                    0.020239602534301255,
                    -0.024122970374518698,
                    -0.009535133884858571,
                    -0.015785992456495798,
                    0.018604528217880875,
                    0.008322757078780324,
                    -0.01280827029270674,
                    -0.025877788829252835,
                    -0.00695728600327218,
                    0.03546489122683526,
                    0.009846427743389823,
                    -0.007375799227204087,
                    -0.020166042163245957,
                    0.04806521364967856,
                    -0.02997565071494168,
                    -0.010564308508405661,
                    -0.03883213919076764,
                    0.01609284064516043,
                    -0.0037506106094232954,
                    -0.0005914424244781452,
                    0.021628994812862363,
                    0.009582404574900484,
                    0.03292376365837763,
                    0.004569674482526283,
                    0.012209125217703634,
                    -0.02009529012416926,
                    0.01083524070758825,
                    -0.03079481585644925,
                    -0.020841290024104977,
                    -0.008131888822198145,
                    -0.02015293502491202,
                    -0.022215582259716458,
                    0.023251219011810324,
                    0.011870066627847592,
                    -0.0026237044719987115,
                    -0.01814973829404577,
                    -0.016922685899200682,
                    0.0015459851878942283,
                    -0.013802100184434,
                    0.03239183317085277,
                    0.02839886823092944,
                    -0.010095779401253148,
                    -0.010826938390559664,
                    -0.0015447714200921548,
                    -0.021568729531113384,
                    -0.014947649269178754,
                    0.026433282271809147,
                    0.024351922250634622,
                    0.0028820183429663004,
                    -0.002350240642551514,
                    0.02729625706565594,
                    -0.0055474916780690825,
                    -0.04151519644429097,
                    -0.034844641344292805,
                    -0.014153806942006415,
                    -0.02773589702623111,
                    -0.007581426237739911,
                    0.008101829814822593,
                    0.016814543744412176,
                    0.0031591450173901288,
                    0.0280690123423656,
                    0.0005666134508374009,
                    -0.0033556507895091776,
                    0.02246326547595538,
                    -0.017751905351898734,
                    0.015965193769850276,
                    0.03781267814224696,
                    -0.03142829331266697,
                    -0.005946667014941661,
                    0.022412235800689687,
                    -0.05395806804757235,
                    -0.009704653192906823,
                    -0.0033670422514578296,
                    -0.0012055579899859197,
                    -0.0011538536940070632,
                    -0.009290892059241605,
                    0.019482077910843786,
                    -0.02415908626509675,
                    0.042046158150608415,
                    -0.04693040302580372,
                    0.01188254320812653,
                    0.003209562689945035,
                    -0.010279261884944947,
                    0.01586628260890052,
                    -0.02080123635445955,
                    0.0014600978406276433,
                    0.014877346466978627,
                    0.015962402966657567,
                    -0.01919875909157129,
                    0.030404326025094647,
                    -0.012972605651911691,
                    0.017638531629046886,
                    0.008008277208334975,
                    0.031253876312380906,
                    0.011847125544106702,
                    0.006170689728813172,
                    0.003646296010883458,
                    0.04022035258740219,
                    -0.011647784046178682,
                    -0.014770173482933703,
                    -0.004044432322861827,
                    0.016376675310138415,
                    -0.023290602545667987,
                    0.022864792390864763,
                    0.047656537652544954,
                    -0.03096223739269042,
                    0.00557093908164133,
                    -0.0024212729902806838,
                    0.012731417064654131,
                    0.025444525490640205,
                    0.01590032735472769,
                    0.021828320399102884,
                    -0.011577877245426008,
                    0.014971248553508329,
                    -0.006314097278465685,
                    -0.001292425263180184,
                    -0.004344127827568875,
                    -0.00948917767935439,
                    -0.0011373415970725312,
                    -0.013331141373908504,
                    0.01835748258277851,
                    0.03190219289029809,
                    -0.01931802259820645,
                    0.006479826639493715,
                    -0.0008711536101822509,
                    0.006719207871467933,
                    0.014580013853283462,
                    -0.0032467550544285234,
                    -0.0017456026600895123,
                    -0.005760756638480362,
                    0.02730196920647311,
                    0.03621471553936244,
                    0.007406266877711264,
                    0.02926964654282284,
                    0.02604993531226333,
                    -0.02124032315365081,
                    0.017263492677531075,
                    0.006930855707071511,
                    -0.014321113194890281,
                    -0.006919355165997792,
                    -0.04474386489272162,
                    -0.0017087374438779568,
                    -0.016951532814027087,
                    0.003279391072227996,
                    0.01893568169841241,
                    -0.02222116050862783,
                    -0.0032939882431138687,
                    0.028956065294829005
                ],
                "patchEmbeddingsDiff": [
                    0.00476564775003148,
                    0.013748245321814033,
                    -0.05537379388601348,
                    0.06993622389763242,
                    -0.007494848060530925,
                    -0.017511736321148025,
                    -0.03137756168440227,
                    0.003416433927049017,
                    0.012452917866383785,
                    -0.08177676271681775,
                    -0.009383359300084736,
                    0.0005124354971665431,
                    -0.037600140654534084,
                    0.021023481797011905,
                    0.011838871692806728,
                    0.006774971131447172,
                    -0.002805136527726259,
                    -0.05391259285158029,
                    -0.020930889643998262,
                    0.0019884663086654378,
                    0.010331871345252918,
                    0.022373720400088958,
                    0.026218854735690272,
                    -0.01720402971146258,
                    -0.022466194945008896,
                    0.01912750852480098,
                    0.03332046922737681,
                    -0.030402004669359623,
                    0.007358264088472435,
                    0.019744644283453818,
                    0.008687705402966522,
                    0.008321264737409935,
                    0.0007863705608539571,
                    -0.04172587581382842,
                    -0.01995886138475164,
                    -0.02159706990923366,
                    0.026112737823371434,
                    -0.003632209656017621,
                    0.006507489027245524,
                    0.02624795228049237,
                    0.022772760262648534,
                    -0.03518412921654298,
                    0.09673057800540662,
                    0.008549424471216836,
                    -0.013141225687404874,
                    0.014394846655073896,
                    -0.020181868218888486,
                    0.01968430226823055,
                    0.037038516576552744,
                    0.012821178877966957,
                    -0.007480714096708131,
                    -0.01578733007240974,
                    -0.03953632862818864,
                    0.06341885893564586,
                    0.046030532811334,
                    0.06470831719817277,
                    0.057268227406465026,
                    -0.019126214127274308,
                    -0.03291146853181919,
                    -0.012244432923588816,
                    -0.014611506539389816,
                    0.015302930966859566,
                    0.016806774099653685,
                    0.041246873145526705,
                    -0.039441314023834294,
                    -0.022440955491016296,
                    -0.02538032022305127,
                    0.04228013830713677,
                    0.02672413287226635,
                    -0.04290779078441045,
                    -0.05871192261199,
                    -0.013332428162596423,
                    -0.0020803954786173333,
                    0.04367778401992613,
                    0.01564531896985723,
                    0.0014042445693882469,
                    -0.014346467781163002,
                    -0.020909638746856432,
                    -0.02544405402112042,
                    -0.03476720158767565,
                    0.004264608209799831,
                    -0.013194859515612771,
                    0.06744297667918177,
                    -0.025732155011548855,
                    0.01073906208827181,
                    -0.025317768337523992,
                    0.02923285616774637,
                    0.013789779739675264,
                    0.005046647181789526,
                    -0.027254484391421124,
                    -0.026127437039777802,
                    0.03369342451121902,
                    -0.0168007579931902,
                    0.008092321340158342,
                    -0.04228794718274579,
                    0.029587516366555544,
                    -0.017744357969743555,
                    -0.0263673152660364,
                    -0.021659111071971965,
                    0.044798296517391714,
                    0.015107750150686704,
                    -0.0034471360988716573,
                    -0.011657747041078519,
                    0.000918144227622824,
                    -0.02694282544388872,
                    -0.008727281993661733,
                    0.04064464482195821,
                    -0.031122598909860785,
                    -0.011904188462974623,
                    -0.003138309292126788,
                    0.010118563834394254,
                    -0.005365957749812501,
                    0.025374957287602373,
                    0.006247883270037043,
                    0.013906316359643107,
                    -0.014278056730562937,
                    -0.04025772665122248,
                    -0.022261983760763465,
                    -0.01331095799144222,
                    0.012628934702363136,
                    0.039786898944880564,
                    -0.018351672954923518,
                    -0.031551847680122605,
                    -5.931873696148394e-06,
                    -0.013495558655739459,
                    -1.5108919468411235e-05,
                    -0.026718308322833353,
                    0.03081491943685117,
                    -0.011056171253364645,
                    -0.026507013881782684,
                    0.05622546939697249,
                    -0.03356126999621743,
                    0.02515949323815588,
                    0.0012268561250400767,
                    -0.01592771213597472,
                    -0.011252879570153673,
                    -0.01659135025824612,
                    0.0007917788727805255,
                    -0.023762211070244562,
                    -0.02816148894300922,
                    0.017866432358593153,
                    -0.01630606101966711,
                    0.03424269472206712,
                    -0.014618893198659963,
                    0.0661114129384663,
                    -0.001353567681549564,
                    0.019047682448645475,
                    0.0571230895786606,
                    0.0175373282247774,
                    -0.010268014216305268,
                    -0.014246347243623022,
                    -0.022038836481556856,
                    -0.00014659139480475237,
                    0.03686905875684038,
                    0.02852258155959917,
                    -0.029947626687809013,
                    0.015169540736053895,
                    -0.03677010873665767,
                    -0.044588243783881855,
                    0.021251626393499687,
                    -0.0005075033428454447,
                    -0.03737979974021273,
                    0.008174492188366285,
                    -0.028407356237290127,
                    0.028685288557214292,
                    -0.004070285567121197,
                    -0.013114813246243723,
                    0.013945970430070596,
                    -0.02296198238430467,
                    0.03896081592831051,
                    -0.0350839622652078,
                    0.04195527766442672,
                    -0.00800065630238262,
                    -0.005003497301024414,
                    -0.03408179644183006,
                    0.05195990219469688,
                    0.020340715178898308,
                    -0.02644947866966072,
                    0.003306783049315481,
                    -0.0068219473168954345,
                    -0.017695582220640327,
                    0.0018804621345645397,
                    0.024263641528693928,
                    0.03922210549157327,
                    0.002570125499680407,
                    0.0056195194674106275,
                    -0.028229014016110197,
                    -0.014863535383461995,
                    0.022511418446110036,
                    -0.02676449612236355,
                    0.018068164217387044,
                    -0.032368774249016,
                    0.04482330787615023,
                    -0.005529181355602152,
                    0.0716393011962546,
                    -0.009453926865676174,
                    -0.05013108244822895,
                    -0.010841665777347468,
                    0.006978070888416751,
                    0.03162462383116077,
                    0.014506141604552276,
                    0.0006334680796291538,
                    0.029658638597465006,
                    0.008180963954651543,
                    -0.03309110677354701,
                    0.02790383812959173,
                    -0.0066058707186278905,
                    0.03829161297651449,
                    -0.022649423381327857,
                    0.020081802190973393,
                    0.05410147787265954,
                    0.020860704742574593,
                    -0.021682152978365885,
                    -0.014036267384604267,
                    0.007963170070016677,
                    0.002616741582360167,
                    -0.03594035574808425,
                    -0.028446969496630514,
                    -0.0355649863014879,
                    0.03652533380406994,
                    0.03575503999980145,
                    -0.0328633845658077,
                    0.029267792110583488,
                    0.052137407904540675,
                    -0.02350004872463522,
                    -0.026744460711846395,
                    -0.0006069928637024349,
                    0.011710256756710285,
                    -0.04050324039994231,
                    -0.03071308572022526,
                    0.020367088640251673,
                    -0.009992334307128236,
                    0.028089904034585864,
                    0.01948264093632478,
                    -0.03452123243647084,
                    -0.04426395300240057,
                    -0.0018702635573996243,
                    0.012470040641689188,
                    -0.0381604763052262,
                    0.018004050367133814,
                    -0.03114270610535407,
                    0.025446524654398124,
                    -0.01997696641790241,
                    0.0003193972267180821,
                    0.03398434216401942,
                    -0.006370143775525313,
                    0.018719354668444262,
                    -0.031464843894964546,
                    0.054800171760607495,
                    0.014210149112400448,
                    0.04867897049179488,
                    0.0022100183377047385,
                    -0.035366717442414354,
                    -0.04343160582874927,
                    -0.014634666496375705,
                    -0.015216903954226667,
                    0.00896528383467372,
                    -0.01315153887654325,
                    0.0014107977562437784,
                    -0.04976728506302024,
                    0.005942354902482363,
                    0.03690859666845993,
                    -0.011225995537281932,
                    0.012510029605279388,
                    0.02053818268379283,
                    -0.05603753850780317,
                    -0.02372075256457039,
                    -0.003712717413317391,
                    0.019679660829949704,
                    0.0732529426810679,
                    -0.04553822557868934,
                    -0.03126990437425688,
                    0.024520457443024005,
                    -0.005990001562209823,
                    -0.001570615933575268,
                    0.03463870311075343,
                    0.01818250279148846,
                    0.002247637976502264,
                    -0.04331053927475428,
                    -0.005167691641653029,
                    0.027004507099774876,
                    0.021234803485601167,
                    -0.07412354970501957,
                    0.01236767856957773,
                    -0.003487995251731692,
                    0.013256087309679282,
                    -0.0065910787320679525,
                    0.015304184431972916,
                    0.01493126548397557,
                    -0.012319630065075186,
                    -0.04539700315118743,
                    -0.0048974959192682795,
                    0.06260816565479041,
                    -0.03783574473597625,
                    0.017816445986099917,
                    0.025721015590588914,
                    0.011914968259388434,
                    0.021024907647253923,
                    0.02501847499067316,
                    0.02124081964666104,
                    0.02637235307252236,
                    -0.023052755455862113,
                    -0.029032988604114237,
                    0.004948877210701184,
                    -0.026486713218897454,
                    0.014991884688062644,
                    0.0465202552411765,
                    -0.007905463248496426,
                    -0.017393574519928578,
                    -0.042171206852359616,
                    0.0009987987054956907,
                    -0.02181327473705428,
                    0.02409096942789001,
                    -0.011420698603471158,
                    0.04294593218676677,
                    0.006129561098945888,
                    -0.012076880991638563,
                    0.007455766698742947,
                    -0.013122129520677485,
                    0.007744069182799909,
                    0.023565963348397497,
                    0.01800945876269229,
                    0.02728886656342262,
                    -0.08439080902513421,
                    -0.018730796677921845,
                    -0.05268787037154425,
                    0.0005662148580067384,
                    -0.0006106075865823814,
                    0.028903834816608062,
                    -0.0023475067583051206,
                    0.003600608847632885,
                    0.032297105236363796,
                    -0.019439463817317315,
                    0.029213523367632242,
                    -0.01677647431087963,
                    0.0013853507859425088,
                    -0.0192677695249271,
                    -0.027590424156679005,
                    -0.04646420133433738,
                    -0.024800511583560673,
                    -0.017822561478404206,
                    -0.041629789061536665,
                    -0.05314476753570695,
                    0.0009586232217601065,
                    -0.018903100062341142,
                    -0.013459349580076621,
                    0.010353967346454915,
                    0.013325385865267068,
                    0.03540668135982601,
                    -0.033272275291788174,
                    -0.019287345417101625,
                    0.033571276443571635,
                    0.00635202762490428,
                    -0.03662528727288007,
                    -0.03589456720272571,
                    -0.04474025981357409,
                    0.017577100487175104,
                    0.006528890005335018,
                    0.00637168469814173,
                    -0.04078049774080061,
                    0.026819370469025872,
                    -0.032030184108308414,
                    0.03323701061603843,
                    -0.012097444725889318,
                    -0.016526180981831333,
                    -0.026166294895207727,
                    -0.01712592879986547,
                    0.02627921192050956,
                    0.007049830332760344,
                    -0.049955456871809883,
                    -0.02645988186168735,
                    -0.027517095164440654,
                    0.03350274949810344,
                    0.03783404749452605,
                    0.01039542477871541,
                    -0.024759021533369778,
                    -0.006104807395937736,
                    0.01204277837380354,
                    -0.01920520525723739,
                    0.023419429086557312,
                    0.0131518775508022,
                    0.017481339616347923,
                    0.029743279371372628,
                    -0.028207524569408057,
                    0.02214689284386178,
                    -0.041630821715575264,
                    0.031102662464996683,
                    0.002653378667287085,
                    0.02334011252815842,
                    -0.029433783590766465,
                    -0.01785757046540144,
                    0.039930975041198934,
                    0.03335575943304141,
                    -0.05739861699906899,
                    -0.031139136576054348,
                    -0.014075310427102956,
                    0.01989194421191644,
                    0.055587223205036174,
                    -0.04413480805502607,
                    0.02301311384207146,
                    -0.026381541572780665,
                    0.021176596318368743,
                    0.0008987258196179131,
                    -0.004070185736877852,
                    0.035799413166629386,
                    -0.045473091581498315,
                    -0.0029529468219610523,
                    0.004224853185240345,
                    -0.005544674621071939,
                    -0.03666016659727958,
                    -0.023020543748311816,
                    -0.061857850467444506,
                    -0.007611973247762847,
                    0.04485855643026348,
                    0.011780543858254292,
                    0.017834354959463544,
                    -0.0016775341980710806,
                    0.03368536566699158,
                    0.015526329528931833,
                    -0.040760236293907834,
                    0.005695346179990766,
                    0.018767227514380508,
                    -0.010635660195026415,
                    0.012636517020888905,
                    -0.011506579670428058,
                    0.022966988953642485,
                    0.018810960650399163,
                    0.006158122987282947,
                    0.016457379125370562,
                    0.01788328410654298,
                    -0.02161099336668133,
                    0.014126482122560147,
                    0.003787646709719436,
                    0.005637427608890577,
                    -0.032927264646106895,
                    -0.029122184807139132,
                    -0.0017435214638399528,
                    0.0028460084453665394,
                    -0.00658484034134763,
                    -0.011317754842329128,
                    0.04140815827240753,
                    -0.004399020408714589,
                    -0.009616002755553393,
                    0.0003225067354418314,
                    0.05200659800436637,
                    -0.00808248868516333,
                    0.01225393408202795,
                    0.020716463418445918,
                    0.0032290110054095274,
                    0.03108827521510188,
                    0.0033376800883540302,
                    -0.04302413915698729,
                    0.0072813769787321014,
                    -0.009163967130952976,
                    0.006384030293863496,
                    -0.013579441783755941,
                    -0.005286483084138127,
                    -0.00011306967195635469,
                    0.011262589627453226,
                    0.01211880421004289,
                    -0.005794400434294852,
                    -0.025586560443073978,
                    -0.0022176392516519636,
                    -0.002293763832568307,
                    -0.014897038263113832,
                    -0.025139694913761498,
                    0.016160204409780388,
                    0.023641072548050264,
                    0.05206996044503553,
                    -0.023869573939162874,
                    -0.00922368541519847,
                    -0.0111992657385967,
                    0.050736044160974894,
                    -0.021347508233908335,
                    0.026516848939282398,
                    -0.006061843033200507,
                    -0.061230874551241425,
                    -0.01565053931691944,
                    0.04200067479325071,
                    0.031386948211088006,
                    -0.004586629877986429,
                    -0.0025489890548277185,
                    -0.018829352962850036,
                    0.007855558235541108,
                    0.030401923022641577,
                    0.03315346363468243,
                    0.06038075776454964,
                    -0.023483315282738036,
                    0.014898907991264667,
                    -0.040551741359110306,
                    0.03919785510430249,
                    0.01058797920376122,
                    -0.006964432091225508,
                    0.0028643022456797847,
                    -0.030652593133664856,
                    -0.04620680377050809,
                    0.042116940939947264,
                    0.017501124675457187,
                    -0.03671417777268051,
                    -0.046889412659029295,
                    0.007003941249324733,
                    -0.0067776135483612766,
                    -0.006417575691655067,
                    -0.0327739190153473,
                    -0.011530215786074436,
                    0.03418091374443477,
                    -0.042420472833903974,
                    0.022610357570859944,
                    -0.012935238182479759,
                    -0.00402251364411966,
                    0.024096431816952615,
                    -0.010766062053078162,
                    0.021450260831216126,
                    0.011519764803653798,
                    -0.005765342141644599,
                    -0.029267677963375118,
                    -0.026338049689965073,
                    -0.022397914768937897,
                    -0.0136333627936638,
                    0.0028812544568666905,
                    0.0299074593959144,
                    0.013460617242625312,
                    0.002066639190813974,
                    -0.0014605328436283092,
                    0.011297808716559955,
                    0.019355811275911475,
                    -0.03601998059418901,
                    -0.027266259022890905,
                    -0.014604333497119898,
                    -0.0025739176970321197,
                    0.011760546955162144,
                    -0.04586995572818634,
                    0.003173189648866785,
                    -0.005852648032415849,
                    0.008953547489908545,
                    -0.01363910887213085,
                    0.011519747530114206,
                    0.0014014953211415762,
                    -0.0038978293453699694,
                    -0.020809917610589503,
                    0.010898211439813489,
                    -0.026221286142622095,
                    0.009403069536276006,
                    0.03993545033768803,
                    0.004545938086140663,
                    0.02120442269474333,
                    -0.009551373174173825,
                    0.0017916367480351925,
                    -0.05115885874878165,
                    -0.028767960099289003,
                    0.036581098812820644,
                    0.04721834372739069,
                    0.009453837213013041,
                    -0.002343759335852238,
                    -0.0032300404688406863,
                    -0.0045750736028833255,
                    -0.027304575372795233,
                    0.020510451790074935,
                    -0.002616617827213512,
                    -0.035402432883030376,
                    0.0017484110711179282,
                    -0.0006461390722895924,
                    0.004453617779905595,
                    -0.041189948005631846,
                    0.019059392690782658,
                    0.02196484682044173,
                    -0.041345759342396524,
                    0.03161837914303559,
                    0.011765186508365577,
                    -0.010087156235129645,
                    -0.019658599262551656,
                    0.02672145755629167,
                    -0.0016821978759313273,
                    0.023452857679103236,
                    0.010440297635831864,
                    0.010200937564824467,
                    0.014095686236002674,
                    0.029912714833821626,
                    -0.008211346029836333,
                    -0.05061160612384736,
                    0.044241567236655094,
                    0.0033329350934897545,
                    -0.033288096642873154,
                    0.0013117087027241755,
                    -0.028115997781207477,
                    -0.0054543425638568736,
                    0.0015930922939399507,
                    -0.030612114134271014,
                    -0.001419241499946464,
                    0.0031189849872683604,
                    -0.03965446790504851,
                    0.013331535355083255,
                    -0.041965584928529184,
                    0.012228596700404366,
                    -0.0032341356123101743,
                    -0.0016503626915331886,
                    -0.00020680278462362488,
                    -0.012957296237522368,
                    0.01670941050464119,
                    -0.061088931230985064,
                    0.02877191363156122,
                    0.008753165865238891,
                    -0.02530768385782133,
                    0.012827209699506702,
                    -0.012751634851992464,
                    -0.01569150072145692,
                    -0.016545176596652913,
                    -0.023036090526424836,
                    -0.023385864199233455,
                    0.01278680037812149,
                    0.010011583648643463,
                    0.005610784224061336,
                    -0.01354242112045407,
                    -0.0037256046783525803,
                    -0.025623298698923037,
                    0.001347081768962562,
                    -0.016745121339459556,
                    -0.008815144046728157,
                    -0.001202872384790707,
                    -0.01757289646945359,
                    0.0115767614760482,
                    -0.0011543117181911054,
                    0.02172380982085687,
                    -0.01884168748832913,
                    -0.03299229785958506,
                    0.009125077060330174,
                    -0.022365718925180415,
                    -0.023686760837701545,
                    -0.01710632071681805,
                    -0.006580983170174716,
                    -0.013309075362953626,
                    0.007080016765565349,
                    -0.020433249372735697,
                    -0.026371717707247704,
                    0.01982827141691726,
                    0.0016458276178558699,
                    0.020015016951748035,
                    0.017070257115240142,
                    -0.03295492378562692,
                    0.01258144895012017,
                    0.0023650599688060667,
                    -0.017965349894969687,
                    -0.00545644238631684,
                    -0.040014336350043145,
                    0.046714404319354086,
                    -0.019964622113211258,
                    0.016691133576809892,
                    0.03426966927339067,
                    0.021938342316588116,
                    0.008254743040757078,
                    0.018053768336040638,
                    0.03768065689602992,
                    0.029964991216203146,
                    -0.04262400437829757,
                    -0.017947971752305725,
                    -0.017089114389887885,
                    -0.006985008624397257,
                    -0.011473956599219738,
                    -0.011042558319790638,
                    0.026235329366131804,
                    0.01415515073595574,
                    0.03147399274028573,
                    0.026612352082582832,
                    -0.011526414807187246,
                    0.029260151855621662,
                    -0.05558943255252989,
                    0.01567947120205509,
                    -0.02051846682816564,
                    -0.04389397214698526,
                    -0.003328873718298729,
                    0.020273215743036258,
                    -0.01679963207737773,
                    -0.022410781543052285,
                    -0.02892478742917914,
                    0.032932358042167605,
                    -0.053262486184255775,
                    0.028137184440413705,
                    -0.022512569210378905,
                    -0.0013769270900859634,
                    -0.020189608864382095,
                    0.012695332234738958,
                    -0.020255736338172344,
                    0.03786196303364821,
                    0.03479782024648072,
                    -0.028013377027881012,
                    0.01913344238866159,
                    0.00688109195857085,
                    0.013221835957235875,
                    -0.0655542390974413,
                    0.023464395986498257,
                    0.023715306206339215,
                    0.022251579277998715,
                    -0.003923342065599915,
                    -0.01927983944424188,
                    0.013646747221824308,
                    -0.004183030108263473,
                    0.009377144281099344,
                    -0.007232826515507579,
                    0.014707678006355657,
                    0.15507460658472844,
                    -0.0069235925187096,
                    -0.02193420345156342,
                    -0.019908497848792058,
                    -0.0633653890641486,
                    0.02816471563846922,
                    -0.04148769136231239,
                    -0.04013174867611003,
                    0.023920015177621573,
                    0.030698083414173797,
                    0.021619452890534505,
                    -0.00584298366094986,
                    -0.006457166740850267,
                    0.021243885900713227,
                    -0.009998230655485395,
                    0.030940274045798154,
                    -0.023333195979757533,
                    0.023941223189426483,
                    0.021653252650864506,
                    0.02143087764866592,
                    0.039886474353415885,
                    -0.0033547892550809706,
                    -0.02063178589051004,
                    0.01975330751523706,
                    0.02324355600378335,
                    -0.0013579775720331006,
                    0.007774647480849952,
                    0.03476013184538999,
                    -0.006604539124108168,
                    -0.025712717894433055,
                    -0.027403429985443414,
                    0.014276291408427151,
                    -0.01340673482891288,
                    0.009119030048973605,
                    0.018606638995642192,
                    -0.01540571778299646,
                    -0.02517209924478239,
                    -0.03341565804906222,
                    0.026165356854370547,
                    -0.004939771607029996,
                    -0.029504402554614857,
                    0.04259662672608374,
                    0.011549231512335095,
                    -0.04922193907838055,
                    0.028768291254048527,
                    -0.003831179419089269,
                    0.005644358097917185,
                    0.06738257911368553,
                    0.033928396138536605,
                    -0.042181612315742,
                    0.0007681574450661495,
                    0.009884845560908155,
                    -4.079588149871414e-05,
                    0.01938423729658536,
                    0.034510379321034755,
                    0.010207323027706714,
                    0.027071025440296503,
                    -0.04112307803512659,
                    0.0047777419776881,
                    0.014864615833533847,
                    -0.011053054773973071,
                    -0.0038936829041116812,
                    0.000437682133781144,
                    -0.008790822545931339,
                    -0.014054155341232962,
                    0.0018955964124544534,
                    0.010875723868535225,
                    0.006705755225270842,
                    0.015216563382897827,
                    -0.038930318487288576,
                    -0.021210903187531535,
                    0.018191561783856423,
                    -0.0018216294611172414,
                    -0.02149470265120612,
                    -0.024513022656646018,
                    0.03434362290461965,
                    0.00857301699518703,
                    -0.04158115334960507,
                    0.02300978840925675,
                    -0.0012471886807880587,
                    -0.011199555571184336,
                    0.0004316724594570096,
                    -0.025114219508114325,
                    0.01325331741381567,
                    0.008773803323448497,
                    -0.03333101887617017,
                    0.023059396935679884,
                    0.020680556968006858,
                    0.015734071265013343,
                    -0.002290879157675629,
                    0.033011953408398624,
                    0.019945085933513136,
                    0.06838324178406742,
                    -0.06697263781446416,
                    0.026999742960277823,
                    -0.0025428203184483856,
                    -0.0017149944290659404,
                    0.031883095941985636,
                    0.060701038422793965,
                    -0.016054200315553404,
                    0.044273315769749966,
                    0.011747229751903586,
                    0.018836996275969235,
                    -0.03780047586293086,
                    -0.0009722583357357665,
                    0.007594860653503576,
                    0.04764861697400883,
                    0.03480406948689454,
                    -0.036908120490189905,
                    0.03980081442721946,
                    -0.027737733526185332,
                    0.001269124705230766,
                    -0.004333612430138263,
                    0.001016737079277804,
                    -0.010576427992639609,
                    0.027074570426608408,
                    -0.04688857045053903,
                    0.018478375741798926,
                    0.00419580163446246,
                    0.0036606399444751303,
                    -0.019440973690762975,
                    -0.023003244657238495,
                    -0.019102414318904488,
                    0.011502066417048451,
                    -0.05067477582206636,
                    -0.033333272379421255,
                    -0.031669070820518716,
                    -0.002458444468297616,
                    0.013693774601759917,
                    0.02038417582236585,
                    0.055537692736675956,
                    0.020995326313175352,
                    -0.012860272772986668,
                    0.02256258033148952,
                    -0.026204290550755956,
                    0.007828436902149752,
                    -0.011913231422731376,
                    -0.00804976288644139,
                    0.0014621503641220268,
                    -0.028272555945674512,
                    -0.028290633840590242,
                    -0.014190799871091236,
                    0.03233947684998563,
                    -0.030710956721480793,
                    0.005140931848813966,
                    -0.022049731939946707,
                    0.01519694956527707,
                    -0.028206237263008006,
                    0.0027023249537421693,
                    -0.012920225889169445,
                    0.004162967413927094,
                    -0.009457010949089894,
                    -0.028821471505290963,
                    -0.04967256947214742,
                    0.012815512839229473,
                    0.03858332426063382,
                    -0.0036537720601673472,
                    -0.02941182323462536,
                    -0.007651861365273299,
                    0.028041799982603713,
                    -0.013339246378042307,
                    -0.023676164937237665,
                    0.021668240494751075,
                    -0.007893144626364854,
                    -0.013057506801276916,
                    0.0039020479708963894,
                    -0.02971293925587981,
                    -0.030487326816535248,
                    0.025127253020434618,
                    -0.03768471138025267,
                    0.01749125584148262,
                    0.02999070788964329,
                    -0.011781266179590638,
                    0.0016772097636596043,
                    -0.04327218191527168,
                    0.0005892352347449533,
                    -0.0034588319494683675,
                    0.015597119275156873,
                    0.013073299596858927,
                    0.012180062911713216,
                    0.06470803427559035,
                    0.01999812942652922,
                    0.03832220611474383,
                    0.006185957418756255,
                    -0.0016188626165497186,
                    0.03673436560475373,
                    -0.022816229526854467,
                    0.02630587701113553,
                    0.039155085385399184,
                    0.02313911322279538,
                    -0.04457405310820342,
                    0.03593645511988535,
                    -0.03434851171854192,
                    -0.02748093480536879,
                    -0.040180862483363326,
                    0.02836276205946931,
                    -0.002853631730115278,
                    0.020294834033804103,
                    -0.031279546456613606,
                    -0.043285785885359813,
                    0.016422116794347894,
                    -0.016275569581233322,
                    -0.013917950410192401,
                    -0.03757145214769149,
                    0.001203173782649165,
                    -0.0018952468973255981,
                    0.010213681437290609,
                    0.005793664521667985,
                    -0.01251208579165163,
                    0.008960920990756903,
                    -0.01950072933246114,
                    -0.04170863662554682,
                    -0.003719163307296905,
                    -0.048907475780789564,
                    -0.005058232473933597,
                    -0.013171538886233057,
                    -0.05005701213835063,
                    -0.004498998196898162,
                    -0.0008471092622174952,
                    0.011026414927238846,
                    0.03138833191737764,
                    -0.03841695743245934,
                    0.007270281784761202,
                    0.006773183427688036,
                    -0.041463112637776044,
                    -0.008115675413966985,
                    0.007904740530537796,
                    0.029569511365715777,
                    0.04366387897493997,
                    0.028394105051598225,
                    -0.021903094617806956,
                    -0.03540179840553738,
                    0.025880401540374895,
                    0.0018286576950268026,
                    0.003502311343484476,
                    0.004443017164620229,
                    0.08425226225146575,
                    -0.009373617544419443,
                    -0.008541720642588653,
                    0.002940188945016288,
                    0.006525045438438381,
                    0.0024644456091151043,
                    -0.021470038189804076,
                    0.008154753462231655,
                    -0.003266060871245501,
                    0.008427567319287933,
                    0.0005822825475538763,
                    0.009681684127793804,
                    -0.004473130860094001,
                    0.01718534235728095,
                    -0.0015505548188696598,
                    0.009170492165738382,
                    0.055738088893028566,
                    0.03012591429617913,
                    0.00759686901393129,
                    0.012765954481342386,
                    -0.008961765762534355,
                    0.016811555487944052,
                    -0.00921114870885651,
                    -0.004825292520489182,
                    0.024530527422906574,
                    0.0009667494978291926,
                    0.00456089255821602,
                    0.02206673867661387,
                    -0.0015380800252940746,
                    0.02764284062313244,
                    0.03136665559175505,
                    -0.0355470213894853,
                    0.015252370618993868,
                    0.010462688975403334,
                    -0.014832995870745025,
                    0.018290174553830717,
                    -0.017687038785828862,
                    0.020107673989887585,
                    -0.018009938691168615,
                    -0.024026132422830804,
                    -0.017003893954257394,
                    -0.025295141655692972,
                    0.012300868186164831,
                    -0.024381147047629774,
                    0.019818860067018627,
                    -0.023441262139971362,
                    -0.0317633157964448,
                    -0.015482317038791655,
                    0.018474761579651413,
                    -0.02915599986290353,
                    0.02928290327350926,
                    0.029861438354450303,
                    0.012468871751002317,
                    0.02041875152003788,
                    0.02082046123066208,
                    0.02910932261989064,
                    0.015205489664977168,
                    -0.026354338606877907,
                    -0.012179208897704259,
                    0.07954385772486025,
                    0.010795907167161603,
                    0.012360214189223938,
                    0.058785770356960594,
                    0.027395634173327178,
                    0.00616389116010901,
                    0.014147305091663915,
                    0.0011475459492051743,
                    -0.015384339339624338,
                    -0.02388915270422472,
                    -0.008632793595006247,
                    -0.023989344680862494,
                    -0.05168275884633033,
                    0.018313233633761482,
                    -0.027104140773800134,
                    0.009650161860656177,
                    0.004871979178797193,
                    -0.017074916925256214,
                    -0.008064858651594372,
                    0.0008509666083781448,
                    0.02934593850069786,
                    0.01631811788143966,
                    0.03976321366571947,
                    0.026333859918310918,
                    0.013418004534600137,
                    -0.01963235452743106,
                    -0.03235455869426302,
                    0.012319008315214866,
                    0.017297907927449632,
                    0.02993481464792472,
                    0.0008340457538863303,
                    -0.02307553670378014,
                    0.08869396316775682,
                    0.025410465678495798,
                    -0.008640331837729841,
                    -0.024700973652218836,
                    0.024032808685470187,
                    0.026011399039773172,
                    0.03758443211518606,
                    -0.032434436317097984,
                    0.04149488081594302,
                    -0.007824722205476912,
                    -0.0018941491540657139,
                    -0.03201804850376185,
                    0.0034625851461705316,
                    -0.015207544805041976,
                    0.0009287440874208618,
                    0.035936865507138115,
                    -0.008665589182391952,
                    -0.019660779210914074,
                    -0.010932624359551422,
                    0.0029691191252055457,
                    -0.0073679281321092785,
                    -0.018851031609946927,
                    0.026333290094344892,
                    0.025719726220586724,
                    0.016020522274474695,
                    0.0029525274722856983,
                    0.012613156027095515,
                    -0.02073243347936643,
                    0.007438101463587939,
                    -0.004777025640454392,
                    -0.01203948296069701,
                    0.040273107130651666,
                    0.028220016069774336,
                    -0.025418862030183075,
                    -0.010305077224334165,
                    0.027750368350466365,
                    -0.05489923794689947,
                    0.015380353409619366,
                    0.038482115290709995,
                    0.019323641769496993,
                    0.015567917670178507,
                    0.005272113016885671,
                    -0.013315841630807672,
                    -0.004003819124976008,
                    0.0031596309088432507,
                    0.013818728452227088,
                    -0.004702964935406537,
                    0.020073690771205074,
                    0.01415630634149142,
                    0.016678305568676503,
                    0.024893041853014043,
                    -0.0018952211776107008,
                    -0.007657484634986719,
                    0.029447816534627278,
                    -0.016504497908825928,
                    0.016904392682825158,
                    0.018453468700471373,
                    0.02551059869038198,
                    -0.018002664359362142,
                    0.0031394520576067007,
                    0.0004407346942146508,
                    0.009673716557482386,
                    -0.004471165790884676,
                    -0.011870083099663342,
                    0.018170777042282198,
                    -0.0009579793181373615,
                    -0.0012284738724876298,
                    0.0020923777132607567,
                    0.00044792711627033357,
                    0.014872140688485127,
                    -0.002354400402512132,
                    -0.006723080219561626,
                    -0.008057313051112697,
                    -0.0070835764035818176,
                    0.0066101260623432365,
                    0.02171532015256291,
                    -0.01856071368334035,
                    0.013759403791267616,
                    0.003562616046454619,
                    -0.01913421953882344,
                    -0.01812736273898481,
                    -0.0016774107911402892,
                    -0.037816018111083254,
                    -0.0024729846483837244,
                    -0.037828708328083695,
                    0.03064328758975005,
                    -0.004866973877595801,
                    0.009564041553226611,
                    -0.006207020432652728,
                    0.008302089468600055,
                    0.022108157439128077,
                    -0.012767218594263946,
                    -0.0020356125859568334,
                    -0.03644606144017184,
                    -0.0029848347238329584,
                    -0.01915696568137225,
                    -0.02714209404218418,
                    0.016870730177334748,
                    0.007561793311322668,
                    -0.0017283986077966827,
                    0.016878133081874688,
                    0.028548761095326045,
                    -0.017466359564699507,
                    -0.0120596014844757,
                    -0.0038530978910021416,
                    0.03275248724007655,
                    0.0007232241683508197,
                    0.013320155311641114,
                    -0.013787899876596123,
                    -0.013564915820776095,
                    0.01858891147065616,
                    -0.013778307929868047,
                    0.002867149918037026,
                    -0.011487150807489487,
                    0.06222283558807005,
                    0.02681310642561317,
                    -0.026829755124016485,
                    -0.004658002328746901,
                    -0.027557412796936416,
                    -0.018291711245357275,
                    0.009904293037262363,
                    0.021073640842806725,
                    0.0023968013081290362,
                    -0.004099223084752489,
                    -0.026394223090083335,
                    -0.009696686468628663,
                    -0.02675207399182996,
                    -0.00026977148384007865,
                    0.0073368498996426446,
                    -0.011300957662129005,
                    -0.0023823674562062245,
                    0.01727263182943603,
                    -0.021871507418567773,
                    -0.013671247460430906,
                    0.022634449477261606,
                    -0.022551803151281233,
                    0.005240280712003986,
                    -0.0024783430856998236,
                    0.016267029572860157,
                    0.012806747631334233,
                    -0.006037414906794036,
                    0.003315908614587111,
                    -0.02928723783482471,
                    -0.003853876720897471,
                    -0.020018967624365565,
                    -0.03347963206814456,
                    -0.0036275931987200115,
                    0.04926129288014413,
                    -0.01861892873060897,
                    0.022930145741052486,
                    -0.0018785460642902854,
                    0.0279820556842995,
                    0.01898175666431169,
                    0.003289111342925833,
                    -0.018747252133042323,
                    0.035837177626989535,
                    -0.004448810911570874,
                    0.0016832308073090059,
                    0.037469186449369946,
                    0.018360523124478976,
                    0.01058908790637095,
                    -0.028058634985894417,
                    -0.008384348150115652,
                    0.044935285968444295,
                    0.035349709501567794,
                    -0.03462313639721103,
                    -0.006867515290286151,
                    0.0027939205866978263,
                    -0.029120646965789986,
                    -0.006579493595697005,
                    0.006283405545533711,
                    -0.03602546899972915,
                    -0.007089518328124595,
                    -0.04976874901050192,
                    0.03200219085211259,
                    -0.00598187556779064,
                    0.04168337470336478,
                    0.014512948796100753,
                    -0.0571304518704965,
                    -0.01770116954482053,
                    0.03771400950173331,
                    -0.005182805700750396,
                    0.008784199531416641,
                    -0.007875681379454269,
                    0.008959646172547697,
                    0.04808632635531742,
                    0.03852676686756305,
                    -0.018801822880880757,
                    -0.00753393232231215,
                    -0.01998974788402556,
                    -0.02805160066697707,
                    -0.008723566995239816,
                    -0.0333645124244569,
                    -0.009131744637443739,
                    -0.00438029371503586,
                    0.030793561017964755,
                    0.011949324258962607,
                    0.01361443267339834,
                    0.025830084284477382,
                    -0.025647962593828656,
                    0.07559270608577125,
                    -0.0180750327046732,
                    0.021268884841607855,
                    0.02988321408462067,
                    -0.008047960341754489,
                    -0.0028015843467931777,
                    -0.031290239673821905,
                    -0.022449184232876257,
                    0.014371474363969924,
                    -0.010041347037861059,
                    -0.033196177529304205,
                    0.026088888752997533,
                    0.03495197461966421,
                    -0.03235549594978622,
                    -0.018403398573597202,
                    -0.026816748842387023,
                    0.004965819530561645,
                    -0.001191887093709861,
                    -0.027876556285495263,
                    0.026812503375879784,
                    0.036674109652993656,
                    -0.015798683320669363,
                    -0.0016720797493448636,
                    -0.007337741928879738,
                    -6.859345102253956e-05,
                    -0.002436333891590328,
                    0.01602016416872069,
                    0.01881120242212218,
                    -0.006351576849271722,
                    0.030111799165925306,
                    -0.003645495313640025,
                    -0.017685049146746117,
                    -0.004169004769532001,
                    0.008416384695908018,
                    0.015100741852393764,
                    0.021391873833209323,
                    -0.03691691963864265,
                    0.006009419365182224,
                    -0.05660430795773629,
                    -0.00013469970377238591,
                    -0.020131549906297765,
                    0.016771128614090546,
                    -0.006793301056335972,
                    -0.025358100464816506,
                    -0.017118796564816335,
                    0.005349854801277903,
                    -0.02938491592843719,
                    0.00544092307691806,
                    0.02168404862117837,
                    0.004232196163999276,
                    0.021860558408228672,
                    -0.009720299908865766,
                    0.01769011999296724,
                    0.02418621204706342,
                    0.003663596930743864,
                    -0.04082515194973447,
                    0.0024659105028711054,
                    0.0006257443766308985,
                    -0.003229497446936124,
                    0.0005351103604657769,
                    0.012372319907406455,
                    0.027344105578666393,
                    -0.0012017072121327445,
                    0.027558313714956185,
                    -0.0020574021594805085,
                    -0.03509341773624356,
                    -0.001582296391179704,
                    -0.013123690059939396,
                    -0.004063589061307851,
                    0.0014541627403803796,
                    0.016384286078682444,
                    -0.03254934535678547,
                    -0.02810294215435583,
                    0.012198915744724231,
                    0.04234367003157224,
                    0.031128525152613707,
                    0.0038104291940139483,
                    -0.008454059492557453,
                    0.010913251209661247,
                    -0.04175290917354232,
                    0.03436501359459217,
                    -0.003976725378701725,
                    0.010809398896289478,
                    -0.007349138499704195,
                    -0.024435828009504796,
                    0.02762564780897125,
                    -0.00756831318458218,
                    0.04897859589862636,
                    0.007335534889914682,
                    -0.012962342079047076,
                    0.0017281266761775128,
                    -0.03181778985548161,
                    -0.03273658107679931,
                    -0.028889632132431134,
                    -0.013276286263882185,
                    -0.036312983355355176,
                    -0.01967854953407898,
                    -0.023869221817301146,
                    -0.01886227613105325,
                    -0.014250082384351244,
                    -0.029192241593137415,
                    0.02499572275834558,
                    0.008251337724260385,
                    -0.011020403371113444,
                    0.006535159498112624,
                    -0.0006780014699356688,
                    -0.013878556897349676,
                    0.02227824653694524,
                    0.0012325561238350142,
                    -0.01752428502777624,
                    0.039601780124670305,
                    0.026154157092407693,
                    -0.020090844531847396,
                    -0.019758137875220086,
                    0.0078478786526611,
                    -0.04702366981886956,
                    -0.012178653845432062,
                    0.010134369422467697,
                    -0.011708560353099284,
                    -0.011765302345138931,
                    -0.011162753710272342,
                    -0.02505406714159973,
                    -0.009165645677621393,
                    -0.018916490197257947,
                    -0.005958010215828073,
                    0.01855349117551734,
                    0.01871831594109493,
                    -0.002796214877371775,
                    0.016875563289853467,
                    -0.0027652727865326104,
                    -0.01796639536913304,
                    -0.009956486799277724,
                    0.013976681460421837,
                    -0.023275935838766627,
                    0.004038374354576875,
                    -0.011104546173547553,
                    0.020167276642117652,
                    -0.015778840211316727,
                    0.027370085303228393,
                    0.03817229021405766,
                    0.03628995156938108,
                    0.007526552168931152,
                    0.005822838674986235,
                    0.007628847954399273,
                    -0.002070419136853341,
                    -0.031962225381343363,
                    0.03800665266447989,
                    -0.02282700314354456,
                    0.008239899507396266,
                    0.012485671081479853,
                    0.020995213741271057,
                    0.04244639752861455,
                    0.06411864954428123,
                    -0.009036156941645628,
                    0.004699966024228431,
                    -0.0417722487422129,
                    0.012435034980152262,
                    -0.009730445643603317,
                    -0.030559573849896656,
                    -0.02455278946572509,
                    0.01172648078409247,
                    -0.003930604055941896,
                    0.02039441664641148,
                    -0.016815204921516377,
                    -0.03896873847146411,
                    0.007329392077863969,
                    -0.007046023215968301,
                    0.04042180332828846,
                    -0.012753558626168306,
                    -0.008070671505036753,
                    0.021698483769249946,
                    -0.007548883369997602,
                    -0.03602548262275901,
                    -0.008153195918561139,
                    0.03863780000573432,
                    0.012598412198504697,
                    0.0464666346539943,
                    -0.03412705428652201,
                    0.008373551101457337,
                    0.025527674777647686,
                    -0.0101243151553976,
                    0.0030346653620007135,
                    0.01301657764683522,
                    0.024356898493592752,
                    -0.022183598375003916,
                    0.02712418862935028,
                    -0.014914193789067089,
                    -0.0011563002988345496,
                    0.011656311243962521,
                    0.0015927545408526756,
                    -0.030917270508032016,
                    0.017898639759415292,
                    -0.012334646493072912,
                    0.0030057535047824796,
                    0.003488977593745056,
                    -0.022746046527143196,
                    0.04555380416463533,
                    0.02773504692980306,
                    -0.010446373044626958,
                    0.010679883766244761,
                    0.035449412046485024,
                    0.026179466367972897,
                    0.019820126930571016,
                    -0.023953913354283735,
                    0.02048466464189822,
                    -0.0022717412998660763,
                    -0.045730448117448814,
                    -0.002310370169472978,
                    0.032542716167103976,
                    4.855870066990536e-05,
                    0.01093126263241392,
                    0.009046409341017107,
                    0.012322558496618497,
                    0.012787200789035303,
                    -0.00019217283566732354,
                    -0.005172538499330026,
                    0.023770949698378244,
                    -0.029759963830090885,
                    -0.005036080827856326,
                    -0.0032134220530437856,
                    -0.01563554722573567,
                    -0.013576142892184645,
                    -0.04215134281347972,
                    0.0031489234672872272,
                    -0.0012468077414337071,
                    0.04016167753292469,
                    0.010320664076070019,
                    -0.009951765605006957,
                    0.004370874965563762,
                    -0.012762858230191325,
                    -0.018668260985305697,
                    -0.001837802683859065,
                    -0.017686798603523738,
                    0.00903686623891618,
                    0.007198056982757911,
                    0.034864463946816714,
                    0.0007089914027174328,
                    -0.013793697641231324,
                    0.04566224505581934,
                    0.02014395242291947,
                    0.011912882544323782,
                    -0.0010590327703760964,
                    0.02084889092787001,
                    -0.0015014042244251469,
                    0.01887707998564442,
                    -0.026396024447088256,
                    0.039278134321186424,
                    0.04125087697130005,
                    -0.024289130934175708,
                    -0.005366157776413988,
                    -0.012537474698359844,
                    -0.054753503350133,
                    0.02402048243513591,
                    -0.026600556797560133,
                    -0.008068056897610415,
                    -0.020805336662831592,
                    0.00411938666290102,
                    0.012944583854577753,
                    0.03528041395933128,
                    -0.016172307251192463,
                    0.03878181800987587,
                    -0.011089753138634865,
                    -0.0370679163641897,
                    0.007922800254450916,
                    0.024119816223367972,
                    -0.0075516168399125646,
                    0.04816242084975601,
                    0.023533291591472525,
                    -0.030063878446816013,
                    0.0028632677906801256,
                    0.0028276577453463852,
                    0.0031767025741737537,
                    0.03924664435922223,
                    -0.022109046385750855,
                    0.021175598430974288,
                    -0.011274137579805946,
                    0.011402134244570282,
                    -0.0018052455629897633,
                    -0.012331905767264196,
                    -0.02879443776160755,
                    0.012870813204529203,
                    -0.017511360245370686,
                    -0.0039656690394487,
                    0.012795254881268142,
                    -0.018267908571496204,
                    -0.011963925392936175,
                    0.01578427578658925,
                    0.03695334188744795,
                    0.0042904875386712915,
                    -0.020363759600687842,
                    -0.007536669068055515,
                    -0.01308618211297945,
                    -0.03644758290773343,
                    -0.03275345368926747,
                    -0.0563182608594371,
                    -0.026176296790201215,
                    0.004822941268938565,
                    0.009444019754137742,
                    0.021120629681166597,
                    -0.01944789940242531,
                    -0.032117340980613744,
                    0.0365039535169682,
                    -0.015291118338765335,
                    -0.07446961050954878,
                    0.0003374259211901475,
                    -0.04211559383725674,
                    0.014234166626771934,
                    0.060916684148995925,
                    0.020966882854805382,
                    0.015442636182057748
                ],
                "fullName": "src/pcre2_match.c::match",
                "patchDiff": "--- before_func\n\n+++ after_func\n\n@@ -5205,7 +5205,7 @@\n\n       if (Lmax-- <= Lmin) RRETURN(MATCH_NOMATCH);\n       Feptr++;\n #ifdef SUPPORT_UNICODE\n-      if (utf) { FORWARDCHAR(Feptr); }\n+      if (utf) { FORWARDCHARTEST(Feptr, mb->end_subject); }\n #endif\n       }\n     /* Control never reaches here */",
                "identifier": "match",
                "patchEmbeddingsDiffMagnitude": 0.02477856399091754,
                "signature": "static int match(PCRE2_SPTR start_eptr, PCRE2_SPTR start_ecode, uint16_t top_bracket, PCRE2_SIZE frame_size, pcre2_match_data *match_data, match_block *mb)"
            }
        }
    },
    {
        "baseNode": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        },
        "relation1": {
            "identity": 21700,
            "start": 10499,
            "end": 10502,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10502,
            "labels": [
                "FileModification"
            ],
            "properties": {
                "diffEmbeddings": [
                    0.024445822462439537,
                    -0.07770691812038422,
                    -0.05280715972185135,
                    0.05630424991250038,
                    0.012133270502090454,
                    -0.0313086062669754,
                    -0.11347224563360214,
                    0.1363646686077118,
                    -0.03685428947210312,
                    -0.04042442888021469,
                    -0.003807332133874297,
                    -0.022009296342730522,
                    0.008368836715817451,
                    -0.06407462805509567,
                    -0.0026228490751236677,
                    -0.09284782409667969,
                    0.09387260675430298,
                    -0.0662292093038559,
                    -0.012559833005070686,
                    0.11005095392465591,
                    -0.014233932830393314,
                    0.08523377031087875,
                    -0.04881108179688454,
                    -0.012498564086854458,
                    -0.025188639760017395,
                    0.01905561424791813,
                    -0.1343451589345932,
                    -0.00640072301030159,
                    -0.04397420957684517,
                    0.01523576956242323,
                    -0.08504482358694077,
                    -0.06044260784983635,
                    -0.03754372522234917,
                    -0.07637684047222137,
                    -0.043194953352212906,
                    -0.09984193742275238,
                    0.009988540783524513,
                    -0.07303513586521149,
                    -0.06226367875933647,
                    0.105925053358078,
                    -0.15021219849586487,
                    -0.11167030781507492,
                    0.024077773094177246,
                    0.044904544949531555,
                    -0.11502937227487564,
                    -0.01932975836098194,
                    -0.03327328711748123,
                    -0.019636254757642746,
                    -0.05296962335705757,
                    0.02021738700568676,
                    0.032927803695201874,
                    -0.027760328724980354,
                    -0.07824088633060455,
                    -0.08665182441473007,
                    -0.036490291357040405,
                    -0.04120930656790733,
                    0.028905589133501053,
                    -0.01324536558240652,
                    -0.08105915039777756,
                    0.05320286750793457,
                    -0.025401802733540535,
                    -0.0653827115893364,
                    -0.03020862303674221,
                    -0.023978454992175102,
                    0.08252570778131485,
                    -0.0703173577785492,
                    0.057780634611845016,
                    -0.06739901006221771,
                    0.0016639690147712827,
                    -0.07213195413351059,
                    0.1353001892566681,
                    0.06475089490413666,
                    -0.10051164776086807,
                    0.10596910864114761,
                    -0.015374342910945415,
                    -0.033352021127939224,
                    -0.06103181466460228,
                    -0.022967666387557983,
                    0.04282381013035774,
                    -0.09934797883033752,
                    -0.06803661584854126,
                    0.0018446050817146897,
                    0.028094880282878876,
                    0.05261145159602165,
                    0.1277521252632141,
                    -0.08307231217622757,
                    0.09761999547481537,
                    0.08661463856697083,
                    0.05658268555998802,
                    0.004740809090435505,
                    0.11115753650665283,
                    -0.1834126114845276,
                    0.10909437388181686,
                    -0.02434924617409706,
                    0.02917557954788208,
                    0.016357118263840675,
                    0.17361335456371307,
                    -0.010527354665100574,
                    -0.03200443461537361,
                    -0.04118312895298004,
                    0.011764721013605595,
                    -0.03060738928616047,
                    -0.1090855598449707,
                    -0.03056529350578785,
                    -0.050818800926208496,
                    0.011806308291852474,
                    -0.10798846185207367,
                    -0.0076423040591180325,
                    0.04739106073975563,
                    -0.0740296021103859,
                    -0.013364113867282867,
                    0.005412477068603039,
                    -0.09059371799230576,
                    0.09049277752637863,
                    -0.01813618093729019,
                    -0.0022772508673369884,
                    -0.07708578556776047,
                    -0.008756313472986221,
                    -0.0231616273522377,
                    0.053313467651605606,
                    0.12236511707305908,
                    -0.027402421459555626,
                    0.04387751594185829,
                    -0.0853104516863823,
                    0.034771356731653214,
                    0.008680688217282295,
                    -0.02925094962120056,
                    0.11876404285430908,
                    0.0990058109164238,
                    -0.02503884769976139,
                    -0.03550182282924652,
                    -0.06599220633506775,
                    0.03497994318604469,
                    -0.059283819049596786,
                    0.0007839110330678523,
                    -0.0007898113690316677,
                    0.20112647116184235,
                    0.03799328953027725,
                    0.14146734774112701,
                    0.03485213965177536,
                    0.021846402436494827,
                    0.01475415751338005,
                    0.03199426829814911,
                    -0.03610818088054657,
                    0.05056341737508774,
                    -0.042058005928993225,
                    0.051621995866298676,
                    -0.06429774314165115,
                    -0.197169229388237,
                    0.00182058266364038,
                    0.046226002275943756,
                    -0.013627096079289913,
                    -0.056221019476652145,
                    -0.007323083002120256,
                    -0.04708906635642052,
                    0.018706215545535088,
                    0.02315153367817402,
                    0.046425711363554,
                    -0.03275438770651817,
                    -0.08537989854812622,
                    -0.02196696400642395,
                    0.18858222663402557,
                    0.024224290624260902,
                    0.032251209020614624,
                    -0.004663852043449879,
                    0.03924315422773361,
                    0.036117058247327805,
                    0.06495966762304306,
                    -0.026459602639079094,
                    0.020106924697756767,
                    0.019379595294594765,
                    0.023558473214507103,
                    -0.0507606640458107,
                    -0.037370555102825165,
                    -0.02371804416179657,
                    0.02590266987681389,
                    0.08577287942171097,
                    0.009901518933475018,
                    0.03518398106098175,
                    0.06708674132823944,
                    0.06591242551803589,
                    -0.03709238022565842,
                    -0.0517081543803215,
                    0.011854037642478943,
                    -0.07472588121891022,
                    0.05020744726061821,
                    0.028515582904219627,
                    -0.11871291697025299,
                    -0.035666029900312424,
                    -0.059439655393362045,
                    0.07386822253465652,
                    0.01392967440187931,
                    0.036796364933252335,
                    0.07551047950983047,
                    -0.01975908689200878,
                    0.09583387523889542,
                    -0.026523329317569733,
                    0.04133573919534683,
                    -0.05296075716614723,
                    -0.01748408004641533,
                    0.0248463936150074,
                    0.04993379861116409,
                    0.04562816768884659,
                    -0.014084123075008392,
                    0.13229596614837646,
                    -0.03680724650621414,
                    0.021710313856601715,
                    -0.09481377899646759,
                    0.013427344150841236,
                    -0.021001867949962616,
                    0.09817271679639816,
                    0.00632296921685338,
                    0.050624601542949677,
                    0.06089261919260025,
                    0.030657202005386353,
                    -0.029684070497751236,
                    -0.006811737082898617,
                    0.04936883598566055,
                    -0.008795423433184624,
                    0.021846449002623558,
                    -0.030562149360775948,
                    0.025497572496533394,
                    -0.0365557037293911,
                    0.05334910377860069,
                    0.06661466509103775,
                    -0.01007755659520626,
                    -0.025521155446767807,
                    0.031056895852088928,
                    0.026390401646494865,
                    0.05044200271368027,
                    0.05927658826112747,
                    -0.03427295386791229,
                    -0.006994006223976612,
                    -0.0037763251457363367,
                    -0.004372743424028158,
                    0.03468691557645798,
                    -0.04834328591823578,
                    -0.040404967963695526,
                    -0.12239833921194077,
                    0.053658295422792435,
                    0.02072828635573387,
                    0.031888119876384735,
                    0.07545342296361923,
                    0.007638712879270315,
                    0.0548083521425724,
                    -0.043550554662942886,
                    -0.029828909784555435,
                    0.032117146998643875,
                    -0.03800620511174202,
                    -0.009299670346081257,
                    0.05732439458370209,
                    0.0143208559602499,
                    0.032850611954927444,
                    -0.030923044309020042,
                    -0.035029083490371704,
                    -0.018809039145708084
                ],
                "diffText": "diff --git a/src/pcre2_match.c b/src/pcre2_match.c\nindex 537e5f3..ad4a43c 100644\n--- a/src/pcre2_match.c\n+++ b/src/pcre2_match.c\n@@ -5792,7 +5792,7 @@ fprintf(stderr, \"++ op=%d\\n\", *Fecode);\n       if (Lmax-- <= Lmin) RRETURN(MATCH_NOMATCH);\n       Feptr++;\n #ifdef SUPPORT_UNICODE\n-      if (utf) { FORWARDCHAR(Feptr); }\n+      if (utf) { FORWARDCHARTEST(Feptr, mb->end_subject); }\n #endif\n       }\n     /* Control never reaches here */"
            }
        },
        "relation2": {
            "identity": 21700,
            "start": 10502,
            "end": 10499,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "twoEdgesAway": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        }
    },
    {
        "baseNode": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        },
        "relation1": {
            "identity": 21700,
            "start": 10499,
            "end": 10502,
            "type": "PATCHED_FILE",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10502,
            "labels": [
                "FileModification"
            ],
            "properties": {
                "diffEmbeddings": [
                    0.024445822462439537,
                    -0.07770691812038422,
                    -0.05280715972185135,
                    0.05630424991250038,
                    0.012133270502090454,
                    -0.0313086062669754,
                    -0.11347224563360214,
                    0.1363646686077118,
                    -0.03685428947210312,
                    -0.04042442888021469,
                    -0.003807332133874297,
                    -0.022009296342730522,
                    0.008368836715817451,
                    -0.06407462805509567,
                    -0.0026228490751236677,
                    -0.09284782409667969,
                    0.09387260675430298,
                    -0.0662292093038559,
                    -0.012559833005070686,
                    0.11005095392465591,
                    -0.014233932830393314,
                    0.08523377031087875,
                    -0.04881108179688454,
                    -0.012498564086854458,
                    -0.025188639760017395,
                    0.01905561424791813,
                    -0.1343451589345932,
                    -0.00640072301030159,
                    -0.04397420957684517,
                    0.01523576956242323,
                    -0.08504482358694077,
                    -0.06044260784983635,
                    -0.03754372522234917,
                    -0.07637684047222137,
                    -0.043194953352212906,
                    -0.09984193742275238,
                    0.009988540783524513,
                    -0.07303513586521149,
                    -0.06226367875933647,
                    0.105925053358078,
                    -0.15021219849586487,
                    -0.11167030781507492,
                    0.024077773094177246,
                    0.044904544949531555,
                    -0.11502937227487564,
                    -0.01932975836098194,
                    -0.03327328711748123,
                    -0.019636254757642746,
                    -0.05296962335705757,
                    0.02021738700568676,
                    0.032927803695201874,
                    -0.027760328724980354,
                    -0.07824088633060455,
                    -0.08665182441473007,
                    -0.036490291357040405,
                    -0.04120930656790733,
                    0.028905589133501053,
                    -0.01324536558240652,
                    -0.08105915039777756,
                    0.05320286750793457,
                    -0.025401802733540535,
                    -0.0653827115893364,
                    -0.03020862303674221,
                    -0.023978454992175102,
                    0.08252570778131485,
                    -0.0703173577785492,
                    0.057780634611845016,
                    -0.06739901006221771,
                    0.0016639690147712827,
                    -0.07213195413351059,
                    0.1353001892566681,
                    0.06475089490413666,
                    -0.10051164776086807,
                    0.10596910864114761,
                    -0.015374342910945415,
                    -0.033352021127939224,
                    -0.06103181466460228,
                    -0.022967666387557983,
                    0.04282381013035774,
                    -0.09934797883033752,
                    -0.06803661584854126,
                    0.0018446050817146897,
                    0.028094880282878876,
                    0.05261145159602165,
                    0.1277521252632141,
                    -0.08307231217622757,
                    0.09761999547481537,
                    0.08661463856697083,
                    0.05658268555998802,
                    0.004740809090435505,
                    0.11115753650665283,
                    -0.1834126114845276,
                    0.10909437388181686,
                    -0.02434924617409706,
                    0.02917557954788208,
                    0.016357118263840675,
                    0.17361335456371307,
                    -0.010527354665100574,
                    -0.03200443461537361,
                    -0.04118312895298004,
                    0.011764721013605595,
                    -0.03060738928616047,
                    -0.1090855598449707,
                    -0.03056529350578785,
                    -0.050818800926208496,
                    0.011806308291852474,
                    -0.10798846185207367,
                    -0.0076423040591180325,
                    0.04739106073975563,
                    -0.0740296021103859,
                    -0.013364113867282867,
                    0.005412477068603039,
                    -0.09059371799230576,
                    0.09049277752637863,
                    -0.01813618093729019,
                    -0.0022772508673369884,
                    -0.07708578556776047,
                    -0.008756313472986221,
                    -0.0231616273522377,
                    0.053313467651605606,
                    0.12236511707305908,
                    -0.027402421459555626,
                    0.04387751594185829,
                    -0.0853104516863823,
                    0.034771356731653214,
                    0.008680688217282295,
                    -0.02925094962120056,
                    0.11876404285430908,
                    0.0990058109164238,
                    -0.02503884769976139,
                    -0.03550182282924652,
                    -0.06599220633506775,
                    0.03497994318604469,
                    -0.059283819049596786,
                    0.0007839110330678523,
                    -0.0007898113690316677,
                    0.20112647116184235,
                    0.03799328953027725,
                    0.14146734774112701,
                    0.03485213965177536,
                    0.021846402436494827,
                    0.01475415751338005,
                    0.03199426829814911,
                    -0.03610818088054657,
                    0.05056341737508774,
                    -0.042058005928993225,
                    0.051621995866298676,
                    -0.06429774314165115,
                    -0.197169229388237,
                    0.00182058266364038,
                    0.046226002275943756,
                    -0.013627096079289913,
                    -0.056221019476652145,
                    -0.007323083002120256,
                    -0.04708906635642052,
                    0.018706215545535088,
                    0.02315153367817402,
                    0.046425711363554,
                    -0.03275438770651817,
                    -0.08537989854812622,
                    -0.02196696400642395,
                    0.18858222663402557,
                    0.024224290624260902,
                    0.032251209020614624,
                    -0.004663852043449879,
                    0.03924315422773361,
                    0.036117058247327805,
                    0.06495966762304306,
                    -0.026459602639079094,
                    0.020106924697756767,
                    0.019379595294594765,
                    0.023558473214507103,
                    -0.0507606640458107,
                    -0.037370555102825165,
                    -0.02371804416179657,
                    0.02590266987681389,
                    0.08577287942171097,
                    0.009901518933475018,
                    0.03518398106098175,
                    0.06708674132823944,
                    0.06591242551803589,
                    -0.03709238022565842,
                    -0.0517081543803215,
                    0.011854037642478943,
                    -0.07472588121891022,
                    0.05020744726061821,
                    0.028515582904219627,
                    -0.11871291697025299,
                    -0.035666029900312424,
                    -0.059439655393362045,
                    0.07386822253465652,
                    0.01392967440187931,
                    0.036796364933252335,
                    0.07551047950983047,
                    -0.01975908689200878,
                    0.09583387523889542,
                    -0.026523329317569733,
                    0.04133573919534683,
                    -0.05296075716614723,
                    -0.01748408004641533,
                    0.0248463936150074,
                    0.04993379861116409,
                    0.04562816768884659,
                    -0.014084123075008392,
                    0.13229596614837646,
                    -0.03680724650621414,
                    0.021710313856601715,
                    -0.09481377899646759,
                    0.013427344150841236,
                    -0.021001867949962616,
                    0.09817271679639816,
                    0.00632296921685338,
                    0.050624601542949677,
                    0.06089261919260025,
                    0.030657202005386353,
                    -0.029684070497751236,
                    -0.006811737082898617,
                    0.04936883598566055,
                    -0.008795423433184624,
                    0.021846449002623558,
                    -0.030562149360775948,
                    0.025497572496533394,
                    -0.0365557037293911,
                    0.05334910377860069,
                    0.06661466509103775,
                    -0.01007755659520626,
                    -0.025521155446767807,
                    0.031056895852088928,
                    0.026390401646494865,
                    0.05044200271368027,
                    0.05927658826112747,
                    -0.03427295386791229,
                    -0.006994006223976612,
                    -0.0037763251457363367,
                    -0.004372743424028158,
                    0.03468691557645798,
                    -0.04834328591823578,
                    -0.040404967963695526,
                    -0.12239833921194077,
                    0.053658295422792435,
                    0.02072828635573387,
                    0.031888119876384735,
                    0.07545342296361923,
                    0.007638712879270315,
                    0.0548083521425724,
                    -0.043550554662942886,
                    -0.029828909784555435,
                    0.032117146998643875,
                    -0.03800620511174202,
                    -0.009299670346081257,
                    0.05732439458370209,
                    0.0143208559602499,
                    0.032850611954927444,
                    -0.030923044309020042,
                    -0.035029083490371704,
                    -0.018809039145708084
                ],
                "diffText": "diff --git a/src/pcre2_match.c b/src/pcre2_match.c\nindex 537e5f3..ad4a43c 100644\n--- a/src/pcre2_match.c\n+++ b/src/pcre2_match.c\n@@ -5792,7 +5792,7 @@ fprintf(stderr, \"++ op=%d\\n\", *Fecode);\n       if (Lmax-- <= Lmin) RRETURN(MATCH_NOMATCH);\n       Feptr++;\n #ifdef SUPPORT_UNICODE\n-      if (utf) { FORWARDCHAR(Feptr); }\n+      if (utf) { FORWARDCHARTEST(Feptr, mb->end_subject); }\n #endif\n       }\n     /* Control never reaches here */"
            }
        },
        "relation2": {
            "identity": 21699,
            "start": 10502,
            "end": 2665,
            "type": "FILE_MODIFICATION",
            "properties": {}
        },
        "twoEdgesAway": {
            "identity": 2665,
            "labels": [
                "SourceFile"
            ],
            "properties": {
                "path": "src/pcre2_match.c"
            }
        }
    },
    {
        "baseNode": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        },
        "relation1": {
            "identity": 21697,
            "start": 10499,
            "end": 1488,
            "type": "PROJECT_VULNERABILITIES",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 1488,
            "labels": [
                "Project"
            ],
            "properties": {
                "projectSource": "oss-fuzz",
                "projectName": "pcre2"
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        },
        "relation1": {
            "identity": 21696,
            "start": 10499,
            "end": 10501,
            "type": "CRASH_PATCH",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 10501,
            "labels": [
                "CrashReport"
            ],
            "properties": {
                "sanitizer": "asan",
                "report_content": "INFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 2330741818\nINFO: Loaded 1 modules   (10216 inline 8-bit counters): 10216 [0x712bc0, 0x7153a8), \nINFO: Loaded 1 PC tables (10216 PCs): 10216 [0x69e940,0x6c67c0), \n/out/pcre2_fuzzer: Running 1 inputs 1 time(s) each.\nRunning: /tmp/poc\n=================================================================\n==1==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000000ba at pc 0x000000611bb2 bp 0x7ffd417b19d0 sp 0x7ffd417b19c8\nREAD of size 1 at 0x6020000000ba thread T0\nSCARINESS: 12 (1-byte-read-heap-buffer-overflow)\n    #0 0x611bb1 in match /src/pcre2/src/pcre2_match.c:5795:18\n    #1 0x5c1059 in pcre2_match_8 /src/pcre2/src/pcre2_match.c:7397:8\n    #2 0x56c7e7 in LLVMFuzzerTestOneInput /src/pcre2/src/pcre2_fuzzsupport.c:209:19\n    #3 0x43dde3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\n    #4 0x429542 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\n    #5 0x42edec in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\n    #6 0x458322 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n    #7 0x7f55ac67f082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)\n    #8 0x41f70d in _start (/out/pcre2_fuzzer+0x41f70d)\n\nDEDUP_TOKEN: match--pcre2_match_8--LLVMFuzzerTestOneInput\n0x6020000000ba is located 0 bytes to the right of 10-byte region [0x6020000000b0,0x6020000000ba)\nallocated by thread T0 here:\n    #0 0x52ef76 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3\n    #1 0x4ad977 in operator new(unsigned long) cxa_noexception.cpp\n    #2 0x429542 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\n    #3 0x42edec in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\n    #4 0x458322 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\n    #5 0x7f55ac67f082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)\n\nDEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)\nSUMMARY: AddressSanitizer: heap-buffer-overflow /src/pcre2/src/pcre2_match.c:5795:18 in match\nShadow bytes around the buggy address:\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 00 fa fa 00 fa fa fa 00 fa fa fa 00 fa\n=>0x0c047fff8010: fa fa 00 02 fa fa 00[02]fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==1==ABORTING\n\nReturn Code: 1\n",
                "report_embeddings": [
                    0.006306421011686325,
                    0.05533286929130554,
                    -0.08872831612825394,
                    -0.023249167948961258,
                    -0.01775750145316124,
                    0.010155735537409782,
                    0.0006788773462176323,
                    0.019128063693642616,
                    0.033515483140945435,
                    -0.025649037212133408,
                    -0.0015438508708029985,
                    -0.014311459846794605,
                    -0.020648576319217682,
                    0.006138136610388756,
                    0.059895727783441544,
                    -0.0027337921783328056,
                    0.07986953854560852,
                    0.03138082101941109,
                    0.014377282932400703,
                    0.04206988960504532,
                    -0.07777472585439682,
                    0.026557888835668564,
                    -0.017966557294130325,
                    -0.010837798938155174,
                    -0.06706194579601288,
                    0.015164678916335106,
                    -0.14705193042755127,
                    -0.04105808958411217,
                    -0.015464588068425655,
                    -0.03880510479211807,
                    -0.1273774802684784,
                    -0.12698377668857574,
                    0.006318710744380951,
                    -0.0816865786910057,
                    -0.016871824860572815,
                    -0.05765727534890175,
                    0.035910263657569885,
                    0.011169768869876862,
                    0.03347024694085121,
                    0.12606529891490936,
                    -0.05590660870075226,
                    -0.06434471160173416,
                    0.010476836934685707,
                    0.004941502586007118,
                    -0.024320270866155624,
                    0.030353741720318794,
                    0.011777225881814957,
                    -0.021587764844298363,
                    0.03326413780450821,
                    -0.015726935118436813,
                    -0.14295069873332977,
                    0.019584689289331436,
                    -0.06839722394943237,
                    -0.0730614960193634,
                    -0.0632583498954773,
                    -0.07605034112930298,
                    0.02749362587928772,
                    0.056500017642974854,
                    -0.03898927941918373,
                    0.11995814740657806,
                    0.022352784872055054,
                    -0.0641116127371788,
                    0.027258694171905518,
                    0.015723450109362602,
                    -0.0722537487745285,
                    0.024441294372081757,
                    0.06229701638221741,
                    0.06977923214435577,
                    0.05268391966819763,
                    -0.028619462624192238,
                    0.04899798706173897,
                    0.1643182933330536,
                    -0.07117597758769989,
                    -0.14171065390110016,
                    -0.035112038254737854,
                    0.048283543437719345,
                    -0.07192062586545944,
                    0.02037673443555832,
                    -0.055814437568187714,
                    -0.12461356073617935,
                    -0.06111059710383415,
                    0.04772135987877846,
                    0.049401164054870605,
                    0.004262147471308708,
                    0.02694237045943737,
                    0.0362185463309288,
                    -0.04232288524508476,
                    -0.0223332941532135,
                    0.002729209139943123,
                    -0.018354792147874832,
                    0.06061016768217087,
                    -0.08665262162685394,
                    0.008356556296348572,
                    -0.017426909878849983,
                    0.026374828070402145,
                    0.019686341285705566,
                    0.03150831162929535,
                    -0.01941918581724167,
                    -0.04467311128973961,
                    0.012672513723373413,
                    -0.04790017753839493,
                    -0.061515551060438156,
                    0.01557537168264389,
                    -0.03600574657320976,
                    -0.0030852248892188072,
                    -0.025615686550736427,
                    -0.055345579981803894,
                    0.003760663326829672,
                    0.01269380934536457,
                    0.00393329095095396,
                    -0.042590029537677765,
                    -0.03841635212302208,
                    -0.032558925449848175,
                    0.10126122087240219,
                    0.04077696055173874,
                    -0.016582563519477844,
                    -0.036945052444934845,
                    -0.038533687591552734,
                    0.04636970907449722,
                    0.008434220217168331,
                    0.019585423171520233,
                    -0.022539468482136726,
                    -0.014216210693120956,
                    -0.041032008826732635,
                    -0.0025407280772924423,
                    0.017312072217464447,
                    0.028441203758120537,
                    0.012677570804953575,
                    0.03190436214208603,
                    0.0512399896979332,
                    -0.01967429369688034,
                    0.024083996191620827,
                    0.07263153791427612,
                    0.0010722437873482704,
                    -0.03824205696582794,
                    0.03242853656411171,
                    0.10436595231294632,
                    -0.029507460072636604,
                    0.014576281420886517,
                    -0.016236769035458565,
                    0.016366994008421898,
                    -0.028613876551389694,
                    -0.035143692046403885,
                    0.003507610410451889,
                    0.036702465265989304,
                    -0.07954923808574677,
                    0.06832487881183624,
                    0.015037642791867256,
                    -0.016599493101239204,
                    0.08125312626361847,
                    -0.015609435737133026,
                    -0.029750892892479897,
                    -0.09608523547649384,
                    0.01712704822421074,
                    0.02793624997138977,
                    -0.007604952901601791,
                    0.0037435945123434067,
                    -0.013588450849056244,
                    -0.032402679324150085,
                    0.016268525272607803,
                    0.008946484886109829,
                    0.12010916322469711,
                    0.012771259061992168,
                    0.1045733392238617,
                    -0.022902406752109528,
                    0.08665429055690765,
                    -0.06500068306922913,
                    -0.01734813302755356,
                    0.005802609026432037,
                    0.0022180574014782906,
                    -0.018247099593281746,
                    0.0012847320176661015,
                    -0.021275971084833145,
                    -0.022208530455827713,
                    -0.020800406113266945,
                    -0.03800724446773529,
                    -0.028624851256608963,
                    0.07687469571828842,
                    -0.00824202410876751,
                    0.01634409837424755,
                    0.02502748928964138,
                    0.06534799188375473,
                    0.017192570492625237,
                    -0.03712092339992523,
                    -0.004111507907509804,
                    0.039548393338918686,
                    -0.07812650501728058,
                    -0.031067244708538055,
                    -0.001957257743924856,
                    -0.005787395406514406,
                    0.011129345744848251,
                    -0.02745811454951763,
                    0.024236369878053665,
                    -0.004961343482136726,
                    -0.14156652987003326,
                    -0.02885223738849163,
                    -0.02554391138255596,
                    0.05072345212101936,
                    0.038604769855737686,
                    -0.16853830218315125,
                    -0.045071858912706375,
                    -0.03187328204512596,
                    0.08205785602331161,
                    -0.00670903455466032,
                    0.0367199182510376,
                    -0.07856637239456177,
                    0.09246686846017838,
                    0.02324778586626053,
                    0.05488380789756775,
                    0.005430262070149183,
                    0.010114864446222782,
                    0.042554907500743866,
                    0.11054512858390808,
                    0.01752474159002304,
                    -0.04351155459880829,
                    -0.043514855206012726,
                    0.027653366327285767,
                    -0.049060702323913574,
                    -0.11159765720367432,
                    0.03218798711895943,
                    -0.05381308123469353,
                    0.005637762136757374,
                    -0.025533627718687057,
                    -0.08204971998929977,
                    0.0685405507683754,
                    -0.0047913119196891785,
                    -0.04476677253842354,
                    0.04923919215798378,
                    0.019178852438926697,
                    0.024825796484947205,
                    -0.06277380883693695,
                    -0.03058655746281147,
                    -0.030464258044958115,
                    0.031048040837049484,
                    -0.028573470190167427,
                    -0.0037959562614560127,
                    0.09287509322166443,
                    0.058526571840047836,
                    -0.039775460958480835,
                    -0.039269402623176575,
                    0.031136251986026764,
                    -0.032888058573007584,
                    0.00044391912524588406,
                    -0.005103897303342819,
                    0.11646900326013565,
                    -0.0823708176612854,
                    -0.07376515865325928,
                    0.050077639520168304,
                    -0.042891111224889755,
                    0.04904651269316673,
                    -0.011979883536696434,
                    0.010281437076628208,
                    0.11737050861120224,
                    0.011649193242192268,
                    0.07248634099960327,
                    -0.02465108036994934
                ],
                "report_type": "Heap-buffer-overflow READ 1",
                "severity": "Medium"
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        },
        "relation1": {
            "identity": 21695,
            "start": 10499,
            "end": 8437,
            "type": "PATCHING_COMMIT",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 8437,
            "labels": [
                "Commit"
            ],
            "properties": {
                "message": "Fix regression buffer overflow introduced in recent new code - fixes ClusterFuzz 61268\n",
                "sha": "5f77d022733a5b7e2ff1e3d80b547c0d89811efe",
                "repo": "pcre2",
                "encoding": "UTF-8",
                "authored_date": 1691504124,
                "committer_tz_offset": -3600,
                "author_tz_offset": -3600,
                "committed_date": 1691504124
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    },
    {
        "baseNode": {
            "identity": 10499,
            "labels": [
                "VulnerabilityPatch"
            ],
            "properties": {
                "vulnerability_description_embeddings": [
                    0.037007756531238556,
                    0.022945860400795937,
                    0.023970933631062508,
                    0.030357925221323967,
                    -0.0006825604941695929,
                    -0.011196949519217014,
                    0.011203519999980927,
                    0.021697374060750008,
                    -0.04342103376984596,
                    -0.0131748141720891,
                    0.04883551970124245,
                    0.04215940460562706,
                    -0.044551242142915726,
                    0.03343314304947853,
                    -0.02368181012570858,
                    -0.011538639664649963,
                    0.0253639817237854,
                    -0.013838483020663261,
                    -0.001581963268108666,
                    0.013628211803734303,
                    0.016388023272156715,
                    0.01703197881579399,
                    0.058875977993011475,
                    0.04436725378036499,
                    0.06702399253845215,
                    -0.024168062955141068,
                    0.005631329491734505,
                    0.00039220534381456673,
                    0.014587574638426304,
                    -0.07985053956508636,
                    -0.042606230825185776,
                    -0.03616667166352272,
                    0.033354293555021286,
                    -0.047941867262125015,
                    0.04068750515580177,
                    -0.006363993510603905,
                    -0.008732832036912441,
                    0.022906433790922165,
                    -0.013312804512679577,
                    -0.0011950968764722347,
                    -0.024654315784573555,
                    -0.0436050184071064,
                    -0.016716571524739265,
                    0.026691319420933723,
                    0.013983044773340225,
                    0.04967660456895828,
                    -0.023997217416763306,
                    -0.007352926302701235,
                    -0.03046306036412716,
                    0.03719174489378929,
                    -0.0217762254178524,
                    0.014508722350001335,
                    -0.0021602094639092684,
                    0.11217976361513138,
                    -0.00506293959915638,
                    0.04134460166096687,
                    0.006725397426635027,
                    0.019949493929743767,
                    0.025022290647029877,
                    -0.0015507511561736465,
                    0.03172468766570091,
                    -0.0005186966736800969,
                    -0.008969387039542198,
                    -0.04263251647353172,
                    -0.027939805760979652,
                    0.0016805280465632677,
                    -0.01646687462925911,
                    -0.0021355682983994484,
                    0.046154558658599854,
                    0.038190532475709915,
                    -0.0253639817237854,
                    -0.03719174489378929,
                    -0.029385419562458992,
                    -0.014456154778599739,
                    -0.011269229464232922,
                    -0.01508696936070919,
                    0.04760017618536949,
                    -0.0026678177528083324,
                    0.0009306150022894144,
                    0.0109012546017766,
                    0.05272553861141205,
                    0.04018811136484146,
                    0.01600690558552742,
                    -0.02305099554359913,
                    0.04788929969072342,
                    -0.0263496283441782,
                    -0.07827350497245789,
                    0.015757208690047264,
                    0.014206457883119583,
                    -0.025705670937895775,
                    -0.030778467655181885,
                    0.008890535682439804,
                    0.0010850329417735338,
                    -0.010960393585264683,
                    -0.017439380288124084,
                    -0.055248796939849854,
                    0.020146623253822327,
                    -0.048861805349588394,
                    -0.009074523113667965,
                    0.00933736190199852,
                    -0.004553688690066338,
                    -0.01488984003663063,
                    0.05803488940000534,
                    -0.02562681958079338,
                    0.01847759447991848,
                    -0.02796608954668045,
                    -0.004356559365987778,
                    0.0001277234114240855,
                    0.020632876083254814,
                    0.0010185018181800842,
                    -0.038979049772024155,
                    -0.009501636028289795,
                    -0.0005511409253813326,
                    -0.03380111977458,
                    0.0031425708439201117,
                    -0.022985287010669708,
                    0.006768108811229467,
                    0.023471537977457047,
                    0.003076861146837473,
                    0.010395289398729801,
                    -0.0008139800629578531,
                    0.033643413335084915,
                    0.0003447710769250989,
                    -0.04318447783589363,
                    -0.011400649324059486,
                    -0.06276599317789078,
                    -0.005536050070077181,
                    -0.02464117296040058,
                    -0.026178782805800438,
                    -0.01529724057763815,
                    0.03916303813457489,
                    -0.004823098890483379,
                    0.04129203408956528,
                    -0.007182080764323473,
                    -0.02954312413930893,
                    0.0007889282424002886,
                    -0.05451284721493721,
                    0.021289974451065063,
                    0.01679542288184166,
                    -0.029332851991057396,
                    -0.0008398533100262284,
                    0.0073003582656383514,
                    0.021618522703647614,
                    -0.005884312093257904,
                    -0.031803540885448456,
                    0.04413069784641266,
                    0.01521838828921318,
                    -0.006206290330737829,
                    0.003893305314704776,
                    0.028780890628695488,
                    0.04279021918773651,
                    0.04331589862704277,
                    -0.03653464466333389,
                    -0.05651042237877846,
                    0.018924420699477196,
                    -0.0663406103849411,
                    0.019226685166358948,
                    -0.013345659710466862,
                    -0.021434534341096878,
                    0.017597083002328873,
                    -0.009258510544896126,
                    -0.01144664641469717,
                    -0.0037487437948584557,
                    0.02951684035360813,
                    0.0039852992631495,
                    0.020278042182326317,
                    -0.02757183089852333,
                    0.0044649806804955006,
                    -0.060558147728443146,
                    -0.058613136410713196,
                    0.05025485157966614,
                    0.0019663656130433083,
                    -0.0054079159162938595,
                    -0.0260473620146513,
                    -0.019029555842280388,
                    -0.03821681812405586,
                    -0.04604942351579666,
                    -0.013838483020663261,
                    0.006452701985836029,
                    0.00403458159416914,
                    0.01385162491351366,
                    0.019620945677161217,
                    0.02203906513750553,
                    0.07327956706285477,
                    -0.044551242142915726,
                    -0.006781250704079866,
                    0.05961192771792412,
                    0.02276187390089035,
                    0.0065709794871509075,
                    0.003393910825252533,
                    -0.06355451047420502,
                    0.053146082907915115,
                    0.00885768048465252,
                    0.02786095254123211,
                    -0.004655539058148861,
                    -0.08032365143299103,
                    0.02575824037194252,
                    0.02783466875553131,
                    -0.04399927705526352,
                    -0.0331965871155262,
                    0.0047146775759756565,
                    0.007392351981252432,
                    0.013089391402900219,
                    -0.008607983589172363,
                    -0.0020255043637007475,
                    -0.010677841491997242,
                    -0.03939959406852722,
                    0.04817842319607735,
                    0.004905236419290304,
                    -0.027624398469924927,
                    0.0376911386847496,
                    -0.005582047160714865,
                    0.015717782080173492,
                    -0.026099931448698044,
                    -0.01611204259097576,
                    -0.0007930350839160383,
                    0.028281494975090027,
                    0.061083827167749405,
                    -0.01490298192948103,
                    -0.008739402517676353,
                    -0.008614554069936275,
                    0.026625609025359154,
                    0.010842116549611092,
                    0.04562888294458389,
                    -0.03225036710500717,
                    0.058087460696697235,
                    -0.005749606993049383,
                    0.0053060660138726234,
                    0.008450279943645,
                    -0.002892873715609312,
                    0.01969979703426361,
                    0.005568905267864466,
                    0.030252790078520775,
                    -0.06607776880264282,
                    0.0324869230389595,
                    0.024417759850621223,
                    0.02862318605184555,
                    0.008148014545440674,
                    -0.009876182302832603,
                    -0.01937124691903591,
                    -0.027492977678775787,
                    0.04389414191246033,
                    -0.012997397221624851,
                    -0.005108936689794064,
                    -0.026126215234398842,
                    -0.005279782228171825,
                    -0.009199371561408043,
                    -0.03198752924799919,
                    0.05375061184167862,
                    0.031015023589134216,
                    -0.05241013318300247,
                    0.001107210060581565,
                    -0.014311593025922775,
                    -0.01917411759495735,
                    -0.0677599385380745,
                    -0.0240497849881649,
                    -0.005457198712974787,
                    0.01248486153781414,
                    0.007556626573204994,
                    -0.06944210827350616,
                    -0.002188136102631688,
                    0.01611204259097576,
                    -0.010388718917965889,
                    0.004418983589857817,
                    -0.011834333650767803,
                    -0.034563351422548294,
                    0.07759012281894684,
                    0.010342721827328205,
                    -0.021171696484088898,
                    -0.031698405742645264,
                    0.03929445892572403,
                    -0.0005301958881318569,
                    0.011801479384303093,
                    -0.0015458229463547468,
                    0.0032887752167880535,
                    -0.012833123095333576,
                    -0.014732136391103268,
                    0.016177751123905182,
                    -0.03579869493842125,
                    0.04720591753721237,
                    -0.001604140386916697,
                    0.0018530162051320076,
                    -0.002846876857802272,
                    0.016177751123905182,
                    0.02571881376206875,
                    -0.014364161528646946,
                    0.00639027776196599,
                    -0.025574252009391785,
                    0.03209266439080238,
                    0.0004603792622219771,
                    -0.001605783123522997,
                    -0.0016090685967355967,
                    0.030489344149827957,
                    -0.0037224600091576576,
                    0.019344963133335114,
                    -0.013450794853270054,
                    -0.019121550023555756,
                    -0.015139536932110786,
                    0.051569048315286636,
                    -0.018333032727241516,
                    0.05122735723853111,
                    0.02717757038772106,
                    0.01952895149588585,
                    0.005010372027754784,
                    -0.009192800149321556,
                    -0.0024641172494739294,
                    -0.005286353174597025,
                    0.0070900870487093925,
                    -0.021105986088514328,
                    0.01320766843855381,
                    -0.0663406103849411,
                    -0.03372226655483246,
                    0.01690055988729,
                    0.012202308513224125,
                    -0.04242224246263504,
                    -0.018687866628170013,
                    0.026454763486981392,
                    -0.006216146517544985,
                    0.00981704331934452,
                    -0.015192104503512383,
                    0.040556084364652634,
                    -0.05777205154299736,
                    0.0165720097720623,
                    -0.022512175142765045,
                    0.011952611617743969,
                    0.020041488111019135,
                    0.015310382470488548,
                    0.03006880171597004,
                    0.03719174489378929,
                    -0.029858531430363655,
                    -0.02644162066280842,
                    -0.03514159843325615,
                    0.01258342619985342,
                    -0.04074007272720337,
                    0.021132269874215126,
                    -0.051595330238342285,
                    0.010158734396100044,
                    0.0009889324428513646,
                    0.039609864354133606,
                    -0.030909888446331024,
                    -0.003073575673624873,
                    -0.007208364550024271,
                    0.028964877128601074,
                    0.008509418927133083,
                    -0.02912258170545101,
                    -0.018398743122816086,
                    0.0429479219019413,
                    0.009284794330596924,
                    0.053277503699064255,
                    0.00981704331934452,
                    -0.009744762443006039,
                    0.02575824037194252,
                    0.02291957661509514,
                    -0.02694101631641388,
                    -0.001021787291392684,
                    -0.008989100344479084,
                    0.045103203505277634,
                    0.006748395971953869,
                    -0.001435759011656046,
                    0.0035220449790358543,
                    -0.03395882248878479,
                    -0.013299662619829178,
                    0.012465148232877254,
                    -0.010132450610399246,
                    0.02315613254904747,
                    0.016151467338204384,
                    -0.03177725523710251,
                    -0.010185018181800842,
                    0.02190764620900154,
                    0.002393479226157069,
                    -0.004359845072031021,
                    0.06923183798789978,
                    -0.0175576563924551,
                    -0.03366969898343086,
                    -0.004855954088270664,
                    -0.011650346219539642,
                    0.007109799887984991,
                    0.022144200280308723,
                    0.02558739483356476,
                    0.01939753070473671,
                    -0.009600200690329075,
                    0.04068750515580177,
                    0.018254181370139122,
                    0.006107725668698549,
                    0.00923879723995924,
                    -0.025929085910320282,
                    0.007576339412480593,
                    0.02012033946812153,
                    -0.06192491203546524,
                    -0.030016234144568443,
                    0.015546937473118305,
                    0.018635297194123268,
                    0.015126395039260387,
                    -0.017202824354171753,
                    0.014272167347371578,
                    0.04762645810842514,
                    0.01222202181816101,
                    -0.02186821959912777,
                    0.0014259025920182467,
                    0.010828974656760693,
                    0.019292395561933517,
                    0.008213724009692669,
                    0.0010176805080845952,
                    0.004149573389440775,
                    0.0044879792258143425,
                    -0.02236761339008808,
                    0.06444817036390305,
                    0.009153374470770359,
                    0.049387481063604355,
                    -0.05477568507194519,
                    0.03671863302588463,
                    -0.04791558161377907,
                    0.02217048406600952,
                    -0.008010024204850197,
                    0.02236761339008808,
                    -0.038584791123867035,
                    -0.06697142124176025,
                    0.021749941632151604,
                    -0.02772953361272812,
                    0.06266085803508759,
                    -0.021066559478640556,
                    -0.057982321828603745,
                    -0.0950426459312439,
                    0.03671863302588463,
                    -0.01347050815820694,
                    -0.010316438041627407,
                    -0.004862525034695864,
                    -0.02331383526325226,
                    0.08778828382492065,
                    -0.057824619114398956,
                    -0.003175425808876753,
                    -0.018175330013036728,
                    -0.03004251793026924,
                    -0.003742172848433256,
                    0.019607802852988243,
                    0.03501017764210701,
                    -0.024746308103203773,
                    -0.025087999179959297,
                    0.009784188121557236,
                    -0.013148530386388302,
                    -0.048966940492391586,
                    -0.0060880123637616634,
                    -0.01976550556719303,
                    0.0312252938747406,
                    -0.008042878471314907,
                    -0.010513567365705967,
                    -0.005424343515187502,
                    -0.00952134933322668,
                    0.032329220324754715,
                    0.02164480648934841,
                    0.006334424484521151,
                    -0.044708944857120514,
                    0.004681822843849659,
                    0.0036370372399687767,
                    0.02348468080163002,
                    0.038190532475709915,
                    0.03359084576368332,
                    -0.0052962093614041805,
                    -0.006009160540997982,
                    0.0070769451558589935,
                    -0.008522560819983482,
                    0.01745252124965191,
                    -0.03161955252289772,
                    0.02836034819483757,
                    0.005516337230801582,
                    0.027519261464476585,
                    0.01771536096930504,
                    -0.0033462713472545147,
                    0.01022444386035204,
                    0.008115159347653389,
                    -0.022117916494607925,
                    -0.011374365538358688,
                    0.04202798381447792,
                    0.0033840544056147337,
                    -0.04531347379088402,
                    0.005831744521856308,
                    -0.03172468766570091,
                    -0.05183188617229462,
                    -0.01712397299706936,
                    -0.04502435028553009,
                    0.001982792979106307,
                    -0.06539438664913177,
                    -0.0052469270303845406,
                    -0.03629809245467186,
                    0.01301053911447525,
                    0.10828974097967148,
                    -0.0058908830396831036,
                    -0.01508696936070919,
                    -0.021552812308073044,
                    -0.04865153133869171,
                    -0.054565414786338806,
                    0.04904578998684883,
                    0.06912670284509659,
                    -0.01502125896513462,
                    -0.01096696499735117,
                    0.01144664641469717,
                    0.03606153652071953,
                    -0.03866364434361458,
                    0.02770324982702732,
                    -0.05164789780974388,
                    0.003577898256480694,
                    -0.020632876083254814,
                    -0.030883602797985077,
                    -0.07559254765510559,
                    0.017281675711274147,
                    -0.013812199234962463,
                    -0.03214523196220398,
                    -0.03590383380651474,
                    -0.02061973325908184,
                    -0.02993738278746605,
                    0.026060504838824272,
                    -0.008469992317259312,
                    -0.02055402472615242,
                    -0.0006718826480209827,
                    -0.02276187390089035,
                    -0.014364161528646946,
                    -0.00683381874114275,
                    0.04215940460562706,
                    -0.04762645810842514,
                    0.0018168758833780885,
                    0.005016942974179983,
                    -0.00800345279276371,
                    -0.025285128504037857,
                    -0.04021439328789711,
                    0.02381322905421257,
                    -0.0351678840816021,
                    -0.038847632706165314,
                    -0.07007292658090591,
                    0.02259102836251259,
                    -0.03490504249930382,
                    0.009127090685069561,
                    -0.008529131300747395,
                    0.016716571524739265,
                    -0.0018316605128347874,
                    0.01470585260540247,
                    -0.025981653481721878,
                    0.010592418722808361,
                    -0.004547117743641138,
                    0.0035811837296932936,
                    0.007826036773622036,
                    0.020672300830483437,
                    0.0009757904335856438,
                    -0.014771562069654465,
                    0.006692542694509029,
                    -0.007109799887984991,
                    -0.022354472428560257,
                    0.03798026219010353,
                    0.022604169324040413,
                    0.02344525419175625,
                    0.020738011226058006,
                    -0.027256423607468605,
                    0.01521838828921318,
                    0.005388203077018261,
                    0.007786610629409552,
                    0.025810807943344116,
                    0.029569407925009727,
                    -0.004734390880912542,
                    -0.00810201745480299,
                    0.007661762181669474,
                    0.036771200597286224,
                    0.01784677989780903,
                    -0.010947251692414284,
                    -0.0019729365594685078,
                    -0.0007782503962516785,
                    -0.046785373240709305,
                    0.023800088092684746,
                    -0.020264901220798492,
                    -0.03133042901754379,
                    0.03327544033527374,
                    0.009587058797478676,
                    -0.0005963164148852229,
                    0.045970574021339417,
                    -0.009606772102415562,
                    0.01249800343066454,
                    0.013720205053687096,
                    -0.003037435235455632,
                    0.037139177322387695,
                    0.024588605388998985,
                    0.034957610070705414,
                    -0.0221047755330801,
                    0.0018760146340355277,
                    -0.011420362628996372,
                    -0.005053083412349224,
                    -0.018188470974564552,
                    -0.023708093911409378,
                    0.010993248783051968,
                    0.04828355833888054,
                    -0.027019867673516273,
                    -0.017176540568470955,
                    0.026336485520005226,
                    0.0025971797294914722,
                    0.01529724057763815,
                    -0.008542273193597794,
                    -0.0006488842191174626,
                    0.031199010089039803,
                    0.018793001770973206,
                    0.02694101631641388,
                    -0.005812031216919422,
                    -0.015008117072284222,
                    0.003692890517413616,
                    0.030541913583874702,
                    -0.0040214392356574535,
                    0.010237585753202438,
                    -0.012346870265901089,
                    0.011019532568752766,
                    0.01241915114223957,
                    -0.014561290852725506,
                    -0.0010776406852528453,
                    0.03227665275335312,
                    -0.04562888294458389,
                    0.006176720838993788,
                    0.029490556567907333,
                    -0.0028173073660582304,
                    -0.014364161528646946,
                    -0.022052207961678505,
                    0.027545545250177383,
                    -0.016611436381936073,
                    -0.04371015727519989,
                    -0.00047598531818948686,
                    0.01134808175265789,
                    0.037296880036592484,
                    -0.011978895403444767,
                    0.0273089911788702,
                    -0.03251320496201515,
                    -0.05051768943667412,
                    0.06155693531036377,
                    -0.04460380971431732,
                    -0.010020744055509567,
                    0.013812199234962463,
                    0.03847965598106384,
                    -0.00825315061956644,
                    -0.043920427560806274,
                    0.011275800876319408,
                    0.007372639141976833,
                    -0.023064138367772102,
                    -0.011236375197768211,
                    0.03698147088289261,
                    -0.015625789761543274,
                    -0.01679542288184166,
                    -0.041975416243076324,
                    0.0409766286611557,
                    -0.0034957611933350563,
                    0.015888627618551254,
                    -0.023169273510575294,
                    0.031304147094488144,
                    -0.0312778614461422,
                    0.03112015873193741,
                    0.011794907972216606,
                    -0.0012378082610666752,
                    -0.014508722350001335,
                    -0.024457186460494995,
                    -0.008936531841754913,
                    0.04113433137536049,
                    0.020409462973475456,
                    0.01490298192948103,
                    -0.04589172080159187,
                    -0.011440075002610683,
                    -0.026730744168162346,
                    -0.005069510545581579,
                    -0.009922179393470287,
                    0.025482257828116417,
                    0.00849627610296011,
                    -0.02512742578983307,
                    -0.0108881127089262,
                    -0.021631663665175438,
                    0.007392351981252432,
                    -0.036114104092121124,
                    -0.02361609973013401,
                    0.028202643617987633,
                    0.013069678097963333,
                    0.023931507021188736,
                    -0.029700826853513718,
                    0.022945860400795937,
                    -0.005568905267864466,
                    0.024286340922117233,
                    -0.01926611177623272,
                    0.0064592729322612286,
                    0.004632540512830019,
                    -0.007924601435661316,
                    0.018438167870044708,
                    -0.002685887971892953,
                    0.009225655347108841,
                    -0.017137113958597183,
                    -0.0662880390882492,
                    -0.0026579611003398895,
                    -0.004609541967511177,
                    -0.0020534310024231672,
                    -0.02628391794860363,
                    0.018135903403162956,
                    -0.014153890311717987,
                    -0.010316438041627407,
                    -0.02190764620900154,
                    0.01989692635834217,
                    -0.027256423607468605,
                    0.014732136391103268,
                    -0.05125363916158676,
                    -0.011505785398185253,
                    0.0035450435243546963,
                    -0.007477774750441313,
                    -0.0325394906103611,
                    0.015139536932110786,
                    -0.0023852656595408916,
                    -0.006754966918379068,
                    0.02575824037194252,
                    -0.0004936448531225324,
                    -0.053540341556072235,
                    0.013069678097963333,
                    -0.0126951327547431,
                    0.00016057831817306578,
                    0.023800088092684746,
                    -0.004819813650101423,
                    -0.014548148959875107,
                    -0.04218569025397301,
                    0.03098873980343342,
                    -0.046154558658599854,
                    -0.018950704485177994,
                    -0.02783466875553131,
                    -0.03261834383010864,
                    0.026310201734304428,
                    0.004819813650101423,
                    0.010598990134894848,
                    0.0036140386946499348,
                    0.0331440195441246,
                    -0.026822738349437714,
                    -0.014193315990269184,
                    0.012859406881034374,
                    0.008824825286865234,
                    -0.05122735723853111,
                    -0.005197644699364901,
                    0.06818048655986786,
                    0.0036041822750121355,
                    0.014456154778599739,
                    0.020632876083254814,
                    0.013043394312262535,
                    0.0188455693423748,
                    0.009311078116297722,
                    -0.01933182217180729,
                    -0.009849898517131805,
                    -0.001105567323975265,
                    0.005223928485065699,
                    0.005854742601513863,
                    -0.040556084364652634,
                    0.05493338778614998,
                    0.041554875671863556,
                    -0.005266639869660139,
                    0.004954518750309944,
                    -0.033643413335084915,
                    -0.012097173370420933,
                    -0.0217762254178524,
                    -0.0008879036176949739,
                    -0.03784884139895439,
                    0.01037557702511549,
                    0.02364238351583481,
                    -0.022078491747379303,
                    0.02252531796693802,
                    -0.061609502881765366,
                    0.014114463701844215,
                    -0.007280645426362753,
                    -0.014495580457150936,
                    -0.008082305081188679,
                    0.00828600488603115,
                    0.020370036363601685,
                    0.0047146775759756565,
                    0.012773984111845493,
                    -0.027939805760979652,
                    0.023773804306983948,
                    -0.05125363916158676,
                    -0.026651892811059952,
                    0.034405648708343506,
                    -0.00013573179603554308,
                    -0.006787821650505066,
                    0.0033019171096384525,
                    0.040398381650447845,
                    -0.0012591639533638954,
                    0.007668333128094673,
                    -0.04878295212984085,
                    0.004934805445373058,
                    -0.0030785039998590946,
                    0.0073003582656383514,
                    0.009094235487282276,
                    -0.016282888129353523,
                    -0.00457011628895998,
                    0.015192104503512383,
                    0.016677146777510643,
                    -0.04723219946026802,
                    -0.010132450610399246,
                    -0.006853531580418348,
                    0.021920787170529366,
                    -0.00692581245675683,
                    -0.018004484474658966,
                    -0.010723838582634926,
                    -0.05556420236825943,
                    0.013877908699214458,
                    -0.017544515430927277,
                    0.03353827819228172,
                    0.01946324110031128,
                    -0.0011154237436130643,
                    -0.10329579561948776,
                    0.03282861411571503,
                    0.05306722968816757,
                    0.01620403490960598,
                    -0.018267322331666946,
                    0.0104215731844306,
                    0.012294302694499493,
                    -0.0034464788623154163,
                    0.008220295421779156,
                    -0.033354293555021286,
                    0.041160617023706436,
                    0.005417772568762302,
                    -0.020790578797459602,
                    -0.04725848510861397,
                    -0.0305681973695755,
                    0.01847759447991848,
                    -0.011919756419956684,
                    0.021552812308073044,
                    -0.012708274647593498,
                    -0.006127438507974148,
                    -0.00868026353418827,
                    -0.02549540065228939,
                    0.01567835733294487,
                    -0.0014152247458696365,
                    -0.014009328559041023,
                    -0.0018382315756753087,
                    0.0033052025828510523,
                    -0.017531372606754303,
                    0.002759811468422413,
                    -0.019029555842280388,
                    0.019910067319869995,
                    0.02121112123131752,
                    -0.0038735924754291773,
                    -0.010040456429123878,
                    0.011532069183886051,
                    -0.027650682255625725,
                    -0.021986497566103935,
                    0.012576854787766933,
                    0.013214239850640297,
                    -0.0021700658835470676,
                    -0.03955729678273201,
                    -0.054723117500543594,
                    0.01528409868478775,
                    -0.03958358243107796,
                    0.007832607254385948,
                    0.0004533975734375417,
                    4.0683604311197996e-05,
                    0.03264462575316429,
                    -0.015599505044519901,
                    -0.005687182769179344,
                    -0.028859741985797882,
                    -0.024260057136416435,
                    0.042106837034225464,
                    -0.015270956791937351,
                    0.00044271975639276206,
                    0.000285837595583871,
                    -0.004579972941428423,
                    -0.015441801398992538,
                    0.02219676971435547,
                    0.012360012158751488,
                    0.007195222657173872,
                    0.01404875423759222,
                    -0.0060025895945727825,
                    -0.011190378107130527,
                    0.012340299785137177,
                    -0.029490556567907333,
                    0.012839693576097488,
                    0.009212513454258442,
                    0.005779176484793425,
                    -0.0015047542983666062,
                    -0.012156312353909016,
                    0.029753394424915314,
                    -0.016361739486455917,
                    0.010546422563493252,
                    0.007740614004433155,
                    -0.00712951272726059,
                    0.004803386051207781,
                    0.018858710303902626,
                    -0.00198936415836215,
                    0.011426933109760284,
                    0.0480995699763298,
                    0.0065216971561312675,
                    -0.006787821650505066,
                    -0.00203864648938179,
                    0.010047027841210365,
                    -0.021552812308073044,
                    0.007346354890614748,
                    -0.025403406471014023,
                    0.02361609973013401,
                    0.01620403490960598,
                    -0.0029372279532253742,
                    0.018858710303902626,
                    0.016190893948078156,
                    0.026139356195926666,
                    0.02042260393500328,
                    -0.012747700326144695,
                    -0.016388023272156715,
                    -0.020632876083254814,
                    -0.029175149276852608,
                    0.007688045967370272,
                    -0.008805112913250923,
                    -0.017610225826501846,
                    0.011229803785681725,
                    -0.04384157434105873,
                    -0.029989950358867645,
                    -0.01002731453627348,
                    0.048756666481494904,
                    0.020987708121538162,
                    -0.025994794443249702,
                    0.011131239123642445,
                    0.005128649529069662,
                    0.06744453310966492,
                    -0.010329579934477806,
                    -0.01831989176571369,
                    0.03734944760799408,
                    0.04589172080159187,
                    -0.0035319013986736536,
                    0.014561290852725506,
                    -0.009771046228706837,
                    -0.014088179916143417,
                    -0.0023244840558618307,
                    0.03472105413675308,
                    -0.025534827262163162,
                    -0.007458061911165714,
                    -0.0039195893332362175,
                    0.015954338014125824,
                    0.022380756214261055,
                    0.010263869538903236,
                    0.0026596039533615112,
                    -0.015178962610661983,
                    0.006449416279792786,
                    0.01992321014404297,
                    0.02591594308614731,
                    0.007352926302701235,
                    0.0031277863308787346,
                    -0.01847759447991848,
                    -0.000802480848506093,
                    0.05333007127046585,
                    0.037296880036592484,
                    0.023826371878385544,
                    -0.006715541239827871,
                    0.011946041136980057,
                    0.009849898517131805,
                    -0.018753575161099434,
                    -0.0005195180419832468,
                    0.014521865174174309,
                    -0.024851445108652115,
                    0.011985466815531254,
                    0.008791971020400524,
                    0.04917721077799797,
                    0.026783311739563942,
                    -0.055616769939661026,
                    -0.00211256998591125,
                    -0.03201381117105484,
                    0.006071585230529308,
                    0.020711727440357208,
                    -0.018779858946800232,
                    0.026375912129878998,
                    0.027624398469924927,
                    0.0005766034591943026,
                    -0.009488494135439396,
                    0.04907207563519478,
                    -0.019936351105570793,
                    0.013812199234962463,
                    0.020987708121538162,
                    -0.01076983567327261,
                    -0.013089391402900219,
                    -0.006873244419693947,
                    -0.04010925814509392,
                    -0.016177751123905182,
                    0.012990826740860939,
                    0.020015204325318336,
                    0.027755817398428917,
                    -0.01258342619985342,
                    0.01116409432142973,
                    0.02558739483356476,
                    0.020330609753727913,
                    0.014495580457150936,
                    0.012701703235507011,
                    0.023011570796370506,
                    0.03085731901228428,
                    0.01567835733294487,
                    -0.004681822843849659,
                    0.029621975496411324,
                    -0.009751333855092525,
                    0.012833123095333576,
                    0.006094583310186863,
                    0.013707063160836697,
                    -0.021565955132246017,
                    -0.02236761339008808,
                    -0.016493158414959908,
                    0.038453370332717896,
                    -0.008897106163203716,
                    0.009074523113667965,
                    0.022025924175977707,
                    -0.01972608081996441,
                    0.003623895114287734,
                    0.002978296484798193,
                    -0.03734944760799408,
                    -0.00045380828669294715,
                    0.043789006769657135,
                    0.01145978830754757,
                    0.006971809081733227,
                    -0.041318319737911224,
                    -0.034300513565540314,
                    0.023208700120449066,
                    -0.01979179121553898,
                    0.000522392860148102,
                    -0.017781071364879608,
                    0.01762336678802967,
                    -0.004980802536010742,
                    0.029989950358867645,
                    -0.029306568205356598,
                    0.03737573325634003,
                    -0.022985287010669708,
                    0.016217177733778954,
                    -0.014469296671450138,
                    0.002469045575708151,
                    0.02151338756084442,
                    -0.027151286602020264,
                    0.022985287010669708,
                    -0.0474424734711647,
                    0.019607802852988243,
                    -0.0035680418368428946,
                    -0.059927333146333694,
                    -0.005434200167655945,
                    0.011716056615114212,
                    -0.007996882311999798,
                    0.013319375924766064,
                    0.0146401422098279,
                    0.018464451655745506,
                    -0.006567694246768951,
                    0.024286340922117233,
                    0.030620764940977097,
                    -0.02912258170545101,
                    0.003926160279661417,
                    0.00252818432636559,
                    -0.01686113327741623,
                    0.006380421109497547,
                    -0.009291364811360836,
                    -0.006603834219276905,
                    -0.014403587207198143,
                    -0.018162187188863754,
                    -0.0017462378600612283,
                    0.00780632346868515,
                    -0.012110315263271332,
                    -0.01736052706837654,
                    0.018188470974564552,
                    0.019975777715444565,
                    -0.007182080764323473,
                    0.0029717255383729935,
                    0.011144381016492844,
                    0.010980106890201569,
                    0.004284278489649296,
                    0.004757388960570097,
                    -0.007885175757110119,
                    -0.016624577343463898,
                    0.02101399190723896,
                    -0.00693238340318203,
                    0.004297420382499695,
                    0.00442226929590106,
                    0.0021947070490568876,
                    -0.013707063160836697,
                    0.025009147822856903,
                    -0.018175330013036728,
                    0.006386992055922747,
                    -0.019542092457413673,
                    0.008279434405267239,
                    0.010060169734060764,
                    0.007760326843708754,
                    -0.002710529137402773,
                    0.02464117296040058,
                    -0.008358285762369633,
                    0.009935321286320686,
                    -0.03632437437772751,
                    -0.007924601435661316,
                    0.03790140897035599,
                    -0.005618187598884106,
                    0.010382147505879402,
                    -0.0028386630583554506,
                    0.012557141482830048,
                    0.009350503794848919,
                    -0.032460637390613556,
                    -0.014916123822331429,
                    -0.014075038023293018,
                    -0.022801298648118973,
                    -0.008686834946274757,
                    -0.03403767570853233,
                    0.018727291375398636,
                    0.019187260419130325,
                    -0.020370036363601685,
                    0.00825315061956644,
                    -0.02203906513750553,
                    0.025534827262163162,
                    -0.006965238135308027,
                    -0.01768907718360424,
                    0.002347482368350029,
                    0.021894503384828568,
                    0.0018201613565906882,
                    0.00466868095099926,
                    0.005657613277435303,
                    0.031934961676597595,
                    0.007556626573204994,
                    0.01937124691903591,
                    -0.012649135664105415,
                    0.0027778816875070333,
                    -0.02291957661509514,
                    0.015954338014125824,
                    0.000249286531470716,
                    0.006232574116438627,
                    -0.001312553184106946,
                    0.03745458275079727,
                    0.012635993771255016,
                    0.02167109027504921,
                    -0.006344280671328306,
                    0.020593449473381042,
                    -0.005168075207620859,
                    0.007280645426362753,
                    0.007918030023574829,
                    0.019029555842280388,
                    -0.029359135776758194,
                    0.05803488940000534,
                    -0.01946324110031128,
                    -0.03939959406852722,
                    0.002761454088613391,
                    0.030410492792725563,
                    0.0029355851002037525,
                    -0.009849898517131805,
                    -0.01926611177623272,
                    0.013904192484915257,
                    0.020212333649396896,
                    0.01640116423368454,
                    0.0019844358321279287,
                    -0.029096297919750214,
                    -0.03826938569545746,
                    -0.008476563729345798,
                    0.011551781557500362,
                    -0.008739402517676353,
                    -0.005138506181538105,
                    0.04915092512965202,
                    0.006393563002347946,
                    0.0073397839441895485,
                    0.040529802441596985,
                    -0.0031064306385815144,
                    -0.01762336678802967,
                    0.035719845443964005,
                    -0.012760842218995094,
                    -0.01297768484801054,
                    -0.0169268436729908,
                    -0.015796635299921036,
                    0.08742031455039978,
                    -0.005398059729486704,
                    -0.008062591776251793,
                    0.030620764940977097,
                    -0.027887236326932907,
                    0.004793529398739338,
                    0.035982683300971985,
                    -0.0136544955894351,
                    -0.03537815436720848,
                    0.014009328559041023,
                    0.011466359719634056,
                    -0.0042317109182477,
                    0.007793181575834751,
                    0.01529724057763815,
                    0.029464272782206535,
                    0.018819285556674004,
                    -0.014127605594694614,
                    0.02153967134654522,
                    -0.004363130312412977,
                    -0.026625609025359154,
                    0.03138299658894539,
                    -0.006492127664387226,
                    -0.007260932587087154,
                    -0.009692194871604443,
                    -0.016190893948078156,
                    0.013496791943907738,
                    0.02585023269057274,
                    -0.029306568205356598,
                    0.019095266237854958,
                    0.010973535478115082,
                    0.02424691431224346,
                    -0.03225036710500717,
                    -0.020370036363601685,
                    0.011170664802193642,
                    -0.023064138367772102,
                    0.017570799216628075,
                    0.0037618856877088547,
                    0.014692709781229496,
                    -0.006166864186525345,
                    -0.012057747691869736,
                    -0.04812585562467575,
                    0.001958151813596487,
                    0.0009503278997726738,
                    0.06513155251741409,
                    -0.004855954088270664,
                    0.0060025895945727825,
                    0.003719174303114414,
                    0.01952895149588585,
                    -0.012701703235507011,
                    0.01347050815820694,
                    0.021092845126986504,
                    -8.829753642203286e-05,
                    -1.8942901078844443e-05,
                    -0.009173087775707245,
                    0.0004989837761968374,
                    -0.00437298696488142,
                    0.05514366179704666,
                    0.019358105957508087,
                    0.034537069499492645,
                    0.0014735421864315867,
                    -0.0016788853099569678,
                    -0.0230904221534729,
                    0.0005585332401096821,
                    -0.025140566751360893,
                    0.02575824037194252,
                    -0.01326023694127798,
                    -0.0011507427552714944,
                    0.02206534892320633,
                    0.001458757440559566,
                    0.01340479776263237,
                    -0.03301260247826576,
                    0.030673332512378693,
                    -0.027913520112633705,
                    -0.016151467338204384,
                    0.015113253146409988,
                    0.009541062638163567,
                    0.021105986088514328,
                    0.006373850163072348,
                    0.0025199707597494125,
                    0.059138815850019455,
                    0.00800345279276371,
                    -0.0017593797529116273,
                    0.03537815436720848,
                    -0.012011750601232052,
                    -0.0013306234031915665,
                    0.004287564195692539,
                    0.024522894993424416,
                    0.008391140960156918,
                    0.007918030023574829,
                    0.008036307990550995,
                    -0.03472105413675308,
                    0.005325778853148222,
                    -0.019187260419130325,
                    -0.006193147972226143,
                    -0.018398743122816086,
                    -0.005089223850518465,
                    0.024628031998872757,
                    -0.020830005407333374,
                    0.024089211598038673,
                    -0.00014117338287178427,
                    -0.017478805035352707,
                    -0.014416729100048542,
                    -0.027519261464476585,
                    -0.0036567500792443752,
                    -0.0021092845126986504,
                    -0.034300513565540314,
                    -0.00265139015391469,
                    0.015454944223165512,
                    -0.04113433137536049,
                    0.00012053640239173546,
                    0.00816772785037756,
                    0.004681822843849659,
                    -0.0065972632728517056,
                    0.00201729079708457,
                    0.01340479776263237,
                    -0.0016328884521499276,
                    -0.016033189371228218,
                    -0.026507331058382988,
                    0.022223053500056267,
                    0.0039064474403858185,
                    0.0031524274963885546,
                    0.02364238351583481,
                    0.014469296671450138,
                    -0.029437988996505737,
                    0.02499600686132908,
                    -0.008029736578464508,
                    -0.004211998078972101,
                    0.023405829444527626,
                    -0.014797845855355263,
                    -0.02849176712334156,
                    0.013450794853270054,
                    0.0009125447832047939,
                    0.04428840056061745,
                    -0.017334243282675743,
                    -0.011959183029830456,
                    0.027230139821767807,
                    0.0156389307230711,
                    0.05283067375421524,
                    0.03072590008378029,
                    -0.013707063160836697,
                    0.003172140335664153,
                    0.04344731569290161,
                    -0.015665214508771896,
                    0.02980596385896206,
                    0.026993583887815475,
                    0.0020041486714035273,
                    -0.005959878209978342,
                    -0.01663772016763687,
                    0.01722910813987255,
                    0.003768456866964698,
                    -0.010467570275068283,
                    0.0038243101444095373,
                    -0.0637122169137001,
                    0.0023080564569681883,
                    0.019213544204831123,
                    0.03908418491482735,
                    0.0028978020418435335,
                    -0.03006880171597004,
                    0.027808384969830513,
                    -0.026862164959311485,
                    0.002920800354331732,
                    -0.014324734918773174,
                    -0.037402015179395676,
                    -0.01910840906202793,
                    0.006019017193466425,
                    -0.026573041453957558,
                    0.01979179121553898,
                    0.019936351105570793,
                    -0.005637900438159704,
                    0.00417585764080286,
                    -0.02424691431224346,
                    -0.026257634162902832,
                    -0.002761454088613391,
                    -0.012773984111845493,
                    0.013746488839387894,
                    -0.021355682983994484,
                    -0.01145978830754757,
                    0.014219599775969982,
                    -0.020212333649396896,
                    0.026651892811059952,
                    -0.0007018627366051078,
                    -0.018832426518201828,
                    0.006111010909080505,
                    -0.006600548978894949,
                    -0.007602623198181391,
                    0.007497487589716911,
                    0.02862318605184555,
                    -0.014206457883119583,
                    0.02888602577149868,
                    0.008220295421779156,
                    0.02477259188890457,
                    0.012852835468947887,
                    -0.01851702108979225,
                    0.009048238396644592,
                    -0.02941170521080494,
                    -0.002856733277440071,
                    -0.0026234635151922703,
                    0.00022423468180932105,
                    -0.0026398911140859127,
                    0.009639627300202847,
                    -0.002904372988268733,
                    -0.024549178779125214,
                    -0.008890535682439804,
                    0.03172468766570091,
                    0.025206277146935463,
                    -0.001080926158465445,
                    -0.03698147088289261,
                    -7.551493035862222e-05,
                    -0.050543975085020065,
                    -0.033380575478076935,
                    0.017110830172896385,
                    -0.007826036773622036,
                    0.0010850329417735338,
                    0.0023786944802850485,
                    -0.004037866834551096,
                    0.009449068456888199,
                    0.0005359455244615674,
                    0.004179142881184816,
                    -0.02291957661509514,
                    0.01523153018206358,
                    -0.003449764335528016,
                    -0.011663489043712616,
                    0.0008254792774096131,
                    -0.005595189053565264,
                    -0.03209266439080238,
                    0.0305944811552763,
                    0.00476067466661334,
                    -0.01528409868478775,
                    0.001495719188824296,
                    -0.03550957515835762,
                    -0.0007922137156128883,
                    -0.00866055116057396,
                    0.040766358375549316,
                    -0.04029324650764465,
                    0.04321075975894928,
                    -0.025416549295186996,
                    -0.02836034819483757,
                    -0.01672971434891224,
                    0.007195222657173872,
                    0.005680611822754145,
                    0.022512175142765045,
                    0.012314015999436378,
                    -0.04187028110027313,
                    -0.022906433790922165,
                    0.03458963707089424,
                    0.03238178789615631,
                    0.016716571524739265,
                    -0.015730924904346466,
                    0.028780890628695488,
                    0.024036642163991928,
                    -0.010533279739320278,
                    -0.007964027114212513,
                    0.005641186144202948,
                    -0.02759811468422413,
                    0.025403406471014023,
                    -0.03593011572957039,
                    -0.03201381117105484,
                    -0.018950704485177994,
                    0.046522535383701324,
                    -0.01483727153390646,
                    -0.010415002703666687,
                    -0.0020830004941672087,
                    -0.024417759850621223,
                    0.02967454306781292,
                    -0.008713118731975555,
                    -0.010454428382217884,
                    0.011959183029830456,
                    0.04166001081466675,
                    0.038979049772024155,
                    -0.0331965871155262,
                    0.004432125482708216,
                    0.026901589706540108,
                    -0.027335274964571,
                    -0.02199963852763176,
                    -0.0344582162797451,
                    0.0032805614173412323,
                    -0.016953127458691597,
                    -0.005312636960297823,
                    0.006055157631635666,
                    0.001871086424216628,
                    -0.009941891767084599,
                    -0.0033282011281698942,
                    -0.008522560819983482,
                    -0.04515577107667923,
                    0.0010973535245284438,
                    0.005085938144475222,
                    -0.020107196643948555,
                    -0.006478985771536827,
                    0.03666606545448303,
                    -0.018793001770973206,
                    0.02479887753725052,
                    -0.004192284774035215,
                    -0.005667469929903746,
                    -0.014482438564300537,
                    0.029332851991057396,
                    -0.02101399190723896,
                    -0.030752183869481087,
                    0.029858531430363655,
                    -0.015586363151669502,
                    -0.024325765669345856,
                    -0.020632876083254814,
                    0.02836034819483757,
                    -0.00741863576695323,
                    -0.0012542357435449958,
                    -0.025613678619265556,
                    -0.023668667301535606,
                    0.041186898946762085,
                    0.003942587878555059,
                    0.009343933314085007,
                    -0.007096657995134592,
                    0.007668333128094673,
                    0.0331965871155262,
                    -0.04720591753721237,
                    0.0019335107645019889,
                    0.026191923767328262,
                    -0.013352230191230774,
                    0.017334243282675743,
                    0.029096297919750214,
                    0.042343392968177795,
                    0.03403767570853233,
                    0.02595536969602108,
                    0.0019433671841397882,
                    -0.011308656074106693,
                    0.008575128391385078,
                    0.04646996781229973,
                    -0.04397299513220787,
                    0.006337709724903107,
                    0.002991438377648592,
                    0.015691498294472694,
                    0.030752183869481087,
                    0.006998093333095312,
                    0.005618187598884106,
                    0.005338920745998621,
                    -0.0357724130153656,
                    0.004566830582916737,
                    0.03004251793026924,
                    -0.008949673734605312,
                    -0.012241735123097897,
                    -0.01690055988729,
                    -0.018963847309350967,
                    -0.03903161734342575,
                    0.019910067319869995,
                    -0.030357925221323967,
                    -0.0009996102889999747,
                    0.020987708121538162,
                    0.008016594685614109,
                    -0.014942407608032227,
                    0.01676913909614086,
                    -0.02206534892320633,
                    -0.0018940848531201482,
                    -0.0014275453286245465,
                    0.010185018181800842,
                    4.5432163460645825e-05,
                    -0.009015384130179882,
                    -0.003768456866964698,
                    0.0422382578253746,
                    0.03868992626667023,
                    -0.008246579207479954,
                    0.022906433790922165,
                    0.007891746237874031,
                    -0.020540881901979446,
                    -0.009429355151951313,
                    0.004179142881184816,
                    -0.04526090621948242,
                    0.015468086116015911,
                    0.013398227281868458,
                    -0.023970933631062508,
                    0.031540703028440475,
                    0.011650346219539642,
                    -0.0006788643077015877,
                    -0.007832607254385948,
                    0.031540703028440475,
                    -0.032460637390613556,
                    0.022025924175977707,
                    -0.00418242858722806,
                    -0.037402015179395676,
                    -0.020856289193034172,
                    -0.013286520726978779,
                    0.025876516476273537,
                    -0.01282655168324709,
                    0.034405648708343506,
                    0.0003232100571040064,
                    0.019515808671712875,
                    -0.0370866097509861,
                    -0.009074523113667965,
                    0.052620403468608856,
                    -0.0364295095205307,
                    0.020080912858247757,
                    0.011873760260641575
                ],
                "vulnerabilityIdentifier": "ossfuzz-pcre2-61268"
            }
        },
        "relation1": {
            "identity": 21694,
            "start": 10499,
            "end": 8438,
            "type": "VULNERABLE_COMMIT",
            "properties": {}
        },
        "oneEdgeAway": {
            "identity": 8438,
            "labels": [
                "Commit"
            ],
            "properties": {
                "message": "Update unknown error number test in RunTest.bat\n",
                "sha": "b0b3fc4c4bc4bd8ada9ada3292a28a44570794f1",
                "repo": "pcre2",
                "encoding": "UTF-8",
                "authored_date": 1691338877,
                "committer_tz_offset": -3600,
                "author_tz_offset": -3600,
                "committed_date": 1691338877
            }
        },
        "relation2": null,
        "twoEdgesAway": {
            "identity": null,
            "labels": null,
            "properties": null
        }
    }
]