from langchain.tools import BaseTool
from output_schemas import FindCallersOutput

class FindCallersTool(BaseTool):
    name = "find_callers"
    description = "Find callers of a specific function in the source code."

    def _run(self, function_name: str) -> dict:
        # Simulate finding callers of the function
        callers = [
            FindCallersOutput(caller_function="main", line_number=10, file_path="example.py")
        ]
        return [caller.model_dump() for caller in callers]

    async def _arun(self, function_name: str) -> dict:
        # Simulate finding callers of the function
        callers = [
            FindCallersOutput(caller_function="main", line_number=10, file_path="example.py")
        ]
        return [caller.model_dump() for caller in callers]
